{"version":3,"sources":["components/routes/listItems.js","components/routes/ChildListItems.js","components/routes/ParentListItems.js","components/layout/Footer.js","components/api/OKTA.js","components/api/enitity.crud.js","components/context/UserContext.js","components/layout/Layout.js","components/okta/Home.js","components/okta/OktaSignInWidget.js","components/okta/Login.js","components/entity/TestAutocomplete.js","components/entity/AddEntity.js","components/api/attachment.js","components/entity/ComplianceTaskList.js","components/entity/ContactList.js","components/attachment/AttachmentTable.js","components/api/message.js","components/message/AdminSendMessageForm.js","components/message/SendMessageForm.js","components/message/AllMessages.js","components/message/NewChatPanel.js","components/entity/ChildDetailedPage.js","components/dashboard/Dashboard.js","components/message/MainChatApp.js","components/entity/EntityDetailedPage.js","components/entity/SelfDetailedPage.js","components/api/contact.crud.js","components/contact/AddContactForm.js","components/attachment/Attachments.js","components/contact/Contacts.js","components/attachment/AddAttachmentForm.js","components/privacy/Privacy.js","components/entity/ExampleTable.js","components/attachment/AdminAttachmentForm.js","components/message/NewChatPanelForLogs.js","components/message/MessageLog.js","components/routes/AppWithRouterAccess.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","link","color","textDecoration","MainListItems","classes","className","to","ListItem","button","ListItemIcon","ListItemText","primary","ChildListItems","ParentListItems","Footer","Typography","variant","align","Link","href","Date","getFullYear","fetchUserProfile","sub","a","fetch","process","headers","Accept","Authorization","response","Promise","resolve","json","ENTITY","entityList","token","JSON","parse","localStorage","getItem","checkRole","eid","bit","tokenOKTA","okta","accessToken","entityDetail","entity","selfEntityDetail","ContactTypeList","email","EntityList","EntitytypesList","StateRegionList","createEntity","data","method","body","lorexFileUpload","UserContext","createContext","drawerState","role","title","profile","attributes","loading","errorList","currentEntity","userMessages","Consumer","withOktaAuth","props","useOktaAuth","authState","authService","useState","setTitle","setDrawerState","setToken","setProfile","setAttributes","appLoader","setAppLoader","setErrorList","setCurrentEntity","setUserMessages","setRole","outerThreads","setOuterThreads","messageLogThreads","setMessageLogThreads","React","useEffect","undefined","initialUtliz","length","map","value","index","setTimeout","removeError","removeItem","getToken","getUserProfile","result_profile","getUserAttributes","result_attributes","getUserRole","setInterval","tokenResult","getUser","UserData","AllAttributes","organization_parent","toLowerCase","organization","get_role","status","setItem","addError","message","array","splice","Provider","addTitle","changeDrawer","updateCurrentEntity","setUserMessagesForInbox","addMessage","UserRole","currentUser","id","Math","floor","random","newDate","moment","format","from_eid","elementsIndex","findIndex","element","Subject","subject","newArray","child","toString","entity_id","fromEid","from","gid","sendTime","manageOuterThreads","setMessageForLogs","children","theme","root","display","toolbar","paddingRight","backgroundColor","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","chevronLeftIcon","flexGrow","textTransform","fontSize","drawerPaper","position","whiteSpace","breakpoints","up","flexShrink","drawerPaperClose","overflowX","spacing","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","listColor","useContext","matches","useMediaQuery","maxWidth","useHistory","timerToClearSomewhere","useRef","current","clear","logout","clearTimeout","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","openMenu","Boolean","maxSnack","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","event","currentTarget","name","anchorOrigin","vertical","horizontal","keepMounted","open","onClose","TransitionComponent","Fade","getContentAnchorEl","MenuItem","Drawer","ModalProps","Divider","List","Container","Box","pt","size","login","bind","this","isPending","isAuthenticated","Component","OktaSignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","features","showPasswordToggleOnSignInPage","clientId","redirectUri","authScheme","logo","authParams","issuer","responseType","scopes","authorizeUrl","renderEl","onSuccess","onError","remove","Copyright","paperContainer","marginTop","avatar","margin","palette","secondary","main","form","submit","Login","res","redirect","sessionToken","session","err","console","log","pathname","style","mt","withStyles","smartyStreetsSharedCredentials","SmartyStreetsSDK","SharedCredentials","autoCompleteClient","ClientBuilder","buildUsAutocompleteClient","IntegrationDownshift","left","right","chip","inputRoot","flexWrap","inputInput","divider","suggestions","setSuggestions","setValue","getFinal","setGetFinal","sendDatatoParent","resetState","reset","addressObject","smartyHandler","Lookup","target","lookup","send","then","add","result","selectedItem","onStateChange","changes","hasOwnProperty","newObject","find","text","inputValue","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","isOpen","clearSelection","getRootProps","onInputValueChange","placeholder","onBlur","onFocus","inputProps","disabled","error","required","helperText","InputProps","ref","other","TextField","onChange","inputRef","input","renderInput","fullWidth","label","InputLabelProps","shrink","Paper","square","showEmpty","deburr","trim","inputLength","count","filter","suggestion","keep","slice","getSuggestions","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","selected","key","fontWeight","renderSuggestion","item","client","buildUsStreetApiClient","useStylesFacebook","top","bottom","animationDuration","backButton","instructions","marginBottom","adjustment","companyinfo","listStyle","minHeight","listItem","textField","textFieldOther","textFieldCity","textFieldtwofield","selectField","dense","checkbox","fileUpapiLoading","submitButton","float","restButton","loader","success","green","fileError","dark","info","warning","amber","icon","iconVariant","opacity","paddingLeft","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","MySnackbarContentWrapper","Icon","SnackbarContent","elevation","aria-describedby","action","setOpen","userAgree","setUserAgree","setAddressObject","addressValue","setAddressValue","addressReset","setAddressReset","setIsValidAddress","apiLoading","setApiLoading","setError","setContactType","FillingStructureData","setFillingStructureData","StateRegion","setStateRegion","successMessage","setSuccessMessage","fiscal","inputName","setInputName","inputComplianceOnly","setInputComplianceOnly","inputFillingState","setInputFillingState","inputFillingStructure","setInputFillingStructure","inputFormationDate","setInputFormationDate","inputFiscalDate","setInputFiscalDate","inputNotificationEmail","setInputNotificationEmail","inputNotificationPhone","setInputNotificationPhone","inputNotificationAddress","setInputNotificationAddress","inputEIN","setInputEIN","inputNotificationCity","setInputNotificationCity","inputNotificationState","setInputNotificationState","inputNotificationZip","setInputNotificationZip","inputFiling","setInputFiling","inputBusinessPurpose","setInputBusinessPurpose","inputForeign","setInputForeign","inputFileName","setInputFileName","inputFileSize","setInputFileSize","handleClose","iAgree","handleOnSubmit","FacebookProgress","CircularProgress","thickness","disableShrink","city","state","fetchDataforDropdownsContactTypeList","fetchDataforDropdownsFillingStructureData","fetchDataforDropdownsStateRegion","ContactTypeListLocal","stringify","EntitytypesListLocal","StateRegionListLocal","fileChange","e","files","formData","FormData","append","filename","record_id","file_size","file","resetForm","addressCheck","lookup1","street","streetLine","zipCode","valid","utils","isValid","lookups","createEntitysubmit","userResponse","preventDefault","formsubmit","parseInt","zip","type","window","location","reload","field_error","Object","keys","forEach","scrollTo","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Grid","onSubmit","noValidate","autoComplete","FormGroup","row","FormControlLabel","checked","control","Checkbox","labelPlacement","FormControl","InputLabel","htmlFor","Select","anObjectMapped","code","FormHelperText","CustomFileInput","File","invalid","AttachmentsList","zoho_id","attachFiles","taskUpdate","table","minWidth","ComplianceTaskList","setLoading","setStatus","taskID","setTaskID","taskUpdateController","update","xs","isLoading","actions","rowData","tooltip","options","selection","actionsColumnIndex","columns","withRouter","history","isFreeAction","push","url","sorting","fileId","search","sendMessageAPI","axios","post","TemplateList","getTemplate","FetchThreads","sendMessageFormChat","FetchMessageLogs","subjectDense","baseColor","textAlign","demo","attachmentSection","AdminSendMessageForm","match","params","setContent","setSubject","sendasEmail","setSendasEmail","messageType","setMessageType","fileLink","templates","setTemplates","note","phone","mail","noteType","noteChosen","setNoteChosen","fileObjects","setFileObjects","getTemplateList","results","sendMessageSubmission","resetFormError","val","toast","POSITION","BOTTOM_LEFT","handleTemplateListing","newValue","bytesToSize","bytes","i","round","pow","Autocomplete","getOptionLabel","option","entries","disable","editor","getData","md","ListItemAvatar","Avatar","ListItemSecondaryAction","removeFileFromArray","dialogTitle","acceptedFiles","filesLimit","cancelButtonText","submitButtonText","maxFileSize","onAdd","newFileObjs","concat","onSave","useChipsForPreview","SendMessageForm","background","inline","viewButton","SkeletonLoading","skeletonWidth","skeletonStyle","AllMessages","threads","setThreads","getAllMessageThreads","stripHTML","myString","replace","truncate","str","no_words","split","join","lastMessage","threadInfo","lastChild","Skeleton","animation","Fragment","openmodal","alt","src","entityName","HtmlToReactParser","require","Parser","NewChatPanel","createRef","IncomingIDFromAllMessages","inComingThreadID","setActiveThread","chosenThread","setChosenThread","updateThread","setUpdateThread","setMessage","setFile","setKey","componentLoading","setComponentLoading","obj","o","scrollToBottom","animateScroll","containerId","delay","smooth","onClickThread","threadID","getInitials","string","names","initials","substring","toUpperCase","sendMessage","convertHTML","htmlInput","messageOrientation","currentActiveUser","namePicker","isHTML","aria-hidden","attachments","path","Chip","clickable","onDelete","handleDelete","onKeyPress","multiple","accept","hidden","incomingFile","Modal","setAppElement","document","getElementById","errorMessage","breadcrumbsDiv","breadcrumbsInner","listInner","messageSection","messageTitle","rootDrawer","largeIcon","entitydetail","setEntitydetail","contactList","setContactList","attachmentList","setAttachmentList","taskList","setTaskList","compliance","setComplainace","setState","modalIsOpen","setIsOpen","fetchDetailedProfile","detailedView","reject","contacts","tasks","errors","detail","updateComplianceTable","contactData","field","taskData","attachmentData","editable","closeModal","toggleDrawer","disableEnforceFocus","anchor","sm","Card","CardHeader","gutterBottom","CardContent","stateId","formationDate","expirationDate","subheader","registerAgent","fileAs","address","address2","zipcode","shippingStreet","shippingCity","shippingState","shippingCode","onAfterOpen","onRequestClose","contentLabel","ariaHideApp","overlay","entitydata","setEntityData","asyncDataFetch","fetchData","parentChildData","rows","parentId","sideColor","appBarTitle","skeletonItem","Breadcrumbs","goBack","createContact","fileUpcomponentLoading","contactType","inputContactFirstName","setInputContactFirstName","inputContactLastName","setInputLastName","inputContactEmail","inputContactPhone","inputContactStreet","inputContactType","setInputNotificationContactType","inputContactCity","inputContactState","inputContactZipcode","isValidAddress","setErrorMessage","addressValueChangeHandler","contactsCreate","updateStates","native","fetchAttachmentData","documents","dummyData","listcontacts","setListcontacts","dummyDataa","fileUploading","formStyle","uploadCustom","privacyBody","privacyLogo","Privacy","bigData","createMuiTheme","direction","d","surname","isMarried","birthDate","birthCity","sex","insertDateTime","time","ExampleTable","birthYear","removable","34","63","handlePreviewIcon","fileObject","iconProps","image","startsWith","Theaters","Description","AttachFile","backdrop","setFiles","counter","entityId","setEntityId","setEntityList","fileIndex","entitylisitingLoader","EntityListLocal","prevState","account_name","getPreviewIcon","showPreviews","showPreviewsInDropzone","previewGridProps","previewChipProps","previewChip","previewText","disableRejectionFeedback","clearOnUnmount","getFileAddedMessage","fileName","NewChatPanelForLogs","scroller","getMessageID","searchButton","MessageLog","date","setDate","date2","setDate2","messagesLogs","setMessagesLogs","groupId","onAuthRequired","origin","pkce","exact","Dashboard","Home","SelfDetailedPage","EntityDetailedPage","AddEntity","AddContactForm","Attachments","Contacts","AddAttachmentForm","AdminAddAttachmentForm","render","LoginCallback","App","hostname","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3e804b91.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Attachment from '@material-ui/icons/Attachment';\r\nimport {Link} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    link: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n\r\n\r\n    }\r\n\r\n}))\r\n\r\nexport default function MainListItems() {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Link className={classes.link} to='/'>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <DashboardIcon color=\"primary\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Dashboard\"/>\r\n                </ListItem>\r\n            </Link>\r\n            {/*<Link className={classes.link} to='/entity/new/add'>*/}\r\n            {/*    <ListItem button>*/}\r\n            {/*        <ListItemIcon>*/}\r\n            {/*            <PeopleIcon color=\"primary\"/>*/}\r\n            {/*        </ListItemIcon>*/}\r\n            {/*        <ListItemText primary=\"Add entity\"/>*/}\r\n            {/*    </ListItem>*/}\r\n            {/*</Link>*/}\r\n            <Link className={classes.link} to='/attachments'>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <Attachment color=\"primary\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Attachments\"/>\r\n                </ListItem>\r\n            </Link>\r\n\r\n            <Link className={classes.link} to='/admin/attachments'>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <Attachment color=\"primary\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Bulk Attachments\"/>\r\n                </ListItem>\r\n            </Link>\r\n\r\n            <Link className={classes.link} to='/contacts'>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Contacts\"/>\r\n                </ListItem>\r\n            </Link>\r\n\r\n            <Link className={classes.link} to='/message/logs'>\r\n                <ListItem button>\r\n                    <ListItemIcon>\r\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Message Log\"/>\r\n                </ListItem>\r\n            </Link>\r\n\r\n        </div>)\r\n};\r\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ChildListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            {/*<Link className={classes.link} to='/entity/new/add'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <PeopleIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Add entity\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n            {/*<Link className={classes.link} to='/attachments'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <Attachment color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Attachments\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n            {/*<Link className={classes.link} to='/contacts'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <ContactPhoneOutlinedIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Contacts\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n\n        </div>)\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ParentListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}\r\n            <Link color=\"inherit\" href=\"/privacy-policy\">\r\n                Privacy Policy\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n","export const fetchUserProfile = async (sub) => {\r\n\r\n    const response = await fetch(process.env.REACT_APP_OKTA_BASE_URL + `api/v1/users/${sub}`, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            Accept: 'application/json',\r\n            Authorization: `SSWS ${process.env.REACT_APP_OKTA_API_TOKEN}`,\r\n        }\r\n    });\r\n    return Promise.resolve(response.json());\r\n\r\n\r\n}\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\nconst LOREX_TOKEN = process.env.REACT_APP_LOREX_TOKEN;\r\nconst LOREX_API_HOST = process.env.REACT_APP_LOREX_API_HOST;\r\n\r\n\r\n\r\n// const LOREX_TOKEN = '3cJe5YXiSBGUAqYd0uFC2cKYvgfBIUswmXTudN3HQfvzIGvddfVYjPmakGOkGVM9g5YRKJR2FF9iYuZQ0GsbGw';\r\n// const LOREX_API_HOST = 'https://lorax-api-sandbox.filemystuff.com';\r\nexport const LOGIN_URL = \"api/auth/login\";\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ENTITY = HOST;\r\n\r\n\r\n\r\nexport const ME_URL = \"api/me\";\r\n\r\nexport const entityList = async (token) => {\r\n\r\n\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Entity/getChildAccount`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const checkRole = async (eid,bit, tokenOKTA) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    var response = '';\r\n    if(okta) {\r\n        if(bit === 1) {\r\n           response = await fetch(`${ENTITY}/entity/role?eid=${eid}&bit=${bit}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n        if(bit === 0) {\r\n         response = await fetch(`${ENTITY}/entity/role?eid=${eid}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkAdmin = async (zoho_id, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/admin_api/checkadmin/?zoho_id=${zoho_id}&email=${email}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const entityDetail = async (entity) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview/?eid=${entity}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const selfEntityDetail = async () => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const ContactTypeList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/ContactTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const EntityList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/comboList`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const EntitytypesList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/EntityTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization':okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const StateRegionList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/States/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createEntity = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const lorexFileUpload = async (data) => {\r\n\r\n\r\n    // console.log('LOREX_TOKEN',LOREX_TOKEN);\r\n    // console.log('LOREX_URL',`${LOREX_API_HOST}/api/v1/upload`);\r\n    // console.log('LOREX_URL',HOST);\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${LOREX_API_HOST}/api/v1/upload`, {\r\n            method: 'post',\r\n            headers: {\r\n                'authorization': LOREX_TOKEN,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const testcall = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch('https://apidev.youragentservices.com/api/entity/add', {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {createContext, useState} from 'react'\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport {fetchUserProfile} from \"../api/OKTA\";\r\nimport {checkRole} from '../api/enitity.crud';\r\nimport moment from \"moment\";\r\n\r\n\r\nexport const UserContext = createContext(\r\n    {\r\n        drawerState: true,\r\n        role: '',\r\n        title: '',\r\n        token: '',\r\n        profile: '',\r\n        attributes: [],\r\n        loading: false,\r\n        errorList: [],\r\n        currentEntity: [],\r\n        userMessages: []\r\n    }\r\n);\r\n\r\nexport const UserConsumer = UserContext.Consumer;\r\n\r\nfunction UserContextProvider(props) {\r\n    const {authState, authService} = useOktaAuth();\r\n    const [title, setTitle] = useState('');\r\n    const [drawerState, setDrawerState] = useState(true);\r\n    const [token, setToken] = useState('');\r\n    const [profile, setProfile] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    const [appLoader, setAppLoader] = useState({loading: false});\r\n    const [errorList, setErrorList] = useState([]);\r\n    const [currentEntity, setCurrentEntity] = useState([]);\r\n    const [userMessages, setUserMessages] = useState([]);\r\n    const [role, setRole] = useState({});\r\n    const [outerThreads, setOuterThreads] = useState(false);\r\n    const [messageLogThreads, setMessageLogThreads] = useState([]);\r\n    React.useEffect(() => {\r\n        const okta = localStorage.getItem('okta-token-storage');\r\n        if (okta !== '{}' && okta !== null && okta !== undefined) {\r\n            initialUtliz();\r\n        }\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (errorList !== undefined || errorList.length !== 0) {\r\n            errorList.map((value, index) => {\r\n                setTimeout(() => {\r\n                    removeError(index);\r\n                }, 6000)\r\n            })\r\n        }\r\n\r\n    }, [errorList])\r\n\r\n\r\n    const initialUtliz = async () => {\r\n        localStorage.removeItem('role');\r\n        const tokenOKTA = await getToken();\r\n        // if(tokenOKTA === null){\r\n        //  authService.logout('/');\r\n        // }\r\n        const result_profile = await getUserProfile();\r\n        const result_attributes = await getUserAttributes(result_profile);\r\n        if (result_attributes) {\r\n            await getUserRole(result_attributes.profile, tokenOKTA);\r\n        }\r\n\r\n        setInterval(() => {\r\n            setAppLoader({...appLoader, loading: true});\r\n        }, 4000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const getToken = async () => {\r\n        const tokenResult = await authState.accessToken;\r\n        setToken(tokenResult);\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserProfile = async () => {\r\n\r\n        const tokenResult = await authService.getUser();\r\n        if (tokenResult) {\r\n            await setProfile({...profile, profile: tokenResult});\r\n        }\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserAttributes = async (UserData) => {\r\n        if (UserData) {\r\n            const AllAttributes = await fetchUserProfile(UserData.sub);\r\n            if (AllAttributes) {\r\n                await setAttributes({...attributes, attributes: AllAttributes.profile})\r\n            }\r\n            return Promise.resolve(AllAttributes);\r\n        }\r\n    }\r\n\r\n    const getUserRole = async (profile, tokenOKTA) => {\r\n        var organization_parent = '';\r\n        if (profile.organization_parent) {\r\n            const bit = profile.organization_parent.toLowerCase();\r\n            if (bit === 'yes') {\r\n                organization_parent = 1;\r\n            }\r\n        }\r\n        try {\r\n            const get_role = await checkRole(profile.organization, organization_parent ? organization_parent : 0, tokenOKTA);\r\n\r\n            if (get_role) {\r\n                if (get_role.status === true) {\r\n                    await localStorage.setItem('role', get_role.data.role);\r\n                    return Promise.resolve(setRole({...role, role: get_role.data.role}));\r\n                }\r\n                if (get_role.status === false) {\r\n                    return Promise.resolve(addError(get_role.message));\r\n                }\r\n            }\r\n\r\n            // if(get_role.type === 'error'){\r\n            //     window.location.reload();\r\n            // }\r\n            //\r\n            // if(get_role.status === 401){\r\n            //     window.location.reload();\r\n            // }\r\n\r\n\r\n            if (get_role.message) {\r\n                addError(get_role.message)\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addError = (data) => {\r\n        setErrorList(errorList => [...errorList, data])\r\n    }\r\n\r\n    const addTitle = (data) => {\r\n        setTitle(data);\r\n    }\r\n\r\n    const updateCurrentEntity = (data) => {\r\n        setCurrentEntity(data)\r\n    }\r\n\r\n\r\n    const removeError = (index) => {\r\n        var array = [...errorList]; // make a separate copy of the array\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            setErrorList(array)\r\n        }\r\n\r\n    }\r\n\r\n    const changeDrawer = (data) => {\r\n        setDrawerState(data);\r\n    }\r\n\r\n\r\n    const setUserMessagesForInbox = (data) => {\r\n        setUserMessages(data);\r\n    }\r\n    const manageOuterThreads = (data) => {\r\n        setOuterThreads(data);\r\n    }\r\n\r\n\r\n    const setMessageForLogs = (data) => {\r\n        setMessageLogThreads(data)\r\n    }\r\n\r\n    const addMessage = (data, message, UserRole, currentUser) => {\r\n        const id = Math.floor((Math.random() * 10) + 1);\r\n        let newDate = moment().format(\"YYYY-MM-DD hh:mm:ss\");\r\n        const from_eid = UserRole === 'Administrator' ? '0' : currentUser;\r\n\r\n        const elementsIndex = userMessages.findIndex(element => element.id === data.id)\r\n        const Subject = 'RE: '+userMessages[elementsIndex].subject;\r\n\r\n        let newArray = [...userMessages];\r\n        newArray[elementsIndex] = {\r\n            ...newArray[elementsIndex], child: [...newArray[elementsIndex].child, {\r\n                id: id.toString(),\r\n                entity_id: data.entity_id,\r\n                fromEid: from_eid,\r\n                from: \"najm@mts.youragentservices.com\",\r\n                gid: data.id,\r\n                message: message,\r\n                sendTime: newDate,\r\n                status: \"delivered\",\r\n                subject: Subject,\r\n                to: \"najm.a@allshorestaffing.com\",\r\n\r\n            }]\r\n        }\r\n        setUserMessages(newArray);\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                ...token,\r\n                ...profile,\r\n                ...attributes,\r\n                ...appLoader,\r\n                ...role,\r\n                title,\r\n                errorList,\r\n                addError,\r\n                addTitle,\r\n                drawerState,\r\n                changeDrawer,\r\n                removeError,\r\n                updateCurrentEntity,\r\n                currentEntity,\r\n                setUserMessagesForInbox,\r\n                userMessages,\r\n                addMessage,\r\n                outerThreads,\r\n                manageOuterThreads,\r\n                setMessageForLogs,\r\n                messageLogThreads\r\n            }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(UserContextProvider);\r\n","import React, {useContext, useRef} from 'react';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MainListItems from '../routes/listItems';\r\nimport ChildListItems from '../routes/ChildListItems';\r\nimport ParentListItems from '../routes/ParentListItems';\r\nimport Footer from './Footer';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SnackbarProvider} from 'notistack';\r\n// import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {useOktaAuth, withOktaAuth} from \"@okta/okta-react\";\r\n\r\nimport {SemipolarLoading} from 'react-loadingg';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        backgroundColor: '#1e1e2d'\r\n    },\r\n    toolbarIcon: {\r\n        // color: '#434d6b',\r\n        // backgroundColor: '#434d6b',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: '#ffffff',\r\n        // backgroundColor: '#ffffff',\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n\r\n    chevronLeftIcon: {\r\n        color: '#ffffff'\r\n    },\r\n\r\n    title: {\r\n        marginLeft: 10,\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n\r\n    button: {\r\n        textTransform: \"none\",\r\n        fontSize: 14\r\n    },\r\n    drawerPaper: {\r\n\r\n        backgroundColor: '#1e1e2d',\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        backgroundColor: '#f0f0f6'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n    listColor: {\r\n        color: \"#ffffff\"\r\n    }\r\n\r\n\r\n}));\r\n\r\nexport default withOktaAuth(function Layout(props) {\r\n    const {authState} = useOktaAuth();\r\n    const {role, title, drawerState, changeDrawer, profile} = useContext(UserContext);\r\n    let timer;\r\n    let flag = 1;\r\n    // const theme = useTheme();\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery({maxWidth: 767});\r\n    // const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const history = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        // if (!matches) {\r\n        //     changeDrawer(true);\r\n        // }\r\n        if (matches) {\r\n            changeDrawer(false);\r\n        }\r\n    }, [matches]);\r\n    const timerToClearSomewhere = useRef();\r\n\r\n\r\n    const ClearSession = () => {\r\n        localStorage.clear();\r\n        props.authService.logout('/');\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (typeof role === \"undefined\") {\r\n            timerToClearSomewhere.current = setTimeout(function () {\r\n                ClearSession()\r\n            }, 40000);\r\n        } else {\r\n            clearTimeout(timerToClearSomewhere.current);\r\n        }\r\n\r\n    }, [role]);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        changeDrawer(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        changeDrawer(false);\r\n    };\r\n\r\n\r\n    // const OKTAClearanceFunction = setTimeout(() => {\r\n    //             if(flag === 1) {\r\n    //                 localStorage.clear();\r\n    //                 props.authService.logout('/');\r\n    //             }\r\n    //     }, 40000);\r\n    //\r\n    //\r\n    // const myStopFunction = () => {\r\n    //     flag = 2;\r\n    //     console.log('timeout');\r\n    //     console.log(flag)\r\n    //     clearTimeout(OKTAClearanceFunction);\r\n    // }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {role ?\r\n                <>\r\n\r\n                    <SnackbarProvider maxSnack={3}>\r\n                        <div className={classes.root}>\r\n                            <CssBaseline/>\r\n                            <AppBar position=\"absolute\"\r\n                                    className={clsx(classes.appBar, drawerState && classes.appBarShift)}>\r\n\r\n                                <Toolbar className={classes.toolbar}>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        aria-label=\"open drawer\"\r\n                                        onClick={handleDrawerOpen}\r\n                                        className={clsx(classes.menuButton, drawerState && classes.menuButtonHidden)}\r\n                                    >\r\n\r\n                                        <MenuIcon/>\r\n                                    </IconButton>\r\n                                    <Typography component=\"h1\" variant=\"h6\" noWrap className={classes.title}>\r\n                                        {title}\r\n                                    </Typography>\r\n                                    {/*<IconButton color=\"inherit\">*/}\r\n                                    {/*    <Badge badgeContent={4} color=\"secondary\">*/}\r\n                                    {/*        <NotificationsIcon/>*/}\r\n                                    {/*    </Badge>*/}\r\n                                    {/*</IconButton>*/}\r\n\r\n                                    <IconButton color=\"inherit\" onClick={handleClick}>\r\n                                        <Typography variant=\"h5\" className={clsx(classes.title, classes.button)}>\r\n                                            Hi, {profile.name ? profile.name : ''}\r\n                                        </Typography>\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        anchorOrigin={{\r\n                                            vertical: \"bottom\",\r\n                                            horizontal: \"right\"\r\n                                        }}\r\n                                        id=\"menu-list-grow\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={openMenu}\r\n                                        onClose={handleClose}\r\n                                        TransitionComponent={Fade}\r\n                                        getContentAnchorEl={null}\r\n                                    >\r\n                                        <MenuItem onClick={() => {\r\n                                            props.authService.logout('/');\r\n                                        }}>Logout</MenuItem>\r\n                                    </Menu>\r\n\r\n\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <Drawer\r\n                                variant=\"permanent\"\r\n                                classes={{\r\n                                    paper: clsx(classes.drawerPaper, !drawerState && classes.drawerPaperClose),\r\n                                }}\r\n                                open={drawerState}\r\n                                onClose={handleDrawerToggle}\r\n                                ModalProps={{\r\n                                    keepMounted: true, // Better open performance on mobile.\r\n                                }}\r\n                            >\r\n                                <div className={classes.toolbarIcon}>\r\n                                    <Typography component=\"h3\" variant=\"h6\" color=\"inherit\" noWrap\r\n                                                className={classes.title}>\r\n                                        AgentAdmin\r\n                                    </Typography>\r\n                                    <IconButton onClick={handleDrawerClose}>\r\n                                        <ChevronLeftIcon className={classes.chevronLeftIcon}/>\r\n                                    </IconButton>\r\n                                </div>\r\n                                <Divider/>\r\n                                {role === 'Administrator' ?\r\n                                    <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                                {role === 'Child Entity' ?\r\n                                    <List className={classes.listColor}><ChildListItems/></List> : ''}\r\n\r\n                                {role === 'Parent Organization' ?\r\n                                    <List className={classes.listColor}><ParentListItems/></List> : ''}\r\n\r\n                            </Drawer>\r\n                            <main className={classes.content}>\r\n                                <div className={classes.appBarSpacer}/>\r\n                                <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n                                    {props.children}\r\n\r\n                                    <Box pt={4}>\r\n                                        <Footer/>\r\n                                    </Box>\r\n                                </Container>\r\n                            </main>\r\n                        </div>\r\n                    </SnackbarProvider>\r\n                    <ToastContainer/>\r\n                </>\r\n                : <><SemipolarLoading className={'Test'} size={'large'} color={'#1e1e2d'}/></>}\r\n\r\n        </>\r\n\r\n    );\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport Layout from \"../layout/Layout\";\r\n\r\nexport default withOktaAuth(class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    async login() {\r\n        this.props.authService.login();\r\n    }\r\n\r\n    async logout() {\r\n        this.props.authService.logout('/');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.authState.isPending) return null;\r\n\r\n        const button = this.props.authState.isAuthenticated ?\r\n            <button onClick={this.logout}>Logout</button> :\r\n            <button onClick={this.login}>Login</button>;\r\n\r\n        return (\r\n            <Layout>\r\n            <div>\r\n                <Link to='/'>Home</Link><br/>\r\n                <Link to='/protected'>Protected</Link><br/>\r\n                <Link to='/dashboard'>Dashboard</Link><br/>\r\n                {button}\r\n            </div>\r\n            </Layout>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nexport default class OktaSignInWidget extends Component {\r\n    componentDidMount() {\r\n        const el = ReactDOM.findDOMNode(this);\r\n        this.widget = new OktaSignIn({\r\n            baseUrl: process.env.REACT_APP_OKTA_BASE_URL,\r\n            features: {\r\n                // idpDiscovery: true,\r\n                showPasswordToggleOnSignInPage: true\r\n            },\r\n            // idps: [\r\n            //     {type: process.env.REACT_APP_OKTA_IDPS_TYPE, id: process.env.REACT_APP_OKTA_IDPS_ID},\r\n            // ],\r\n            clientId: process.env.REACT_APP_OKTA_CLIENT_ID,\r\n            redirectUri: process.env.REACT_APP_OKTA_REDIRECT_URI,\r\n            authScheme: 'OAUTH2',\r\n            logo: '/media/agentadmin/logo/aa_full.png',\r\n            authParams: {\r\n                issuer: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default',\r\n                display: 'page',\r\n                responseType: ['id_token', 'token'],\r\n                scopes: ['openid', 'email', 'profile', 'address', 'phone'],\r\n                authorizeUrl: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default/v1/authorize',\r\n            },\r\n\r\n        });\r\n        this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.widget.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div/>;\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography className={'copyright'} variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}\r\n            <Link color=\"inherit\" href=\"/privacy-policy\">\r\n                Privacy Policy\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paperContainer: {\r\n        backgroundColor: '#000000'\r\n    },\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    onSuccess(res) {\r\n        if (res.status === 'SUCCESS') {\r\n            return this.props.authService.redirect({\r\n                sessionToken: res.session.token\r\n            });\r\n        } else {\r\n            // The user can be in another authentication state that requires further action.\r\n            // For more information about these states, see:\r\n            //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n        }\r\n    }\r\n\r\n    onError(err) {\r\n        console.log('error logging in', err);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        if (this.props.authState.isPending && this.props.authState.isAuthenticated) return null;\r\n        return this.props.authState.isAuthenticated ?\r\n            <Redirect to={{pathname: '/'}}/> :\r\n\r\n            <div className={'paperContainer'}>\r\n                <Particles   style={{\r\n                    width: '100%',\r\n                    position:'absolute'\r\n                }} className={'particles'} />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Box className={'okta-custom'} mt={3}>\r\n                            <OktaSignInWidget\r\n                                baseUrl={this.props.baseUrl}\r\n                                onSuccess={this.onSuccess}\r\n                                onError={this.onError}/>\r\n                        </Box>\r\n                    </div>\r\n                    <Box>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(useStyles)(withOktaAuth(Login));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport deburr from 'lodash.deburr';\r\nimport Downshift from 'downshift';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst autoCompleteClientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nconst autoCompleteClient = autoCompleteClientBuilder.buildUsAutocompleteClient();\r\n\r\n\r\n\r\n\r\nexport default function IntegrationDownshift(props) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        container: {\r\n            flexGrow: 1,\r\n            position: 'relative',\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n            marginTop: theme.spacing(1),\r\n            left: 0,\r\n            right: 0,\r\n            width: props.width ?? props.width,\r\n        },\r\n        chip: {\r\n            margin: theme.spacing(0.5, 0.25),\r\n        },\r\n        inputRoot: {\r\n            flexWrap: 'wrap',\r\n        },\r\n        inputInput: {\r\n            width: 'auto',\r\n            flexGrow: 1,\r\n        },\r\n        divider: {\r\n            height: theme.spacing(2),\r\n        },\r\n    }));\r\n    const [suggestions, setSuggestions] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [getFinal, setGetFinal] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        sendDatatoParent();\r\n    },[getFinal,value])\r\n\r\n    React.useEffect(() => {\r\n        resetState();\r\n    },[props.reset])\r\n\r\n    const resetState = () => {\r\n        if(props.reset === 'reset') {\r\n            setValue('');\r\n            setGetFinal([]);\r\n        }\r\n    }\r\n\r\n    const sendDatatoParent = () => {\r\n        // if(props.reset == 'reset') {\r\n        //     setSuggestions([]);\r\n        //     setValue('');\r\n        //     setGetFinal([]);\r\n        // }\r\n        // const [addressobject, addressvalue] = props;\r\n        if(getFinal !== undefined && getFinal.length !== 0) {\r\n            props.addressObject(getFinal)\r\n        } else {\r\n            props.addressObject(value)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleStateChange = changes => {\r\n        if (changes.hasOwnProperty('selectedItem')) {\r\n            setValue(changes.selectedItem);\r\n            const value = changes.selectedItem;\r\n            const newObject = suggestions.find((value) => value.text === changes.selectedItem);\r\n            setGetFinal(newObject);\r\n        } else if (changes.hasOwnProperty('inputValue')) {\r\n            setGetFinal([]);\r\n            setValue(changes.inputValue);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const smartyHandler = async (event) => {\r\n        const lookup = await new SmartyStreetsSDK.usAutocomplete.Lookup(event.target.value);\r\n        autoCompleteClient.send(lookup)\r\n            .then(response => {\r\n                const add = response.result\r\n                setSuggestions(add);\r\n            })\r\n    }\r\n\r\n\r\n    function renderInput(inputProps) {\r\n        const {disabled, required, error, className, helperText} = props\r\n        const {InputProps, classes, ref, ...other} = inputProps;\r\n        return (\r\n            <TextField\r\n\r\n                className={className}\r\n                disabled={disabled}\r\n                required\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={(event) => smartyHandler(event)}\r\n                InputProps={{\r\n                    inputRef: ref,\r\n                    classes: {\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    },\r\n                    ...InputProps,\r\n                }}\r\n                {...other}\r\n            />\r\n        );\r\n    }\r\n\r\n    function renderSuggestion(suggestionProps) {\r\n\r\n        const {suggestion, index, itemProps, highlightedIndex, selectedItem} = suggestionProps;\r\n        const isHighlighted = highlightedIndex === index;\r\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n        return (\r\n            <MenuItem\r\n\r\n                {...itemProps}\r\n                selected={isHighlighted}\r\n                key={suggestion.text}\r\n                component=\"div\"\r\n                style={{fontWeight: isSelected ? 500 : 400,}}>\r\n                {suggestion.text}\r\n            </MenuItem>\r\n        );\r\n    }\r\n\r\n    function getSuggestions(value, {showEmpty = false} = {}) {\r\n        const inputValue = deburr(value.trim()).toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        let count = 0;\r\n\r\n        return inputLength === 0 && !showEmpty\r\n            ? inputValue\r\n            : suggestions.filter(suggestion => {\r\n                const keep =\r\n                    count < 5 && suggestion.text.slice(0, inputLength).toLowerCase() === inputValue;\r\n                if (keep) {\r\n                    count += 1;\r\n                }\r\n                return keep;\r\n            });\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div   className={classes.root}>\r\n            <Downshift selectedItem={value} onStateChange={handleStateChange} id=\"downshift-simple\">\r\n                {({\r\n                      getInputProps,\r\n                      getItemProps,\r\n                      getLabelProps,\r\n                      getMenuProps,\r\n                      highlightedIndex,\r\n                      inputValue,\r\n                      isOpen,\r\n                      selectedItem,\r\n                      clearSelection,\r\n                      getRootProps,\r\n                      onInputValueChange,\r\n                  }) => {\r\n                    const {onBlur, onFocus, ...inputProps} = getInputProps({\r\n                        placeholder: 'Address',\r\n                    });\r\n                    return (\r\n                        <div className={classes.container}>\r\n                            {renderInput({\r\n                                fullWidth: true,\r\n                                classes,\r\n                                label: 'Address',\r\n                                InputLabelProps: getLabelProps({shrink: true}),\r\n                                InputProps: {onBlur, onFocus},\r\n                                inputProps,\r\n                            })}\r\n\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square>\r\n                                        {inputValue !== '' ? getSuggestions(inputValue)?.map((suggestion, index) =>\r\n                                            renderSuggestion({\r\n                                                suggestion,\r\n                                                index,\r\n                                                itemProps: getItemProps({item: suggestion.text, index}),\r\n                                                highlightedIndex,\r\n                                                selectedItem,\r\n\r\n                                            }),\r\n                                        ) : null}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Downshift>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Layout from \"../layout/Layout\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {\r\n    ContactTypeList,\r\n    EntitytypesList,\r\n    StateRegionList,\r\n    createEntity,\r\n    lorexFileUpload\r\n} from \"../api/enitity.crud\";\r\n\r\nimport utils from \"smartystreets-javascript-sdk-utils\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport {UserContext} from '../context/UserContext';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n\r\n    label: {\r\n        fontSize: 14\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\nfunction AddEntity() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes,addTitle, loading, role } = useContext(UserContext);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [apiLoading, setApiLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [FillingStructureData, setFillingStructureData] = React.useState([])\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    const [successMessage, setSuccessMessage] = React.useState(false);\r\n    var d = new Date();\r\n    const fiscal = d.getFullYear() + '-12-31'\r\n\r\n    //form state\r\n    const [inputName, setInputName] = React.useState({value: '', error: ' ',});\r\n    const [inputComplianceOnly, setInputComplianceOnly] = React.useState({value: false, error: ' '});\r\n    const [inputFillingState, setInputFillingState] = React.useState({value: '', error: ' '});\r\n    const [inputFillingStructure, setInputFillingStructure] = React.useState({value: '', error: ' '});\r\n    const [inputFormationDate, setInputFormationDate] = React.useState({value: '', error: ' '});\r\n    const [inputFiscalDate, setInputFiscalDate] = React.useState({value: fiscal, error: ' '});\r\n\r\n\r\n    const [inputNotificationEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationAddress, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputEIN, setInputEIN] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationZip, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputBusinessPurpose, setInputBusinessPurpose] = React.useState({value: '', error: ' '});\r\n    const [inputForeign, setInputForeign] = React.useState({value: false, error: ' '});\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setApiLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true)\r\n\r\n    };\r\n\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                console.log('City', addressObject.city);\r\n                console.log('State', addressObject.state);\r\n                setInputNotificationCity({...inputNotificationCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputNotificationState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(loading === true) {\r\n            addTitle('Add New Entity');\r\n            fetchDataforDropdownsContactTypeList()\r\n            fetchDataforDropdownsFillingStructureData();\r\n            fetchDataforDropdownsStateRegion();\r\n        }\r\n    }, [loading]);\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await ContactTypeList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n                setContactType(response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fetchDataforDropdownsFillingStructureData = async () => {\r\n\r\n        var EntitytypesListLocal = await JSON.parse(localStorage.getItem(\"EntitytypesList\"));\r\n        if (EntitytypesListLocal) {\r\n            setFillingStructureData(EntitytypesListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await EntitytypesList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"EntitytypesList\", JSON.stringify(response.data));\r\n                setFillingStructureData(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await StateRegionList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n                setStateRegion(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = (value) => {\r\n        setAddressValue(value);\r\n    }\r\n\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setApiLoading(true);\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n                setInputFileSize({...inputFileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setInputFileName({...inputFileName, value: filename});\r\n                    setApiLoading(false);\r\n                }\r\n            } else {\r\n                setInputFiling({...inputFiling, error: response.message.file[0]});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n\r\n                setInputComplianceOnly({value: false, error: ' '})\r\n                setInputFillingState({value: '', error: ' '});\r\n                setInputFillingStructure({value: '', error: ' '});\r\n                setInputFormationDate({value: '', error: ' '});\r\n                setInputFiscalDate({value: fiscal, error: ' '});\r\n                setInputName({value: '', error: ' '});\r\n                setInputNotificationEmail({value: '', error: ' '});\r\n                setInputNotificationPhone({value: '', error: ' '});\r\n                setInputNotificationAddress({value: '', error: ' '});\r\n                setInputNotificationCity({value: '', error: ' '});\r\n                setInputNotificationState({value: '', error: ' '});\r\n                setInputNotificationZip({value: '', error: ' '});\r\n                setInputEIN({value: '', error: ' ', success: ' '});\r\n                setInputFiling({value: '', error: ' ', success: ' '})\r\n                setInputBusinessPurpose({value: '', error: ' '})\r\n                setInputForeign({value: false, error: ' '});\r\n                setInputFileName({value: '', error: ' ', success: ' '});\r\n                setInputFileSize({value: '', error: ' ', success: ' '});\r\n\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const addressCheck = async (event) => {\r\n\r\n\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputNotificationCity.value;\r\n        lookup1.state = inputNotificationState.value;\r\n        lookup1.zipCode = inputNotificationZip.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                createEntitysubmit(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        var formsubmit = true;\r\n        if (inputEIN.value) {\r\n            var value = parseInt(inputEIN.value)\r\n            if (typeof value === 'number') {\r\n                if (value.toString().length === 9) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (inputNotificationZip.value) {\r\n            var zip = parseInt(inputNotificationZip.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputNotificationCity.value && inputNotificationState.value && inputNotificationZip.value !== '') {\r\n                    formsubmit = false;\r\n                    const response = addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            createEntitysubmit(event, userResponse);\r\n        }\r\n    }\r\n\r\n\r\n    const createEntitysubmit = async (event) => {\r\n\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        setInputFiling({...inputFiling, value: '', success: ' ', error: ' '});\r\n        setInputFileSize({...inputFileSize, value: ''});\r\n        setInputFileName({...inputFileName, value: ''});\r\n        setInputName({...inputName, error: ' '})\r\n        setInputComplianceOnly({...inputComplianceOnly, error: ' '})\r\n        setInputFillingState({...inputFillingState, error: ' '})\r\n        // setInputFirstName({...inputFirstName, error: ' '})\r\n        // setInputLastName({...inputLastName, error: ' '})\r\n        setInputFillingStructure({...inputFillingStructure, error: ' '})\r\n        setInputFormationDate({...inputFormationDate, error: ' '})\r\n        setInputFiscalDate({...inputFiscalDate, error: ' '})\r\n        setInputNotificationEmail({...inputNotificationEmail, error: ' '})\r\n        setInputNotificationPhone({...inputNotificationPhone, error: ' '})\r\n        setInputNotificationAddress({...inputNotificationAddress, error: ' '})\r\n        setInputNotificationCity({...inputNotificationCity, error: ' '})\r\n        setInputNotificationState({...inputNotificationState, error: ' '})\r\n        setInputNotificationZip({...inputNotificationZip, error: ' '})\r\n        setInputBusinessPurpose({...inputBusinessPurpose, error: ' '})\r\n        setInputEIN({...inputEIN, error: ' '})\r\n        setInputForeign({...inputForeign, error: ' '});\r\n        setInputFileSize({...inputFileSize, error: ' '})\r\n        let formData = new FormData();\r\n\r\n        formData.append('inputName', inputName.value)\r\n        formData.append('inputComplianceOnly', inputComplianceOnly.value)\r\n        formData.append('inputForeign', inputForeign.value)\r\n        formData.append('inputFillingState', inputFillingState.value)\r\n        formData.append('inputFillingStructure', inputFillingStructure.value)\r\n        formData.append('inputFormationDate', inputFormationDate.value)\r\n        formData.append('inputFiscalDate', inputFiscalDate.value)\r\n        // formData.append('inputFirstName', inputFirstName.value)\r\n        // formData.append('inputLastName', inputLastName.value)\r\n        formData.append('inputNotificationEmail', inputNotificationEmail.value)\r\n        formData.append('inputNotificationPhone', inputNotificationPhone.value)\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputNotificationAddress', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputNotificationAddress', addressObject)\r\n        }\r\n        formData.append('inputEIN', inputEIN.value)\r\n\r\n        if (inputNotificationCity.value) {\r\n            formData.append('inputNotificationCity', inputNotificationCity.value);\r\n        } else {\r\n            formData.append('inputNotificationCity', '');\r\n        }\r\n        if (inputNotificationState.value) {\r\n            formData.append('inputNotificationState', inputNotificationState.value);\r\n        } else {\r\n            formData.append('inputNotificationState', '');\r\n        }\r\n        formData.append('inputNotificationZip', inputNotificationZip.value);\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputBusinessPurpose', inputBusinessPurpose.value)\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        // console.log(formData);\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0]+ ', ' + pair[1]);\r\n        // }\r\n\r\n        const response = await createEntity(formData);\r\n        if (response.type === 'error') {\r\n            window.location.reload();\r\n        }\r\n\r\n        if (response.status === 401) {\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n        if (response.field_error) {\r\n            setApiLoading(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n                if (key === 'inputName') {\r\n                    setInputName({...inputName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputComplianceOnly') {\r\n                    setInputComplianceOnly({...inputComplianceOnly, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFillingState') {\r\n                    setInputFillingState({...inputFillingState, error: response.field_error[key]})\r\n                }\r\n\r\n                // if (key === 'inputFirstName') {\r\n                //     setInputFirstName({...inputFirstName, error: response.field_error[key]})\r\n                // }\r\n                //\r\n                // if (key === 'inputLastName') {\r\n                //     setInputLastName({...inputLastName, error: response.field_error[key]})\r\n                // }\r\n                if (key === 'inputFillingStructure') {\r\n                    setInputFillingStructure({...inputFillingStructure, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputFormationDate') {\r\n                    setInputFormationDate({...inputFormationDate, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationEmail') {\r\n                    setInputNotificationEmail({...inputNotificationEmail, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationPhone') {\r\n                    setInputNotificationPhone({...inputNotificationPhone, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationAddress') {\r\n                    setInputNotificationAddress({...inputNotificationAddress, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationCity') {\r\n                    setInputNotificationCity({...inputNotificationCity, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationState') {\r\n                    setInputNotificationState({...inputNotificationState, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationZip') {\r\n                    setInputNotificationZip({...inputNotificationZip, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputBusinessPurpose') {\r\n                    setInputBusinessPurpose({...inputBusinessPurpose, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n                if (key === 'inputEIN') {\r\n                    setInputEIN({...inputEIN, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFiscalDate') {\r\n                    // setInputFiscalDate(inputFiscalDate => ...inputFiscalDate, error:response.field_error[key])\r\n                    setInputFiscalDate({...inputFiscalDate, value: fiscal, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n        if (response) {\r\n            if (response.status) {\r\n                await resetForm();\r\n                setApiLoading(false);\r\n                setSuccessMessage(true);\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n\r\n\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(false);\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setError(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            { role === 'Parent Organization' || role === 'Administrator' ?\r\n            <Paper className={classes.paper} elevation={3} >\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Please make sure that you have entered it correctly.\r\n                            If you proceed and we are unable to validate your address it may cause delays\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                            Accept\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {error ? (<MySnackbarContentWrapper\r\n                    onClose={()=>{removeErrorMessage()}}\r\n                    variant=\"error\"\r\n                    message=\"Something went wrong\"\r\n                />) : ''}\r\n\r\n                {successMessage ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeSuccess()}}\r\n                        variant=\"success\"\r\n                        message=\"Entity has been added\"\r\n                    />\r\n                ) : ''}\r\n\r\n                <Grid container spacing={0}>\r\n\r\n\r\n                    <form className={classes.container} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    value={inputName.value}\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputName.error !== ' '}\r\n                                    onChange={e => setInputName({...inputName, value: e.target.value})}\r\n                                    id=\"inputName\"\r\n                                    label=\"Entity Name\"\r\n                                    className={clsx(classes.textField, classes.dense, classes.label)}\r\n                                    margin=\"dense\"\r\n                                    helperText={inputName.error}\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputForeign.error !== ' ' ? \"true\" : \"false\"}\r\n                                    onChange={e => setInputForeign({\r\n                                        ...inputForeign,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputForeign.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Foreign Qualified\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputComplianceOnly.error !== ' ' ?  \"true\" : \"false\"}\r\n                                    onChange={e => setInputComplianceOnly({\r\n                                        ...inputComplianceOnly,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputComplianceOnly.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Compliance Only\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingState.error !== ' ' }>\r\n                                    <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Entity\r\n                                        State</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingState.error !== ' '}\r\n                                        value={inputFillingState.value}\r\n\r\n                                        onChange={e => setInputFillingState({\r\n                                            ...inputFillingState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingState',\r\n                                            id: 'inputFillingState',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)\r\n\r\n                                        }\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingStructure.error !== ' '}>\r\n                                    <InputLabel htmlFor=\"age-native-simple\">Entity Structure</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingStructure.error !== ' '}\r\n                                        value={inputFillingStructure.value}\r\n                                        onChange={e => setInputFillingStructure({\r\n                                            ...inputFillingStructure,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingStructure',\r\n                                            id: 'inputFillingStructure',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {FillingStructureData?.map((anObjectMapped, index) => <option\r\n                                            key={index}\r\n                                            value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingStructure.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Formation Date\"\r\n                                    format={'Y-M-d'}\r\n                                    error={inputFormationDate.error !== ' '}\r\n                                    value={inputFormationDate.value}\r\n                                    onChange={e => setInputFormationDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Fiscal Date\"\r\n                                    error={inputFiscalDate.error !== ' '}\r\n                                    value={inputFiscalDate.value}\r\n                                    onChange={e => setInputFiscalDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFiscalDate',\r\n                                        id: 'inputFiscalDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n\r\n                                    type=\"email\"\r\n                                    value={inputNotificationEmail.value}\r\n                                    onChange={e => setInputNotificationEmail({\r\n                                        ...inputNotificationEmail,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationEmail',\r\n                                        id: 'inputNotificationEmail',\r\n                                    }}\r\n                                    error={inputNotificationEmail.error !== ' '}\r\n                                    helperText={inputNotificationEmail.error}\r\n                                    label=\"Notification Email\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    value={inputNotificationPhone.value}\r\n                                    onChange={e => setInputNotificationPhone({\r\n                                        ...inputNotificationPhone,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationPhone',\r\n                                        id: 'inputNotificationPhone',\r\n                                    }}\r\n                                    error={inputNotificationPhone.error !== ' '}\r\n                                    helperText={inputNotificationPhone.error}\r\n                                    label=\"Notification Phone\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <Autocomplete\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    width={''}\r\n                                    addressObject={addressObjectChangeHandler}\r\n                                    addressValue={addressValueChangeHandler}\r\n                                    reset={addressReset}\r\n                                    onChange={e => setAddressValue({\r\n                                        ...addressValue,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationAddress',\r\n                                        id: 'inputNotificationAddress',\r\n                                    }}\r\n                                    error={inputNotificationAddress.error !== ' '}\r\n                                    helperText={inputNotificationAddress.error}\r\n                                    className={clsx(classes.dense)}\r\n                                />\r\n                            </div>\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    value={inputEIN.value}\r\n                                    onChange={e => setInputEIN({\r\n                                        ...inputEIN,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputEIN',\r\n                                        id: 'inputEIN',\r\n                                    }}\r\n                                    error={inputEIN.error !== ' '}\r\n                                    helperText={inputEIN.error}\r\n                                    label=\"EIN\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputNotificationCity.error !== ' '}\r\n                                    helperText={inputNotificationCity.error}\r\n                                    value={inputNotificationCity.value || ''}\r\n                                    onChange={e => setInputNotificationCity({\r\n                                        ...inputNotificationCity,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationCity',\r\n                                        id: 'inputNotificationCity',\r\n                                    }}\r\n                                    label=\"City\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-4'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputNotificationState.error !== ' '}>\r\n                                    <InputLabel>\r\n                                        State/Region/Province\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        // renderValue={inputNotificationState.value || ''}\r\n                                        value={inputNotificationState.value || ''}\r\n                                        onChange={e => setInputNotificationState({\r\n                                            ...inputNotificationState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputNotificationState',\r\n                                            id: 'inputNotificationState',\r\n                                        }}\r\n                                        error={inputNotificationState.error !== ' '}\r\n                                        // helperText={inputNotificationState.error}\r\n                                    >\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputNotificationState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    value={inputNotificationZip.value}\r\n                                    onChange={e => setInputNotificationZip({\r\n                                        ...inputNotificationZip,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationZip',\r\n                                        id: 'inputNotificationZip',\r\n                                    }}\r\n                                    error={inputNotificationZip.error !== ' '}\r\n                                    helperText={inputNotificationZip.error}\r\n                                    label=\"Postal / Zip Code\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUpapiLoading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                {inputFiling.success !== ' ' ? (<span>{inputFiling.success}</span>) : ' '}\r\n                                {inputFiling.error !== ' ' ? (\r\n                                    <span className={clsx(classes.fileError)}>{inputFiling.error}</span>) : ' '}\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    disabled={apiLoading}\r\n                                    placeholder=\"Business Purpose\"\r\n                                    value={inputBusinessPurpose.value}\r\n                                    error={inputBusinessPurpose.error !== ' '}\r\n                                    helperText={inputBusinessPurpose.error}\r\n                                    onChange={e => setInputBusinessPurpose({\r\n                                        ...inputBusinessPurpose,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'inputBusinessPurpose',\r\n                                        id: 'inputBusinessPurpose',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {apiLoading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n                                    {/*<input disabled={apiLoading}*/}\r\n                                    {/*       className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                    {/*       type=\"reset\"  value=\"Reset\"/>*/}\r\n\r\n                                    <input disabled={apiLoading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Create New Entity\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n                : <MySnackbarContentWrapper\r\n                    variant=\"error\"\r\n                    message={'Access Denied.'}\r\n                /> }\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddEntity);\r\n","const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\n\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const AttachmentsList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Documents/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const attachFiles = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/documents/attachment`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n// import {useHistory} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {taskUpdate} from '../api/attachment';\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ComplianceTaskList(props) {\r\n    localStorage.setItem('task', 'false');\r\n    const {addError} = useContext(UserContext);\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    // const [userAgree, setUserAgree] = React.useState(false);\r\n    const [status, setStatus] = React.useState('');\r\n    const [taskID, setTaskID] = React.useState()\r\n    // const [eid, setEid] = React.useState('');\r\n    // const [data, setData] = React.useState(props.data)\r\n    // const history = useHistory();\r\n    // const classes = useStyles();\r\n\r\n\r\n    // const data = [{id: \"4071993000002295199\", subject: \"Dissolve LLC FQ\", dueDate: \"2019-12-12\", status: \"Not Started\"}]\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setLoading(false);\r\n        return null;\r\n    };\r\n    const taskUpdateController = () => {\r\n        console.log('task', localStorage.getItem('task'))\r\n        if (localStorage.getItem('task') === 'false') {\r\n            setOpen(true);\r\n        }\r\n\r\n\r\n        if (localStorage.getItem('task') === 'true') {\r\n            setOpen(false);\r\n\r\n            let formData = new FormData();\r\n            formData.append('status', status);\r\n            formData.append('eid', props.eid);\r\n            taskUpdate(taskID, formData).then(response => {\r\n                if (response.message) {\r\n                    localStorage.setItem('task', 'false');\r\n                    props.update();\r\n                    setLoading(false);\r\n                }\r\n\r\n                if (response.type === 'error') {\r\n                    addError(response.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const iAgree = async (event) => {\r\n\r\n        localStorage.setItem('task', 'true');\r\n        taskUpdateController();\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Compliance Task\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure, you want to mark this task\r\n                        as {localStorage.getItem('userMessage') ? localStorage.getItem('userMessage') : ''}.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n\r\n                actions={[\r\n                    rowData => ({\r\n                        icon: 'check',\r\n                        position: 'row',\r\n                        tooltip: rowData.status === 'Completed' ? 'Mark this task Incomplete' : 'Mark this task Complete',\r\n                        onClick: (event, rowData) => {\r\n                            setLoading(true);\r\n                            if (rowData.status === 'Completed') {\r\n                                Promise.resolve(setStatus(0));\r\n                                localStorage.setItem('userMessage', 'Incomplete');\r\n                            } else {\r\n                                Promise.resolve(setStatus(1));\r\n                                localStorage.setItem('userMessage', 'Complete');\r\n                            }\r\n                            Promise.resolve(setTaskID(rowData.id));\r\n                            setOpen(true);\r\n\r\n\r\n                        }\r\n                    })\r\n                ]}\r\n\r\n                title={props.title !== '' ? props.title : ''}\r\n                options={{\r\n                    selection: props.selection ? props.selection : false,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ComplianceTaskList;\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ContactList(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={  props.action ? [\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ] : ''}\r\n                options={{\r\n                    sorting: true\r\n                }}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(ContactList);\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction AttachmentTable(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={[\r\n                    rowData => ({\r\n                        icon: () => <CloudDownloadIcon/>,\r\n                        tooltip: 'Download',\r\n                        onClick: (event, rowData) => {\r\n                            const url = `${process.env.REACT_APP_SERVER_API_URL}/download/${rowData.fileId}?token=${rowData.token}&name=${rowData.name}`;\r\n                            window.open(url,'_blank');\r\n                        }\r\n                    }),\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    sorting: true,\r\n                    search: true\r\n                }}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(AttachmentTable);\r\n","import {ENTITY} from \"./enitity.crud\";\r\nimport axios from 'axios';\r\n\r\nexport const sendMessageAPI = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        // const response = await fetch(`${ENTITY}/message/send`, {\r\n        //     method: 'post',\r\n        //     headers: {\r\n        //\r\n        //         'Access-Control-Allow-Origin': '*',\r\n        //         'Authorization': okta.accessToken.accessToken,\r\n        //         'Content-Type': 'multipart/form-data',\r\n        //     },\r\n        //     body: data\r\n        // });\r\n        // return Promise.resolve(response.json());\r\n    }\r\n    if (okta) {\r\n        const response = await axios.post(`${ENTITY}/message/send`, data, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n                'content-type': 'multipart/form-data'\r\n            },\r\n        })\r\n        return Promise.resolve(response.data);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const TemplateList = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        const response = await fetch(`${ENTITY}/templates/list`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const getTemplate = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        const response = await fetch(`${ENTITY}/templates/${data}`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const FetchThreads = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        const response = await fetch(`${ENTITY}/message/list/${data}`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageFormChat = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        const response = await fetch(`${ENTITY}/message/send`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const FetchMessageLogs = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n        const response = await fetch(`${ENTITY}/message/search`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport clsx from \"clsx\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {sendMessageAPI} from '../api/message';\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport {TemplateList, getTemplate} from \"../api/message\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {toast} from 'react-toastify';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {DropzoneArea, DropzoneDialogBase} from \"material-ui-dropzone\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        // width: '100%'\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n\r\n    subjectDense: {\r\n        marginTop: 0,\r\n        fontSize: 14\r\n    },\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    container: {\r\n        // display: 'flex',\r\n        // flexWrap: 'wrap',\r\n        // width: '100%'\r\n        // transform: 'scale(0.9)'\r\n    },\r\n    baseColor: {\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n        color: '#4D5D98'\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        marginBottom: 20,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    selectField: {\r\n        width: '100%'\r\n    },\r\n\r\n    demo: {\r\n        backgroundColor: '#F0F0F6',\r\n    },\r\n\r\n    attachmentSection: {\r\n        marginTop: 10,\r\n    }\r\n\r\n}));\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nfunction FacebookProgress(props) {\r\n    const classes = useStylesFacebook();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress\r\n\r\n                variant=\"determinate\"\r\n                value={100}\r\n                className={classes.top}\r\n                size={24}\r\n                thickness={4}\r\n                {...props}\r\n            />\r\n            <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                className={classes.bottom}\r\n                size={24}\r\n                thickness={4}\r\n                {...props}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AdminSendMessageForm = (props) => {\r\n    const classes = useStyles();\r\n    const {loading, addError, errorList, role, attributes, manageOuterThreads} = useContext(UserContext);\r\n\r\n    const entity_id = props.match.params.id ? props.match.params.id : attributes.organization;\r\n    const [content, setContent] = useState({value: '', error: ' '});\r\n    const [subject, setSubject] = useState({value: '', error: ' '});\r\n    const [sendasEmail, setSendasEmail] = useState(false);\r\n    const [messageType, setMessageType] = useState({value: '', error: ' '});\r\n    const [fileLink, setFileLink] = useState({value: '', error: ' ', success: ' '});\r\n    const [fileSize, setFileSize] = useState({value: '', error: ' '});\r\n    const [fileName, setFileName] = useState({value: '', error: ' '});\r\n    const [apiLoading, setApiLoading] = useState(false);\r\n    const [templates, setTemplates] = useState([]);\r\n    const [noteType, setNoteType] = useState({email: 'Email', note: 'Note', phone: 'Phone', mail: 'Mail'});\r\n    const [noteChosen, setNoteChosen] = useState({value: '', error: ' '});\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fileObjects, setFileObjects] = React.useState([]);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [fileTest, setFileTest] = React.useState('');\r\n\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            getTemplateList();\r\n        }\r\n    }, [loading]);\r\n\r\n    const getTemplateList = async () => {\r\n        try {\r\n            await TemplateList().then(response => {\r\n                setTemplates(response.data.results);\r\n            })\r\n        } catch (e) {\r\n            addError(e)\r\n        }\r\n    }\r\n\r\n    const dialogTitle = () => (\r\n        <>\r\n            <span>Upload file</span>\r\n            <IconButton\r\n                style={{right: '12px', top: '8px', position: 'absolute'}}\r\n                onClick={() => setOpen(false)}>\r\n                <CloseIcon/>\r\n            </IconButton>\r\n        </>\r\n    );\r\n\r\n\r\n    const removeFileFromArray = (index) => {\r\n        let array = [...fileObjects];\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n        setFileObjects(array);\r\n    }\r\n\r\n    const sendMessageSubmission = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        setApiLoading(true);\r\n        resetFormError();\r\n        const noteValue = sendasEmail ? 1 : 0;\r\n        let formData = new FormData();\r\n        formData.append('eid', entity_id);\r\n        formData.append('subject', subject.value);\r\n        if (sendasEmail) {\r\n            formData.append('note', '1');\r\n        } else {\r\n            formData.append('note', '0');\r\n        }\r\n        if (noteChosen.value) {\r\n            formData.append('notetype', noteChosen.value);\r\n        }\r\n        formData.append('message', content.value);\r\n\r\n        // fileObjects?.map((anObjectMapped, index))\r\n        // {\r\n        //     formData.append('attachment[]', anObjectMapped)\r\n        // }\r\n\r\n\r\n        fileObjects.map(function(val, index){\r\n            formData.append('attachment[]', val.file)\r\n        });\r\n\r\n        if (sendasEmail === true) {\r\n            if (noteChosen.value === '') {\r\n                setNoteChosen({...noteChosen, error: 'Choose the note type'});\r\n                toast.error('Choose the note type', {\r\n                    position: toast.POSITION.BOTTOM_LEFT\r\n                });\r\n                setApiLoading(false);\r\n                return false;\r\n            }\r\n        }\r\n        await sendMessageAPI(formData).then(response => {\r\n\r\n            if (response.status === true) {\r\n                setApiLoading(false);\r\n                manageOuterThreads(true);\r\n                toast.success(response.message, {\r\n                    position: toast.POSITION.BOTTOM_LEFT\r\n                });\r\n                resetForm()\r\n            }\r\n\r\n            if (response.status === false) {\r\n                setApiLoading(false);\r\n                if (response.error) {\r\n\r\n\r\n                    Object.keys(response.error).forEach((key, index) => {\r\n                        if (key === 'subject') {\r\n                            setSubject({...subject, error: response.error[key]})\r\n                            toast.error(response.error[key], {\r\n                                position: toast.POSITION.BOTTOM_LEFT\r\n                            });\r\n                        }\r\n\r\n                        if (key === 'message') {\r\n                            setContent({...subject, error: response.error[key]})\r\n                            toast.error(response.error[key], {\r\n                                position: toast.POSITION.BOTTOM_LEFT\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    function generate(element) {\r\n        return [0, 1, 2].map((value) =>\r\n            React.cloneElement(element, {\r\n                key: value,\r\n            }),\r\n        );\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setApiLoading(true);\r\n            setFileLink({...fileLink, value: '', success: ' '});\r\n            setFileSize({...fileSize, value: ''});\r\n            setFileName({...fileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setFileLink({...fileLink, value: response.record_id, success: 'uploaded'});\r\n                setFileSize({...fileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setFileName({...fileName, value: filename});\r\n                    setApiLoading(false);\r\n                }\r\n            } else {\r\n                setFileLink({...fileLink, error: response.message.file[0]});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setFileLink({...fileLink, value: '', success: ' '});\r\n            setFileSize({...fileSize, value: ''});\r\n            setFileName({...fileName, value: ''});\r\n        }\r\n    }\r\n\r\n    const handleTemplateListing = async (newValue) => {\r\n\r\n        setApiLoading(true);\r\n        if (newValue) {\r\n            setMessageType({\r\n                ...messageType,\r\n                value: newValue.id\r\n            })\r\n        } else {\r\n            setMessageType({\r\n                ...messageType,\r\n                value: ''\r\n            })\r\n        }\r\n        if (newValue) {\r\n            await getTemplate(newValue.id).then(response => {\r\n                if (response.status === true) {\r\n                    setContent({...content, value: response.data.message});\r\n                    setSubject({...subject, value: newValue.subject});\r\n                    setApiLoading(false);\r\n                }\r\n            })\r\n        } else {\r\n            setApiLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = () => {\r\n        setContent({...content, value: ''})\r\n        setSubject({...subject, value: ''})\r\n        setFileObjects([]);\r\n\r\n    }\r\n\r\n\r\n    const resetFormError = () => {\r\n        setContent({...content, error: ' '})\r\n        setSubject({...subject, error: ' '})\r\n        setNoteChosen({...noteChosen, error: ' '})\r\n\r\n    }\r\n\r\n    const bytesToSize = (bytes) => {\r\n        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"message-title\">\r\n                <Typography className={classes.baseColor} color=\"inherit\" variant=\"h5\">Send Message</Typography>\r\n            </div>\r\n            <form onSubmit={sendMessageSubmission} className={classes.container} noValidate autoComplete=\"off\">\r\n                <FormGroup row>\r\n\r\n                    <div className={'col-md-12'}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"primary\"/>}\r\n                            label=\"Send as Note\"\r\n                            className={'send-as-mail'}\r\n                            labelPlacement=\"start\"\r\n                            onChange={e => setSendasEmail(\r\n                                e.target.checked\r\n                            )}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*<div className={'col-md-12'}>*/}\r\n                    {/*    <FormControl className={clsx(classes.selectField)}*/}\r\n                    {/*                 error={messageType.error !== ' '}>*/}\r\n                    {/*        <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Message*/}\r\n                    {/*            Type</InputLabel>*/}\r\n                    {/*        <Select*/}\r\n                    {/*            disabled={apiLoading}*/}\r\n                    {/*            required*/}\r\n                    {/*            error={messageType.error !== ' '}*/}\r\n                    {/*            value={messageType.value}*/}\r\n\r\n                    {/*            onChange={e => handleTemplateListing(e)}*/}\r\n                    {/*            inputProps={{*/}\r\n                    {/*                name: 'messageType',*/}\r\n                    {/*                id: 'messageType',*/}\r\n                    {/*            }}>*/}\r\n                    {/*            <option value=\"\"/>*/}\r\n                    {/*            {templates?.map((anObjectMapped, index) => <option key={index}*/}\r\n                    {/*                                                               value={anObjectMapped.id}>{anObjectMapped.subject}</option>)*/}\r\n\r\n                    {/*            }*/}\r\n\r\n                    {/*        </Select>*/}\r\n                    {/*        <FormHelperText>{messageType.error}</FormHelperText>*/}\r\n                    {/*    </FormControl>*/}\r\n                    {/*</div>*/}\r\n\r\n                    <div className={'col-md-12'}>\r\n                        <FormControl className={clsx(classes.selectField)}\r\n                                     error={messageType.error !== ' '}>\r\n                            <Autocomplete\r\n                                disabled={apiLoading}\r\n                                onChange={(event, newValue) => {\r\n\r\n                                    handleTemplateListing(newValue)\r\n                                }}\r\n\r\n                                id=\"combo-box-demo\"\r\n                                options={templates ? templates : ''}\r\n                                getOptionLabel={(option) => option.subject}\r\n                                renderInput={(params) => <TextField error={messageType.error !== ' '} {...params}\r\n                                                                    label=\"Message Type\" variant=\"outlined\"/>}\r\n                            />\r\n                            <FormHelperText>{messageType.error}</FormHelperText>\r\n                        </FormControl>\r\n                    </div>\r\n                    {sendasEmail ?\r\n                        <div className={'col-md-12'}>\r\n                            <FormControl className={clsx(classes.selectField)}\r\n                                         error={noteChosen.error !== ' '}>\r\n                                <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Note\r\n                                    Type</InputLabel>\r\n                                <Select\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={noteChosen.error !== ' '}\r\n                                    value={noteChosen.value}\r\n\r\n                                    onChange={e => setNoteChosen({\r\n                                        ...noteChosen,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'noteChosen',\r\n                                        id: 'noteChosen',\r\n                                    }}>\r\n                                    <option value=\"\"/>\r\n                                    {\r\n                                        Object.entries(noteType).map(([key, val]) =>\r\n                                            <option key={key} value={key}>{val}</option>\r\n                                        )\r\n                                    }\r\n\r\n\r\n                                </Select>\r\n                                <FormHelperText>{noteChosen.error}</FormHelperText>\r\n                            </FormControl>\r\n                        </div> : ''}\r\n\r\n                    <div className={'col-md-12 custom-subject'}>\r\n                        <TextField disabled={apiLoading} value={subject.value}\r\n                                   error={subject.error !== ' '}\r\n                                   helperText={subject.error}\r\n                                   onChange={(e) => setSubject({...subject, value: e.target.value})}\r\n                                   className={clsx(classes.textFieldtwofield, classes.subjectDense)} id=\"standard-basic\"\r\n                                   label=\"Subject\"/>\r\n                    </div>\r\n                    <div className={'col-md-12'}>\r\n                        <FormControl className={clsx(classes.selectField)}\r\n                                     error={content.error !== ' '}>\r\n                            <CKEditor\r\n                                disable={apiLoading}\r\n                                data={content.value}\r\n                                onChange={(event) => {\r\n                                    const data = event.editor.getData();\r\n                                    setContent({...content, value: data})\r\n                                }}\r\n\r\n\r\n                            />\r\n                            <FormHelperText>{content.error}</FormHelperText>\r\n                        </FormControl>\r\n\r\n                    </div>\r\n\r\n                    <div className={'col-md-12'}>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>\r\n                            Attach Files\r\n                        </Button>\r\n\r\n                        {fileLink.success !== ' ' ? (<span>{fileLink.success}</span>) : ' '}\r\n                        {fileLink.error !== ' ' ? (\r\n                            <span className={clsx(classes.fileError)}>{fileLink.error}</span>) : ' '}\r\n                        {fileObjects.length !== 0 ?\r\n                            <Grid className={classes.attachmentSection} container spacing={2}>\r\n                                <Grid item xs={12} md={12}>\r\n                                    <Typography variant=\"h6\" className={classes.title}>\r\n                                        Attached Files\r\n                                    </Typography>\r\n                                    <div className={classes.demo}>\r\n                                        <List>\r\n                                            {fileObjects?.map((anObjectMapped, index) =>\r\n\r\n\r\n                                                <ListItem key={index}>\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar>\r\n                                                            <PictureAsPdfIcon/>\r\n                                                        </Avatar>\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText\r\n                                                        primary={anObjectMapped.file.name}\r\n                                                        secondary={bytesToSize(anObjectMapped.file.size)}\r\n                                                    />\r\n                                                    <ListItemSecondaryAction>\r\n                                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                            <DeleteIcon onClick={(e) => removeFileFromArray(index)}/>\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction>\r\n                                                </ListItem>\r\n                                            )}\r\n\r\n\r\n                                        </List>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid> : ''}\r\n                    </div>\r\n                    <div className={'col-md-12'}>\r\n                        <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                            {apiLoading ? (\r\n                                    <div className={clsx(classes.loader)}>\r\n                                        <FacebookProgress/>\r\n                                    </div>)\r\n                                : null}\r\n                            <input disabled={apiLoading}\r\n                                   className={clsx('btn btn-primary', classes.restButton)}\r\n                                   type=\"submit\" value=\"Send Message\"/>\r\n                        </div>\r\n                    </div>\r\n                </FormGroup>\r\n            </form>\r\n            <DropzoneDialogBase\r\n                dialogTitle={dialogTitle()}\r\n                acceptedFiles={['.pdf']}\r\n                filesLimit={10}\r\n                fileObjects={fileObjects}\r\n                cancelButtonText={\"cancel\"}\r\n                submitButtonText={\"Attach Files\"}\r\n                maxFileSize={5000000}\r\n                open={open}\r\n                onAdd={newFileObjs => {\r\n                    setFileObjects([].concat(fileObjects, newFileObjs));\r\n                }}\r\n\r\n                onClose={() => setOpen(false)}\r\n                onSave={() => {\r\n                    setOpen(false);\r\n                }}\r\n                useChipsForPreview\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminSendMessageForm;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport clsx from \"clsx\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import {CKEditor} from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {sendMessageAPI} from '../api/message';\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport {TemplateList, getTemplate} from \"../api/message\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {toast} from 'react-toastify';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {DropzoneDialogBase} from \"material-ui-dropzone\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        // width: '100%'\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    container: {\r\n        // display: 'flex',\r\n        // flexWrap: 'wrap',\r\n        // width: '100%'\r\n        // transform: 'scale(0.9)'\r\n    },\r\n    baseColor: {\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n        color: '#4D5D98'\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        marginBottom: 20,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n    restButton: {\r\n        marginLeft: 20,\r\n    },\r\n\r\n    selectField: {\r\n        width: '100%'\r\n    },\r\n    demo: {\r\n        backgroundColor: '#F0F0F6',\r\n    },\r\n\r\n    attachmentSection: {\r\n        marginTop: 10,\r\n    }\r\n\r\n}));\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nfunction FacebookProgress(props) {\r\n    const classes = useStylesFacebook();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress\r\n\r\n                variant=\"determinate\"\r\n                value={100}\r\n                className={classes.top}\r\n                size={24}\r\n                thickness={4}\r\n                {...props}\r\n            />\r\n            <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                className={classes.bottom}\r\n                size={24}\r\n                thickness={4}\r\n                {...props}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SendMessageForm = (props) => {\r\n    const classes = useStyles();\r\n    const {loading, addError, errorList, role, attributes,   manageOuterThreads} = useContext(UserContext);\r\n\r\n    const entity_id = props.match.params.id ? props.match.params.id : attributes.organization;\r\n\r\n    const [content, setContent] = useState({value: '', error: ' '});\r\n    const [subject, setSubject] = useState({value: '', error: ' '});\r\n    const [sendasEmail, setSendasEmail] = useState(false);\r\n    const [messageType, setMessageType] = useState({value: '', error: ' '});\r\n    const [fileLink, setFileLink] = useState({value: '', error: ' ', success: ' '});\r\n    const [fileSize, setFileSize] = useState({value: '', error: ' '});\r\n    const [fileName, setFileName] = useState({value: '', error: ' '});\r\n    const [apiLoading, setApiLoading] = useState(false);\r\n    const [templates, setTemplates] = useState([]);\r\n    const [noteType, setNoteType] = useState({mail: 'Email', note: 'Note', phone: 'Phone'});\r\n    const [noteChosen, setNoteChosen] = useState({value: '', error: ' '});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fileObjects, setFileObjects] = React.useState([]);\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            getTemplateList();\r\n        }\r\n    }, [loading]);\r\n\r\n    const getTemplateList = async () => {\r\n        await TemplateList().then(response => {\r\n            setTemplates(response.data.results);\r\n        })\r\n    }\r\n\r\n    const dialogTitle = () => (\r\n        <>\r\n            <span>Upload file</span>\r\n            <IconButton\r\n                style={{right: '12px', top: '8px', position: 'absolute'}}\r\n                onClick={() => setOpen(false)}>\r\n                <CloseIcon/>\r\n            </IconButton>\r\n        </>\r\n    );\r\n\r\n    const removeFileFromArray = (index) => {\r\n        let array = [...fileObjects];\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n        setFileObjects(array);\r\n    }\r\n\r\n    const resetFormError = () => {\r\n        setContent({...content, error: ' '})\r\n        setSubject({...subject, error:' '})\r\n        setNoteChosen({...noteChosen, error:' '})\r\n\r\n    }\r\n    const sendMessageSubmission = async (event) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n        resetFormError();\r\n        let formData = new FormData();\r\n        formData.append('eid', entity_id);\r\n        formData.append('subject', subject.value);\r\n        formData.append('message', content.value);\r\n        fileObjects.map(function(val, index){\r\n            formData.append('attachment[]', val.file)\r\n        });\r\n        await sendMessageAPI(formData).then(response => {\r\n            if (response.status === true) {\r\n                manageOuterThreads(true);\r\n                setApiLoading(false);\r\n                toast.success(response.message, {\r\n                    position: toast.POSITION.BOTTOM_LEFT\r\n                });\r\n                resetForm()\r\n            }\r\n\r\n            if (response.status === false) {\r\n                setApiLoading(false);\r\n                if (response.error) {\r\n\r\n                    Object.keys(response.error).forEach((key, index) => {\r\n                        if (key === 'subject') {\r\n                            setSubject({...subject, error: response.error[key]})\r\n                            toast.error(response.error[key], {\r\n                                position: toast.POSITION.BOTTOM_LEFT\r\n                            });\r\n                        }\r\n\r\n                        if (key === 'message') {\r\n                            setContent({...subject, error: response.error[key]})\r\n                            toast.error(response.error[key], {\r\n                                position: toast.POSITION.BOTTOM_LEFT\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setApiLoading(true);\r\n            setFileLink({...fileLink, value: '', success: ' '});\r\n            setFileSize({...fileSize, value: ''});\r\n            setFileName({...fileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setFileLink({...fileLink, value: response.record_id, success: 'uploaded'});\r\n                setFileSize({...fileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setFileName({...fileName, value: filename});\r\n                    setApiLoading(false);\r\n                }\r\n            } else {\r\n                setFileLink({...fileLink, error: response.message.file[0]});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setFileLink({...fileLink, value: '', success: ' '});\r\n            setFileSize({...fileSize, value: ''});\r\n            setFileName({...fileName, value: ''});\r\n        }\r\n    }\r\n\r\n    const handleTemplateListing = async (newValue) => {\r\n\r\n        setApiLoading(true);\r\n        if (newValue) {\r\n            setMessageType({\r\n                ...messageType,\r\n                value: newValue.id\r\n            })\r\n        } else {\r\n            setMessageType({\r\n                ...messageType,\r\n                value: ''\r\n            })\r\n        }\r\n        if (newValue.id) {\r\n            await getTemplate(newValue.id).then(response => {\r\n                if (response.status === true) {\r\n                    setContent({...content, value: response.data.message})\r\n                    setSubject({...subject, value:newValue.subject});\r\n                    setApiLoading(false);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = () => {\r\n        setContent({...content, value: ''});\r\n        setSubject({...subject, value:''});\r\n        setFileObjects([]);\r\n\r\n    }\r\n\r\n    const bytesToSize = (bytes) => {\r\n        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"message-title\">\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h5\">Send Message</Typography>\r\n                </div>\r\n                <form onSubmit={sendMessageSubmission} className={classes.container} noValidate autoComplete=\"off\">\r\n                    <FormGroup row>\r\n\r\n                        {/*<div className={'col-md-12'}>*/}\r\n                        {/*    <FormControlLabel*/}\r\n                        {/*        control={<Checkbox color=\"primary\"/>}*/}\r\n                        {/*        label=\"Send as Note\"*/}\r\n                        {/*        className={'send-as-mail'}*/}\r\n                        {/*        labelPlacement=\"start\"*/}\r\n                        {/*        onChange={e => setSendasEmail(*/}\r\n                        {/*            e.target.checked*/}\r\n                        {/*        )}*/}\r\n                        {/*    />*/}\r\n                        {/*</div>*/}\r\n\r\n                        {/*<div className={'col-md-12'}>*/}\r\n                        {/*    <FormControl className={clsx(classes.selectField)}*/}\r\n                        {/*                 error={messageType.error !== ' '}>*/}\r\n                        {/*        <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Message*/}\r\n                        {/*            Type</InputLabel>*/}\r\n                        {/*        <Select*/}\r\n                        {/*            disabled={apiLoading}*/}\r\n                        {/*            required*/}\r\n                        {/*            error={messageType.error !== ' '}*/}\r\n                        {/*            value={messageType.value}*/}\r\n\r\n                        {/*            onChange={e => handleTemplateListing(e)}*/}\r\n                        {/*            inputProps={{*/}\r\n                        {/*                name: 'messageType',*/}\r\n                        {/*                id: 'messageType',*/}\r\n                        {/*            }}>*/}\r\n                        {/*            <option value=\"\"/>*/}\r\n                        {/*            {templates?.map((anObjectMapped, index) => <option key={index}*/}\r\n                        {/*                                                               value={anObjectMapped.id}>{anObjectMapped.subject}</option>)*/}\r\n\r\n                        {/*            }*/}\r\n\r\n                        {/*        </Select>*/}\r\n                        {/*        <FormHelperText>{messageType.error}</FormHelperText>*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</div>*/}\r\n\r\n                        {/*<div className={'col-md-12'}>*/}\r\n                        {/*    <FormControl className={clsx(classes.selectField)}*/}\r\n                        {/*                 error={messageType.error !== ' '}>*/}\r\n                        {/*        <Autocomplete*/}\r\n                        {/*            disabled={apiLoading}*/}\r\n                        {/*            onChange={(event, newValue) => {*/}\r\n\r\n                        {/*                handleTemplateListing(newValue)*/}\r\n                        {/*            }}*/}\r\n\r\n                        {/*            id=\"combo-box-demo\"*/}\r\n                        {/*            options={templates ? templates : ''}*/}\r\n                        {/*            getOptionLabel={(option) => option.subject}*/}\r\n                        {/*            renderInput={(params) => <TextField error={messageType.error !== ' '} {...params}*/}\r\n                        {/*                                                label=\"Message Type\" variant=\"outlined\"/>}*/}\r\n                        {/*        />*/}\r\n                        {/*        <FormHelperText>{messageType.error}</FormHelperText>*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</div>*/}\r\n\r\n                        {/*{sendasEmail ?*/}\r\n                        {/*    <div className={'col-md-12'}>*/}\r\n                        {/*        <FormControl className={clsx(classes.selectField)}*/}\r\n                        {/*                     error={noteChosen.error !== ' '}>*/}\r\n                        {/*            <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Note*/}\r\n                        {/*                Type</InputLabel>*/}\r\n                        {/*            <Select*/}\r\n                        {/*                disabled={apiLoading}*/}\r\n                        {/*                required*/}\r\n                        {/*                error={noteChosen.error !== ' '}*/}\r\n                        {/*                value={noteChosen.value}*/}\r\n\r\n                        {/*                onChange={e => setNoteChosen({*/}\r\n                        {/*                    ...noteChosen,*/}\r\n                        {/*                    value: e.target.value*/}\r\n                        {/*                })}*/}\r\n                        {/*                inputProps={{*/}\r\n                        {/*                    name: 'noteChosen',*/}\r\n                        {/*                    id: 'noteChosen',*/}\r\n                        {/*                }}>*/}\r\n                        {/*                <option value=\"\"/>*/}\r\n                        {/*                /!*{noteType?.map((anObjectMapped, index) => <option key={index} value={anObjectMapped}>{index}</option>)}*!/*/}\r\n\r\n                        {/*                /!*{noteType.map((value, index) => (*!/*/}\r\n                        {/*                /!*    <option key={index} value={index}>{value}</option>*!/*/}\r\n                        {/*                /!*))}*!/*/}\r\n                        {/*                {*/}\r\n                        {/*                    Object.entries(noteType).map(([key, val]) =>*/}\r\n                        {/*                        <option key={key} value={key}>{val}</option>*/}\r\n                        {/*                    )*/}\r\n                        {/*                }*/}\r\n\r\n\r\n                        {/*            </Select>*/}\r\n                        {/*            <FormHelperText>{noteChosen.error}</FormHelperText>*/}\r\n                        {/*        </FormControl>*/}\r\n                        {/*    </div> : ''}*/}\r\n\r\n                        {/*{sendasEmail === true ?*/}\r\n                        {/*<div className={'col-md-12'}>*/}\r\n                        {/*    <TextField className={clsx(classes.textFieldtwofield, classes.dense)}*/}\r\n                        {/*               id=\"standard-basic\"*/}\r\n                        {/*               label=\"To\"/>*/}\r\n                        {/*</div> : ''*/}\r\n                        {/*}*/}\r\n\r\n                        <div className={'col-md-12 custom-subject'}>\r\n                            <TextField disabled={apiLoading} value={subject.value}\r\n                                       error={subject.error !== ' '}\r\n                                       helperText={subject.error}\r\n                                       onChange={(e) => setSubject({...subject, value: e.target.value})}\r\n                                       className={clsx(classes.textFieldtwofield, classes.dense)} id=\"standard-basic\"\r\n                                       label=\"Subject\"/>\r\n                        </div>\r\n                        <div className={'col-md-12'}>\r\n                            <FormControl className={clsx(classes.selectField)}\r\n                                         error={content.error !== ' '}>\r\n\r\n                                <CKEditor\r\n                                    disable={apiLoading}\r\n                                    data={content.value}\r\n                                    onChange={(event) => {\r\n                                        const data = event.editor.getData();\r\n                                        setContent({...content, value: data})\r\n                                    }}\r\n\r\n\r\n                                />\r\n                                {/*<CKEditor*/}\r\n                                {/*    disable={apiLoading}*/}\r\n                                {/*    editor={ClassicEditor}*/}\r\n                                {/*    data={content.value}*/}\r\n                                {/*    onReady={editor => {*/}\r\n                                {/*        // You can store the \"editor\" and use when it is needed.*/}\r\n                                {/*        // console.log('Editor is ready to use!', editor);*/}\r\n                                {/*    }}*/}\r\n                                {/*    onChange={(event, editor) => {*/}\r\n                                {/*        const data = editor.getData();*/}\r\n                                {/*        // console.log({event, editor, data});*/}\r\n                                {/*        setContent({...content, value: data})*/}\r\n                                {/*    }}*/}\r\n                                {/*    // onBlur={(event, editor) => {*/}\r\n                                {/*    //     console.log('Blur.', editor);*/}\r\n                                {/*    // }}*/}\r\n                                {/*    // onFocus={(event, editor) => {*/}\r\n                                {/*    //     console.log('Focus.', editor);*/}\r\n                                {/*    // }}*/}\r\n                                {/*/>*/}\r\n                                <FormHelperText>{content.error}</FormHelperText>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n                        <div className={'col-md-12'}>\r\n                            {/*<CustomFileInput*/}\r\n                            {/*    disable={apiLoading}*/}\r\n                            {/*    value={fileLink.value.File}*/}\r\n                            {/*    onChange={e => fileChange(e)}*/}\r\n                            {/*    required*/}\r\n                            {/*    id=\"attachment\"*/}\r\n                            {/*    label=\"File\"*/}\r\n                            {/*    className={clsx(classes.fileUploading, classes.dense)}*/}\r\n                            {/*    margin=\"dense\"*/}\r\n                            {/*/>*/}\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>\r\n                                Attach Files\r\n                            </Button>\r\n\r\n                            {fileLink.success !== ' ' ? (<span>{fileLink.success}</span>) : ' '}\r\n                            {fileLink.error !== ' ' ? (\r\n                                <span className={clsx(classes.fileError)}>{fileLink.error}</span>) : ' '}\r\n                            {fileObjects.length !== 0 ?\r\n                                <Grid className={classes.attachmentSection} container spacing={2}>\r\n                                    <Grid item xs={12} md={12}>\r\n                                        <Typography variant=\"h6\" className={classes.title}>\r\n                                            Attached Files\r\n                                        </Typography>\r\n                                        <div className={classes.demo}>\r\n                                            <List>\r\n                                                {fileObjects?.map((anObjectMapped, index) =>\r\n\r\n\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <PictureAsPdfIcon/>\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary={anObjectMapped.file.name}\r\n                                                            secondary={bytesToSize(anObjectMapped.file.size)}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                <DeleteIcon onClick={(e) => removeFileFromArray(index)}/>\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n                                                    </ListItem>\r\n                                                )}\r\n\r\n\r\n                                            </List>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid> : ''}\r\n                        </div>\r\n                        <div className={'col-md-12'}>\r\n                            <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                {apiLoading ? (\r\n                                        <div className={clsx(classes.loader)}>\r\n                                            <FacebookProgress/>\r\n                                        </div>)\r\n                                    : null}\r\n                                <input disabled={apiLoading}\r\n                                       className={clsx('btn btn-primary', classes.restButton)}\r\n                                       type=\"submit\" value=\"Send Message\"/>\r\n                            </div>\r\n                        </div>\r\n                    </FormGroup>\r\n                </form>\r\n\r\n                <DropzoneDialogBase\r\n                    dialogTitle={dialogTitle()}\r\n                    acceptedFiles={['.pdf']}\r\n                    filesLimit={10}\r\n                    fileObjects={fileObjects}\r\n                    cancelButtonText={\"cancel\"}\r\n                    submitButtonText={\"Attach Files\"}\r\n                    maxFileSize={5000000}\r\n                    open={open}\r\n                    onAdd={newFileObjs => {\r\n                        setFileObjects([].concat(fileObjects, newFileObjs));\r\n                    }}\r\n\r\n                    onClose={() => setOpen(false)}\r\n                    onSave={() => {\r\n                        setOpen(false);\r\n                    }}\r\n                    useChipsForPreview\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendMessageForm;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {FetchThreads} from '../api/message';\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        // maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n\r\n    viewButton: {\r\n        width: '100%',\r\n        textAlign: 'center'\r\n    },\r\n\r\n    SkeletonLoading: {\r\n        width: '100%'\r\n    },\r\n\r\n    skeletonWidth: {\r\n        width: '100%'\r\n    },\r\n\r\n    skeletonStyle: {\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n    },\r\n\r\n\r\n}));\r\n\r\nexport default function AllMessages(props) {\r\n    const classes = useStyles();\r\n    const {loading, addError, errorList, role, setUserMessagesForInbox, outerThreads, manageOuterThreads} = useContext(UserContext);\r\n    const [threads, setThreads] = useState([]);\r\n    const [apiLoading, setApiLoading] = useState(false);\r\n    const entity_id = localStorage.getItem('activeEntityID');\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            getAllMessageThreads()\r\n        }\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        if (outerThreads === true) {\r\n            getAllMessageThreads()\r\n            manageOuterThreads(false);\r\n        }\r\n\r\n    }, [outerThreads]);\r\n\r\n    const getAllMessageThreads = async () => {\r\n        setApiLoading(true);\r\n        try {\r\n            FetchThreads(entity_id).then(response => {\r\n                if (response.status === true) {\r\n                    setUserMessagesForInbox(response.data);\r\n                    setThreads(response.data);\r\n                    setApiLoading(false);\r\n                }\r\n            });\r\n        } catch (e) {\r\n\r\n            addError('Something went wrong with the message API')\r\n        }\r\n    }\r\n\r\n\r\n    const stripHTML = (myString) => {\r\n        if (myString) {\r\n            return myString.replace(/<[^>]*>?/gm, '').replace(/\\&nbsp;/g, '');\r\n        } else {\r\n            return myString;\r\n        }\r\n    }\r\n\r\n    const truncate = (str, no_words) => {\r\n        if (str) {\r\n            return str.split(\" \").splice(0, no_words).join(\" \") + \" ...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n\r\n    const handleClickChange = (id) => {\r\n        localStorage.setItem('allMessagesThread', id);\r\n        props.openmodal();\r\n        // localStorage.setItem('allMessagesFirstThread', id);\r\n    }\r\n\r\n\r\n    const ViewAllHandleClickChange = () => {\r\n        if (threads[0].id) {\r\n            localStorage.setItem('allMessagesThread', threads[0].id);\r\n        }\r\n        props.openmodal();\r\n        // localStorage.setItem('allMessagesFirstThread', id);\r\n    }\r\n\r\n    const lastMessage = (threadInfo) => {\r\n\r\n        if ((threadInfo.child).length !== 0) {\r\n\r\n            if ((threadInfo.child).length > 0) {\r\n                const data = threadInfo.child;\r\n                const lastChild = data.slice(-1)[0]\r\n                return truncate(stripHTML(lastChild.message), 10);\r\n\r\n            } else {\r\n                return truncate(stripHTML(threadInfo.child[0].message), 10)\r\n            }\r\n            // console.log(threadInfo.child.last())\r\n            // return threadInfo.child.last();\r\n        } else {\r\n            return truncate(stripHTML(threadInfo.message), 10);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!apiLoading ?\r\n                <>\r\n                    <List className={classes.root}>\r\n                        {threads?.slice(0, 5).map((anObjectMapped, index) =>\r\n                            <div key={index}>\r\n                                <ListItem onClick={(e) => handleClickChange(anObjectMapped.id)} alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={anObjectMapped.subject}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {props.entityName}\r\n                                                </Typography>\r\n                                                {` — ${lastMessage(anObjectMapped)}`}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n\r\n                                        {/*{*/}\r\n                                        {/*    threads.attachments.length !== 0 ?*/}\r\n                                        {/*        <ListItemSecondaryAction>*/}\r\n                                        {/*            <IconButton edge=\"end\" aria-label=\"delete\">*/}\r\n                                        {/*                <a download*/}\r\n                                        {/*                   href='#'><CloudDownloadIcon/></a>*/}\r\n                                        {/*            </IconButton>*/}\r\n                                        {/*        </ListItemSecondaryAction>*/}\r\n                                        {/*        : ''*/}\r\n                                        {/*}*/}\r\n\r\n                                </ListItem>\r\n\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </List>\r\n                    {(threads.length === 0) ?\r\n                        <>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemText\r\n                                    primary={'No message found'}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                Currently there are no active threads\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                                {/*<ListItemSecondaryAction>*/}\r\n                                {/*    <IconButton edge=\"end\" aria-label=\"delete\">*/}\r\n                                {/*        <a download*/}\r\n                                {/*           href='#'><CloudDownloadIcon/></a>*/}\r\n                                {/*    </IconButton>*/}\r\n                                {/*</ListItemSecondaryAction>*/}\r\n                            </ListItem>\r\n                        </>\r\n                        : ''}\r\n\r\n\r\n                    {(threads.length !== 0) ?\r\n                        <div className={classes.viewButton}>\r\n                            <Button onClick={ViewAllHandleClickChange} variant=\"outlined\" color=\"primary\">View\r\n                                All</Button>\r\n                        </div>\r\n                        : ' '}\r\n                </>\r\n                :\r\n                <>\r\n                    <List>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\"/>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\"/>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\"/>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                    </React.Fragment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\"/>\r\n                    </List>\r\n\r\n                </>\r\n\r\n            }\r\n        </>)\r\n}\r\n","import React, {useContext, ReactDOM} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {object} from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {sendMessageFormChat} from '../api/message';\r\nimport clsx from \"clsx\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n    Link,\r\n    DirectLink,\r\n    Element,\r\n    Events,\r\n    animateScroll,\r\n    scrollSpy,\r\n    scroller\r\n} from \"react-scroll\";\r\nimport {toast} from \"react-toastify\";\r\nimport stripHtml from \"string-strip-html\";\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst ReactDOMServer = require('react-dom/server');\r\nconst HtmlToReactParser = require('html-to-react').Parser;\r\n\r\n\r\nconst NewChatPanel = (props) => {\r\n    const ref = React.createRef();\r\n    // const inputRef = React.useRef();\r\n    const chatContainer = React.createRef();\r\n    const entity_id = localStorage.getItem('activeEntityID');\r\n    const IncomingIDFromAllMessages = localStorage.getItem('allMessagesThread');\r\n    const {attributes, loading, role, profile, userMessages, addMessage, manageOuterThreads} = useContext(UserContext);\r\n    const [inComingThreadID, setInComingThreadID] = React.useState(IncomingIDFromAllMessages);\r\n    const [activeThread, setActiveThread] = React.useState('');\r\n    const [chosenThread, setChosenThread] = React.useState({});\r\n    const [updateThread, setUpdateThread] = React.useState(false)\r\n    const [message, setMessage] = React.useState('');\r\n    const [file, setFile] = React.useState([]);\r\n    const [key, setKey] = React.useState(0);\r\n    const [componentLoading, setComponentLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const obj = userMessages.find(o => o.id === inComingThreadID);\r\n        setActiveThread(obj.id);\r\n        setChosenThread(obj);\r\n\r\n        setTimeout(() => {\r\n            scrollToBottom();\r\n        }, 1000);\r\n\r\n    }, [inComingThreadID]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (updateThread) {\r\n            manageOuterThreads(true);\r\n            setUpdateThread(false);\r\n            const obj = userMessages.find(o => o.id === chosenThread.id);\r\n            setChosenThread(obj);\r\n            setTimeout(() => {\r\n                scrollToBottom();\r\n            }, 2000);\r\n        }\r\n\r\n    }, [userMessages]);\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        animateScroll.scrollToBottom({\r\n\r\n            containerId: \"containerElement\",\r\n            duration: 0,\r\n            delay: 0,\r\n            smooth: \"easeInOutQuart\",\r\n        });\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //     const obj = userMessages.find(o => o.id === activeThread);\r\n    //     setChosenThread(obj);\r\n    // }, [threads])\r\n\r\n    const onClickThread = async (threadID) => {\r\n        const obj = userMessages.find(o => o.id === threadID);\r\n        await setChosenThread(obj);\r\n        setMessage('');\r\n        scrollToBottom();\r\n    }\r\n\r\n\r\n    var getInitials = function (string) {\r\n        var names = string.split(' '),\r\n            initials = names[0].substring(0, 1).toUpperCase();\r\n\r\n        if (names.length > 1) {\r\n            initials += names[names.length - 1].substring(0, 1).toUpperCase();\r\n        }\r\n        return initials;\r\n    };\r\n\r\n\r\n    const handleKeypress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessage();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const sendMessage = (event) => {\r\n        // event.preventDefault();\r\n        setComponentLoading(true);\r\n        let form = new FormData();\r\n        const eid = localStorage.getItem('activeEntityID');\r\n        form.append('eid', eid);\r\n        form.append('subject', 'RE: ' + chosenThread.subject);\r\n        form.append('gid', chosenThread.id);\r\n        form.append('message', message);\r\n        file.map(function (val, index) {\r\n            form.append('attachment[]', val)\r\n        })\r\n\r\n        const response = sendMessageFormChat(form).then(response => {\r\n            if (response.status === true) {\r\n                setComponentLoading(false);\r\n                setMessage('')\r\n                setUpdateThread(true);\r\n                setFile([]);\r\n                addMessage(chosenThread, message, role, attributes.organization)\r\n            }\r\n\r\n\r\n            if (response.status === false) {\r\n                setComponentLoading(false);\r\n                if(response.error.message) {\r\n                    toast.error(response.error.message, {\r\n                        position: toast.POSITION.BOTTOM_LEFT\r\n                    });\r\n                }\r\n\r\n                if(response.message) {\r\n                    toast.error(response.message, {\r\n                        position: toast.POSITION.BOTTOM_LEFT\r\n                    });\r\n                }\r\n\r\n\r\n                if (response.status === 401) {\r\n                    window.location.reload();\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const stripHTML = (myString) => {\r\n        if (myString) {\r\n            return myString.replace(/<[^>]*>?/gm, '').replace(/\\&nbsp;/g, '');\r\n        } else {\r\n            return myString;\r\n        }\r\n    }\r\n\r\n    const truncate = (str, no_words) => {\r\n        if (str) {\r\n            return str.split(\" \").splice(0, no_words).join(\" \") + \" ...\";\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n\r\n\r\n    const convertHTML = (data) => {\r\n\r\n        // let html = data;\r\n        // let reg = html.getElementsByTagName('body')[0].innerHTML()\r\n        // let contentNew = html.match( reg )[1];\r\n\r\n\r\n        if (typeof data !== 'undefined') {\r\n            // console.log('Messages', data);\r\n            // var newHTML = stripHtml(data, {\r\n            //     stripTogetherWithTheirContents: [\r\n            //         \"table\", // default\r\n            //\r\n            //     ],\r\n            // }).result;\r\n\r\n            const htmlInput = data;\r\n            const htmlToReactParser = new HtmlToReactParser();\r\n            const abc = htmlToReactParser.parse(htmlInput);\r\n            return abc;\r\n        } else {\r\n            // console.log(typeof data)\r\n            return data;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const messageOrientation = (threadInfo) => {\r\n        if (role === 'Administrator') {\r\n            if (threadInfo.fromEid === '0') {\r\n                return 'replies'\r\n            } else {\r\n                return 'sent'\r\n            }\r\n        }\r\n\r\n        if (role === 'Child Entity' || role === 'Parent Organization') {\r\n            // if (threadInfo.fromEid === profile.organization) {\r\n            //     return 'sent'\r\n            // } else {\r\n            //     return 'replies'\r\n            // }\r\n\r\n\r\n            if (threadInfo.fromEid === '0') {\r\n                return 'sent'\r\n            }\r\n\r\n            const currentActiveUser = localStorage.getItem('activeEntityID');\r\n\r\n            if (threadInfo.fromEid === currentActiveUser) {\r\n                return 'replies'\r\n            }\r\n\r\n            if (threadInfo.fromEid === attributes.organization) {\r\n                return 'replies'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const namePicker = (threadInfo) => {\r\n        if (threadInfo.fromEid === '0') {\r\n            return getInitials('Admin')\r\n        }\r\n\r\n        if (threadInfo.fromEid === attributes.organization) {\r\n            return getInitials(localStorage.getItem('entityName'))\r\n        } else {\r\n            return getInitials(localStorage.getItem('entityName'))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const lastMessage = (threadInfo) => {\r\n\r\n        if ((threadInfo.child).length !== 0) {\r\n\r\n            if ((threadInfo.child).length > 0) {\r\n                const data = threadInfo.child;\r\n                const lastChild = data.slice(-1)[0]\r\n                return stripHTML(lastChild.message);\r\n            } else {\r\n                return stripHTML(threadInfo.child[0].message)\r\n            }\r\n            // console.log(threadInfo.child.last())\r\n            // return threadInfo.child.last();\r\n        } else {\r\n            return stripHTML(threadInfo.message);\r\n        }\r\n    }\r\n\r\n    const bytesToSize = (bytes) => {\r\n        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    }\r\n\r\n\r\n    const handleDelete = (index) => {\r\n        let array = [...file];\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n        setFile(array);\r\n        setKey(Math.floor((Math.random() * 10) + 1));\r\n    };\r\n\r\n    const attachFile = (e) => {\r\n        const incomingFile = e.target.files;\r\n        let array = [];\r\n        for (let i = 0; i < incomingFile.length; i++) {\r\n            array.push(incomingFile[i]);\r\n        }\r\n        setFile(file.concat(array));\r\n    }\r\n\r\n    const isHTML = (str) => !(str || '')\r\n        // replace html tag with content\r\n        .replace(/<([^>]+?)([^>]*?)>(.*?)<\\/\\1>/ig, '')\r\n        // remove remaining self closing tags\r\n        .replace(/(<([^>]+)>)/ig, '')\r\n        // remove extra space at start and end\r\n        .trim();\r\n\r\n    return (\r\n        <div id=\"frame\">\r\n            <div id=\"sidepanel\">\r\n                <div id=\"profile\">\r\n                    <div className=\"wrap\">\r\n                        {/*<img id=\"profile-img\" src=\"http://emilcarlsson.se/assets/mikeross.png\" className=\"online\"*/}\r\n                        {/*     alt=\"\"/>*/}\r\n                        <Avatar>{profile.name ? getInitials(profile.name) : ''}</Avatar>\r\n                        {profile ? <p>{profile.name}</p> : ''}\r\n                    </div>\r\n                </div>\r\n                <div id=\"search\">\r\n                    <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\r\n                    <input disabled type=\"text\" placeholder=\"Search contacts...\"/>\r\n                </div>\r\n                <div id=\"contacts\">\r\n                    <ul>\r\n                        {userMessages.map((anObjectMapped, index) =>\r\n                            <li className={clsx('contact', chosenThread ? chosenThread.id === anObjectMapped.id ? 'active-thread' : '' : '')}\r\n                                onClick={() => onClickThread(anObjectMapped.id)} key={anObjectMapped.id}>\r\n                                <div className=\"wrap\">\r\n                                    {/*<Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />*/}\r\n                                    {/*<img src=\"http://emilcarlsson.se/assets/louislitt.png\" alt=\"\"/>*/}\r\n                                    <Avatar>{localStorage.getItem('entityName') ? getInitials(localStorage.getItem('entityName')) : ''}</Avatar>\r\n                                    <div className=\"meta\">\r\n                                        <p className=\"name\">{anObjectMapped.subject}</p>\r\n                                        <p className=\"preview\">{lastMessage(anObjectMapped)}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n\r\n                <div className=\"messages\" id=\"containerElement\">\r\n                    <ul>\r\n\r\n                        {chosenThread ?\r\n                            <li className={messageOrientation(chosenThread)}>\r\n                                {/*<Avatar alt={anObjectMapped.user} />*/}\r\n                                <Avatar>{namePicker(chosenThread)}</Avatar>\r\n                                <div className=\"message-body-chat\">\r\n                                    <span><strong>    Subject: </strong> {chosenThread.subject}</span>\r\n                                    {isHTML(chosenThread.message) === false ?\r\n                                        <>\r\n                                            {convertHTML(chosenThread.message)}\r\n                                            <List>\r\n                                                {chosenThread.attachments?.map((anObjectMapped, index) =>\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <PictureAsPdfIcon/>\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n\r\n                                                            primary={anObjectMapped.name}\r\n                                                            secondary={anObjectMapped.size}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                <a target=\"_blank\" href={`/${anObjectMapped.path}`}><CloudDownloadIcon/></a>\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n                                                    </ListItem>\r\n                                                )}\r\n\r\n\r\n                                            </List>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <p>{chosenThread.message}</p>\r\n\r\n                                    }\r\n\r\n                                    <div className=\"message-info\">\r\n                                        <div className=\"message-time\">\r\n                                            <span>{chosenThread.sendTime}</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"message-status\">\r\n                                            {role === 'Administrator' ?\r\n                                                <span>{chosenThread.status}</span> : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </li> : ''}\r\n\r\n                        {\r\n                            chosenThread.child?.map((anObjectMapped, index) =>\r\n                                <li key={index} className={messageOrientation(anObjectMapped)}>\r\n                                    <Avatar>{namePicker(anObjectMapped)}</Avatar>\r\n                                    <div className=\"message-body-chat\">\r\n                                        <span><strong>Subject: </strong> {anObjectMapped.subject}</span>\r\n                                        <>\r\n                                            {isHTML(anObjectMapped.message) === true ?\r\n                                                convertHTML(anObjectMapped.message) :\r\n                                                <p>{convertHTML(anObjectMapped.message)}</p>\r\n\r\n                                            }\r\n                                            <List>\r\n                                                {anObjectMapped.attachments?.map((anObjectMapped, index) =>\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <PictureAsPdfIcon/>\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n\r\n                                                            primary={anObjectMapped.name}\r\n                                                            secondary={anObjectMapped.size}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                <a target=\"_blank\" href={`/${anObjectMapped.path}`}><CloudDownloadIcon/></a>\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n                                                    </ListItem>\r\n                                                )}\r\n\r\n\r\n                                            </List>\r\n                                        </>\r\n                                        <div className=\"message-info\">\r\n                                            <div className=\"message-time\">\r\n                                                <span>{anObjectMapped.sendTime}</span>\r\n                                            </div>\r\n\r\n                                            <div className=\"message-status\">\r\n                                                {role === 'Administrator' ?\r\n                                                    <span>{chosenThread.status}</span> : ''}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )}\r\n\r\n                    </ul>\r\n                </div>\r\n                <div className=\"message-input\">\r\n                    <div className=\"wrap\">\r\n                        {file.length !== 0 ?\r\n                            <div className=\"fileAttachmentInput\">\r\n                                {file?.map((anObjectMapped, index) =>\r\n                                    <Chip\r\n                                        key={index}\r\n                                        icon={<PictureAsPdfIcon/>}\r\n                                        label={anObjectMapped.name + ' - ' + bytesToSize(anObjectMapped.size)}\r\n                                        clickable\r\n                                        variant=\"outlined\"\r\n                                        color={'secondary'}\r\n                                        onDelete={(e) => handleDelete(index)}\r\n                                    />\r\n                                )}\r\n                            </div> : ''}\r\n\r\n                        <input onKeyPress={handleKeypress} value={message}\r\n                               onChange={(event) => setMessage(event.target.value)} type=\"text\"\r\n                               placeholder=\"Type a message\"/>\r\n\r\n\r\n                        <div className=\"attachmentModal\">\r\n                            <Button\r\n                                disabled={componentLoading}\r\n                                variant=\"contained\"\r\n                                component=\"label\"\r\n                            >\r\n                                <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\r\n                                <input\r\n                                    disabled={componentLoading}\r\n                                    multiple=\"multiple\"\r\n                                    accept=\"application/pdf\"\r\n                                    // key={key}\r\n                                    type=\"file\"\r\n                                    hidden\r\n                                    onChange={attachFile}\r\n                                />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <button disabled={componentLoading} onClick={(e) => sendMessage(e)} className=\"submit\">{componentLoading === false ? <SendIcon/> :    <CircularProgress />}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewChatPanel;\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AdminSendMessageForm from \"../message/AdminSendMessageForm\";\r\nimport SendMessageForm from \"../message/SendMessageForm\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AllMessages from \"../message/AllMessages\";\r\nimport Modal from \"react-modal\";\r\nimport NewChatPanel from \"../message/NewChatPanel\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nModal.setAppElement(document.getElementById('messageModal'));\r\n\r\nconst drawerWidth = 700;\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n    // list: {\r\n    //     width: 700,\r\n    // },\r\n\r\n    listInner:{\r\n        // width: '100%'\r\n    },\r\n\r\n    messageSection: {\r\n        marginBottom: 20,\r\n        marginTop: 30\r\n    },\r\n    messageTitle: {\r\n        marginLeft: 20,\r\n        float: 'left'\r\n    },\r\n\r\n    rootDrawer: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(7),\r\n        paddingRight: theme.spacing(7),\r\n    },\r\n\r\n    largeIcon: {\r\n        width: 40,\r\n        height: 40,\r\n        color: '#48465b'\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst ChildDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    const [state, setState] = React.useState(false);\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            localStorage.setItem('activeEntityID', attributes.organization);\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n\r\n        if(checkRole === 'Child Entity'){\r\n             detailedView = await entityDetail(attributes.organization);\r\n        }\r\n        if (detailedView.result) {\r\n            addTitle('Dashboard ' +' - '+ detailedView.result.entity.name);\r\n            localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks);\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError('Status '+ detailedView.errors.status +' '+ detailedView.errors.detail);\r\n        }\r\n\r\n        if (detailedView.type === 'error') {\r\n            window.location.reload();\r\n        }\r\n\r\n        if (detailedView.status === 401) {\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(attributes.organization);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n    }\r\n    const toggleDrawer = (event, open) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        if (open) {\r\n            setState(true);\r\n        }\r\n\r\n        if (!open) {\r\n            setState(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n                <Grid container spacing={2}>\r\n\r\n                    {errorList?.map((value, index) => (\r\n                        <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                                  message={value} onClose={()=> removeError(index)}/>\r\n                    ))}\r\n\r\n\r\n                    <Drawer\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                            disableEnforceFocus: true\r\n                        }}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }} anchor={'right'} open={state} onClose={(event) => toggleDrawer(event, false)}>\r\n                        <div>\r\n                            <main className={classes.content}>\r\n                                {\r\n                                    role === 'Administrator' ?\r\n                                        <AdminSendMessageForm {...props} /> : ''\r\n                                    // <SendMessageForm/> : ''\r\n                                }\r\n\r\n                                {\r\n                                    role === 'Parent Organization' || role === 'Child Entity' ?\r\n                                        <SendMessageForm {...props} /> : ''\r\n                                }\r\n                            </main>\r\n                        </div>\r\n                    </Drawer>\r\n\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> {entitydetail.entity.stateId ? entitydetail.entity.stateId : ''}</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}>\r\n                                                    <div className=\"forwardingAddress\">\r\n                                                        <RoomIcon\r\n                                                            className={clsx(classes.adjustment, 'forwardingAddress-icon')}/>\r\n                                                        <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                    </div>\r\n\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            <Paper className={classes.messageSection} elevation={2}>\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <div className=\"messageSection\">\r\n                            <Typography className={classes.messageTitle} variant=\"h5\" component=\"h2\"\r\n                                        color=\"textPrimary\">Messages</Typography>\r\n                            <Button variant=\"outlined\" color=\"primary\" className={'sendMessageButton'}\r\n                                    onClick={(event) => toggleDrawer(event, true)}>\r\n                                {checkRole === 'Administrator' ?\r\n                                    'Send Message' : 'Message to Support'\r\n                                }\r\n                        </Button>\r\n                        </div>\r\n                        { entitydetail ?\r\n                            <AllMessages entityName={entitydetail.entity.name} openmodal={openModal}/> :\r\n                            <List>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\"/>\r\n                            </List>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                     redirect={true} url={`/attachment/form/add/${attributes ? attributes.organization : ''}`} data={attachmentData}\r\n                                     title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${attributes ? attributes.organization : ''}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            <div>\r\n                <Modal\r\n                    // parentSelector={() => document.querySelector('#messageModal')}\r\n                    isOpen={modalIsOpen}\r\n                    onAfterOpen={afterOpenModal}\r\n                    onRequestClose={closeModal}\r\n                    contentLabel=\"Chat Application\"\r\n                    ariaHideApp={false}\r\n                    style={{\r\n                        overlay: {\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                        },\r\n\r\n                    }}\r\n                >\r\n                    <div className=\"closeButton\">\r\n                        <CancelIcon onClick={closeModal} className={classes.largeIcon}/>\r\n                    </div>\r\n                    <div className=\"chat-wrapper\">\r\n                        <NewChatPanel/>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(ChildDetailedPage);\r\n\r\n","import React, {useEffect, useContext, forwardRef} from 'react';\r\n// import MaterialTable, {MTableToolbar} from \"material-table\";\r\nimport MaterialTable from \"@material-table/core\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {entityList, StateRegionList} from \"../api/enitity.crud\";\r\nimport {UserContext} from '../context/UserContext';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Link from '@material-ui/core/Link';\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ChildDetailedPage from '../entity/ChildDetailedPage';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst columns = [\r\n\r\n    {title: 'Name', field: 'name'},\r\n    {title: 'Entity Structure', field: 'entityStructure'},\r\n    {title: 'Filing State', field: 'filingState'},\r\n    {title: 'Formation Date', field: 'formationDate'},\r\n];\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst constPathColors = {\r\n    1: '#e8e8e8',\r\n    2: '#dcdcdc',\r\n    3: '#cfcfcf',\r\n    4: '#c2c2c2',\r\n    5: '#b6b6b6'\r\n};\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\nconst Dashboard = (props, {onChange, ...rest}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const [entitydata, setEntityData] = React.useState([]);\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    const [state, setState] = React.useState(false);\r\n    useEffect(() => {\r\n\r\n        if (loading === true) {\r\n            addTitle('Dashboard');\r\n            if (role === 'Parent Organization' || role === 'Administrator') {\r\n                asyncDataFetch();\r\n            }\r\n        }\r\n\r\n    }, [loading])\r\n\r\n    const asyncDataFetch = async () => {\r\n        try {\r\n\r\n            const tokenResult = await props.authState.accessToken;\r\n            await fetchData(tokenResult);\r\n        } catch (e) {\r\n            addError('Something when wrong!!');\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const fetchData = async (token) => {\r\n        try {\r\n            await entityList(token).then(response => {\r\n                if (response.data) {\r\n                    setEntityData(response.data.results);\r\n                    setComponentLoading(false);\r\n                }\r\n\r\n                if (response.error) {\r\n                    addError(response.error.message);\r\n                }\r\n\r\n                if (response.type === 'error') {\r\n                    window.location.reload();\r\n                }\r\n\r\n                if (response.status === 401) {\r\n                    window.location.reload();\r\n                }\r\n\r\n\r\n            });\r\n        } catch (e) {\r\n            addError(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={() => {\r\n                        removeError(index)\r\n                    }}/>\r\n                ))}\r\n\r\n\r\n\r\n                {checkRole === 'Parent Organization' ?\r\n                    <MaterialTable\r\n                        isLoading={componentLoading}\r\n                        title=\"Entities\"\r\n                        data={entitydata ? entitydata : ''}\r\n                        columns={columns}\r\n                        parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n                        options={{\r\n                            // selection: true,\r\n                            // paging: false,\r\n                            sorting: true,\r\n                            search: true,\r\n\r\n\r\n                        }}\r\n                        actions={[\r\n                            rowData => ({\r\n                                icon: () => <VisibilityIcon />,\r\n                                tooltip: 'View',\r\n                                onClick: (event, rowData) => {\r\n                                    if (rowData.id !== attributes.organization) {\r\n                                        history.push(`/entity/${rowData.id}`);\r\n                                    } else {\r\n                                        history.push(`/entity`);\r\n                                    }\r\n                                }\r\n                            })\r\n                        ]}\r\n                        // onSelectionChange={rows =>\r\n                        //     onChange(\r\n                        //         rows.filter(onlyUnique).map(({id, value}) => ({id, value}))\r\n                        //     )\r\n                        // }\r\n                    /> : ''}\r\n\r\n                {\r\n                    checkRole === 'Child Entity' ?\r\n                        <ChildDetailedPage/> : ''\r\n                }\r\n\r\n                {checkRole === 'Administrator' ?\r\n                    <MaterialTable\r\n                        isLoading={componentLoading}\r\n                        title=\"Entities\"\r\n                        data={entitydata ? entitydata : ''}\r\n                        columns={columns}\r\n                        parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n                        options={{\r\n                            // selection: true,\r\n                            // paging: false,\r\n                            sorting: true,\r\n                            search: true,\r\n\r\n\r\n                        }}\r\n                        actions={[\r\n                            rowData => ({\r\n                                icon: () => <VisibilityIcon />,\r\n                                tooltip: 'View',\r\n                                onClick: (event, rowData) => {\r\n                                    if (rowData.id !== attributes.organization) {\r\n                                        history.push(`/entity/${rowData.id}`);\r\n                                    } else {\r\n                                        history.push(`/entity`);\r\n                                    }\r\n                                }\r\n                            })\r\n                        ]}\r\n                        // onSelectionChange={rows =>\r\n                        //     onChange(\r\n                        //         rows.filter(onlyUnique).map(({id, value}) => ({id, value}))\r\n                        //     )\r\n                        // }\r\n                    /> : ''}\r\n\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withOktaAuth(Dashboard);\r\n","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ChatPanel from './ChatPanel';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n    },\r\n\r\n    sideColor: {\r\n        backgroundColor: '#1e1e2d'\r\n    },\r\n\r\n    appBarTitle: {\r\n        flexGrow: 1\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst MainChatApp = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar position=\"inherit\" className={classes.appBar} color=\"default\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        #geheimorganisation\r\n                    </Typography>\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n\r\n\r\n\r\n            <Drawer\r\n                className={'messageSideBar'}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                variant=\"permanent\"\r\n                position=\"inherit\"\r\n            >\r\n                <AppBar position=\"inherit\" className={classes.sideColor}>\r\n                    <Toolbar position=\"inherit\">\r\n                        <Typography className={classes.appBarTitle} variant=\"h6\" noWrap>\r\n                            Messages\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\" edge=\"end\">\r\n                            <MoreIcon/>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <ChatPanel/>\r\n            </Drawer>\r\n            {/*<main className={classes.content}>*/}\r\n            {/*    <div className={classes.toolbar} />*/}\r\n            {/*    <Typography paragraph>*/}\r\n            {/*        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt*/}\r\n            {/*        ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum*/}\r\n            {/*        facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit*/}\r\n            {/*        gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id*/}\r\n            {/*        donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit*/}\r\n            {/*        adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.*/}\r\n            {/*        Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis*/}\r\n            {/*        imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget*/}\r\n            {/*        arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem*/}\r\n            {/*        donec massa sapien faucibus et molestie ac.*/}\r\n            {/*    </Typography>*/}\r\n            {/*    <Typography paragraph>*/}\r\n            {/*        Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla*/}\r\n            {/*        facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac*/}\r\n            {/*        tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat*/}\r\n            {/*        consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed*/}\r\n            {/*        vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In*/}\r\n            {/*        hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et*/}\r\n            {/*        tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin*/}\r\n            {/*        nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas*/}\r\n            {/*        accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.*/}\r\n            {/*    </Typography>*/}\r\n            {/*</main>*/}\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainChatApp;\r\n","import React, {useEffect, useMemo, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n// import BusinessIcon from '@material-ui/icons/Business';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nimport AllMessages from \"../message/AllMessages\";\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendMessageForm from '../message/SendMessageForm';\r\nimport AdminSendMessageForm from \"../message/AdminSendMessageForm\";\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport MainChatApp from \"../message/MainChatApp\";\r\nimport NewChatPanel from \"../message/NewChatPanel\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nModal.setAppElement(document.getElementById('messageModal'));\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\nconst drawerWidth = 700;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n    // list: {\r\n    //     width: 700,\r\n    // },\r\n\r\n    listInner: {\r\n        // width: '100%'\r\n    },\r\n\r\n    messageSection: {\r\n        marginBottom: 20,\r\n        marginTop: 30\r\n    },\r\n    messageTitle: {\r\n        marginLeft: 20,\r\n        float: 'left'\r\n    },\r\n\r\n    rootDrawer: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(7),\r\n        paddingRight: theme.spacing(7),\r\n    },\r\n\r\n    skeletonStyle: {\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n    },\r\n\r\n    skeletonItem: {\r\n        // marginBottom: 1,\r\n    },\r\n\r\n\r\n    largeIcon: {\r\n        width: 40,\r\n        height: 40,\r\n        color: '#48465b'\r\n    },\r\n\r\n\r\n}));\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst EntityDetailedPage = (props) => {\r\n\r\n    const entity_id = props.match.params.id;\r\n    localStorage.setItem('activeEntityID', props.match.params.id);\r\n\r\n    const {loading, attributes, addError, errorList, role, addTitle, profile} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    var subtitle;\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    const [entityName, setEntityName] = React.useState('');\r\n    const [state, setState] = React.useState(false);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ');\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n        var detailedView = '';\r\n        if (checkRole === 'Parent Organization' || checkRole === 'Administrator') {\r\n            detailedView = await entityDetail(entity_id);\r\n            if (detailedView.result) {\r\n                addTitle('Entity - ' + detailedView.result.entity.name);\r\n                localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            }\r\n\r\n            if (detailedView.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (detailedView.status === 401) {\r\n                window.location.reload();\r\n            }\r\n\r\n        }\r\n\r\n        if (checkRole === 'Child Entity') {\r\n            detailedView = await selfEntityDetail();\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            addTitle('Entity - ' + detailedView.result.entity.name);\r\n            setEntitydetail(detailedView.result)\r\n            setContactList(detailedView.result.contacts);\r\n            setAttachmentList(detailedView.result.attachments)\r\n            setTaskList(detailedView.result.tasks)\r\n            setComponentLoading(false);\r\n\r\n        }\r\n\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n        if (detailedView.status === 401) {\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    }, [compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    const updateComplianceTable = async () => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(entity_id);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const toggleDrawer = (event, open) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        if (open) {\r\n            setState(true);\r\n        }\r\n\r\n        if (!open) {\r\n            setState(false);\r\n        }\r\n    };\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={2}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n\r\n                <Drawer\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                        disableEnforceFocus: true\r\n                    }}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }} anchor={'right'} open={state} onClose={(event) => toggleDrawer(event, false)}>\r\n                    <div>\r\n                        <main className={classes.content}>\r\n                            {\r\n                                role === 'Administrator' ?\r\n                                    <AdminSendMessageForm {...props} /> : ''\r\n                                // <SendMessageForm/> : ''\r\n                            }\r\n\r\n                            {\r\n                                role === 'Parent Organization' || role === 'Child Entity' ?\r\n                                    <SendMessageForm {...props} /> : ''\r\n                            }\r\n                        </main>\r\n                    </div>\r\n                </Drawer>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State\r\n                                                ID:</strong> {entitydetail.entity.stateId ? entitydetail.entity.stateId : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul>\r\n                                    </> :\r\n\r\n                                    <>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            {entitydetail.registerAgent.address ?\r\n                                                <li className={classes.listItem}><StreetviewIcon\r\n                                                    className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                                </li> : ''}\r\n                                            {entitydetail.registerAgent.address2 ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                                </li> : ''}\r\n\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </> :\r\n                                    <>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n\r\n                                            <li className={classes.listItem}>\r\n                                                <div className=\"forwardingAddress\">\r\n                                                    <RoomIcon\r\n                                                        className={clsx(classes.adjustment, 'forwardingAddress-icon')}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </div>\r\n                                            </li>\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                        <Skeleton/>\r\n                                    </>\r\n\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Paper className={classes.messageSection} elevation={2}>\r\n                    <Grid container spacing={5}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className=\"messageSection\">\r\n                                <Typography className={classes.messageTitle} variant=\"h5\" component=\"h2\"\r\n                                            color=\"textPrimary\">Messages</Typography>\r\n                                <Button variant=\"outlined\" color=\"primary\" className={'sendMessageButton'}\r\n                                        onClick={(event) => toggleDrawer(event, true)}>\r\n                                    {checkRole === 'Administrator' ?\r\n                                        'Send Message' : 'Message to Support'\r\n                                    }\r\n                                </Button>\r\n                            </div>\r\n                            {entitydetail ?\r\n                                <AllMessages entityName={entitydetail.entity.name} openmodal={openModal}/> :\r\n\r\n\r\n                                <List>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                </List>\r\n\r\n                            }\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading}\r\n                                            tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={entity_id}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                         redirect={true}\r\n                                         url={`/attachment/form/add/${entity_id}`} data={attachmentData}\r\n                                         title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${entity_id}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <div>\r\n                    <Modal\r\n                        // parentSelector={() => document.querySelector('#messageModal')}\r\n\r\n                        isOpen={modalIsOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeModal}\r\n                        contentLabel=\"Chat Application\"\r\n                        ariaHideApp={false}\r\n                        style={{\r\n                            overlay: {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            },\r\n\r\n                        }}\r\n                    >\r\n                        <div className=\"closeButton\">\r\n                            <CancelIcon onClick={closeModal} className={classes.largeIcon}/>\r\n                        </div>\r\n                        <div className=\"chat-wrapper\">\r\n                            <NewChatPanel/>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n\r\n\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(EntityDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AllMessages from \"../message/AllMessages\";\r\nimport Modal from \"react-modal\";\r\nimport NewChatPanel from \"../message/NewChatPanel\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AdminSendMessageForm from \"../message/AdminSendMessageForm\";\r\nimport SendMessageForm from \"../message/SendMessageForm\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\n\r\nModal.setAppElement(document.getElementById('messageModal'));\r\n\r\nconst drawerWidth = 700;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n\r\n    listInner:{\r\n        // width: '100%'\r\n    },\r\n\r\n    messageSection: {\r\n        marginBottom: 20,\r\n        marginTop: 30\r\n    },\r\n    messageTitle: {\r\n        marginLeft: 20,\r\n        float: 'left'\r\n    },\r\n\r\n    rootDrawer: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(7),\r\n        paddingRight: theme.spacing(7),\r\n    },\r\n\r\n    largeIcon: {\r\n        width: 40,\r\n        height: 40,\r\n        color: '#48465b'\r\n    },\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst SelfDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, profile, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    const [state, setState] = React.useState(false);\r\n\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            try{\r\n                addTitle('Entity - ' + profile.name);\r\n                localStorage.setItem('activeEntityID', attributes.organization);\r\n            } catch (e) {\r\n                props.authService.logout('/');\r\n            }\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n                localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n                if (detailedView.type === 'error') {\r\n                    window.location.reload();\r\n                }\r\n\r\n                if (detailedView.status === 401) {\r\n                    window.location.reload();\r\n                }\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n                setComponentLoading(false);\r\n            }\r\n        }\r\n        if (detailedView.result) {\r\n            localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks)\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n        if(detailedView.status === 401){\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n    }\r\n    const toggleDrawer = (event, open) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        if (open) {\r\n            setState(true);\r\n        }\r\n\r\n        if (!open) {\r\n            setState(false);\r\n        }\r\n    };\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={()=> removeError(index)}/>\r\n                ))}\r\n\r\n                <Drawer\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                        disableEnforceFocus: true\r\n                    }}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }} anchor={'right'} open={state} onClose={(event) => toggleDrawer(event, false)}>\r\n                    <div>\r\n                        <main className={classes.content}>\r\n                            {\r\n                                role === 'Administrator' ?\r\n                                    <AdminSendMessageForm {...props} /> : ''\r\n                                // <SendMessageForm/> : ''\r\n                            }\r\n\r\n                            {\r\n                                role === 'Parent Organization' || role === 'Child Entity' ?\r\n                                    <SendMessageForm {...props} /> : ''\r\n                            }\r\n                        </main>\r\n                    </div>\r\n                </Drawer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> {entitydetail.entity.stateId ? entitydetail.entity.stateId : ''}</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}>\r\n                                                    <div className=\"forwardingAddress\">\r\n                                                        <RoomIcon\r\n                                                            className={clsx(classes.adjustment, 'forwardingAddress-icon')}/>\r\n                                                        <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                    </div>\r\n\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Paper className={classes.messageSection} elevation={2}>\r\n                    <Grid container spacing={5}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className=\"messageSection\">\r\n                                <Typography className={classes.messageTitle} variant=\"h5\" component=\"h2\"\r\n                                            color=\"textPrimary\">Messages</Typography>\r\n                                <Button variant=\"outlined\" color=\"primary\" className={'sendMessageButton'}\r\n                                        onClick={(event) => toggleDrawer(event, true)}>\r\n                                    {role === 'Administrator' ?\r\n                                        'Send Message' : 'Message to Support'\r\n                                    }\r\n                                </Button>\r\n                            </div>\r\n                            { entitydetail ?\r\n                                <AllMessages entityName={entitydetail.entity.name} openmodal={openModal}/> :\r\n                                <List>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Skeleton variant=\"circle\" height={50} width={50} animation=\"wave\"/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={30} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Skeleton height={50} width={'100%'} animation=\"wave\"/>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\"/>\r\n                                </List>\r\n                            }\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Paper>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${attributes ? attributes.organization : ''}`} data={attachmentData}\r\n                                     title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${attributes ? attributes.organization : ''}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n                <div>\r\n                    <Modal\r\n                        // parentSelector={() => document.querySelector('#messageModal')}\r\n                        isOpen={modalIsOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeModal}\r\n                        contentLabel=\"Chat Application\"\r\n                        ariaHideApp={false}\r\n                        style={{\r\n                            overlay: {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            },\r\n\r\n                        }}\r\n                    >\r\n                        <div className=\"closeButton\">\r\n                            <CancelIcon onClick={closeModal} className={classes.largeIcon}/>\r\n                        </div>\r\n                        <div className=\"chat-wrapper\">\r\n                            <NewChatPanel/>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n\r\n\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(SelfDetailedPage);\r\n\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const contactList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const createContact = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ContactTypeList, StateRegionList} from \"../api/enitity.crud\";\r\nimport {createContact} from \"../api/contact.crud\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport utils from 'smartystreets-javascript-sdk-utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\n\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpcomponentLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddContactForm = (props) => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const {loading, attributes, addTitle} = useContext(UserContext);\r\n\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [componentLoading, setComponentLoading] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    //form state\r\n\r\n\r\n    const [inputContactFirstName, setInputContactFirstName] = React.useState({value: '', error: ' '});\r\n    const [inputContactLastName, setInputLastName] = React.useState({value: '', error: ' '});\r\n    const [inputContactEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputContactPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputContactStreet, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputContactType, setInputNotificationContactType] = React.useState({value: '', error: ' '});\r\n    const [inputContactCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputContactState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputContactZipcode, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setComponentLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true);\r\n\r\n    };\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                setInputNotificationCity({...inputContactCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputContactState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(loading === true) {\r\n            addTitle('Add New Contact');\r\n            fetchDataforDropdownsContactTypeList();\r\n            fetchDataforDropdownsStateRegion();\r\n            localStorage.setItem('iAgree', false);\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            const response = await ContactTypeList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n            setContactType(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            const response = await StateRegionList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n            setStateRegion(response.data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = async (value) => {\r\n        return Promise.resolve(setAddressValue(value));\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setInputContactFirstName({error: ' ', value: ''})\r\n                setInputLastName({error: ' ', value: ''})\r\n                setInputNotificationEmail({error: ' ', value: ''})\r\n                setInputNotificationPhone({error: ' ', value: ''})\r\n                setInputNotificationAddress({error: ' ', value: ''})\r\n                setInputNotificationContactType({error: ' ', value: ''})\r\n                setInputNotificationCity({error: ' ', value: ''})\r\n                setInputNotificationState({error: ' ', value: ''})\r\n                setInputNotificationZip({error: ' ', value: ''});\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n\r\n        event.preventDefault();\r\n        setComponentLoading(true);\r\n        setAddressReset('');\r\n        // if (userResponse === 'false') {\r\n        //     await addressCheck();\r\n        // }\r\n\r\n\r\n        var formsubmit = true;\r\n        if (inputContactZipcode.value) {\r\n            var zip = parseInt(inputContactZipcode.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setComponentLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setComponentLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputContactCity.value && inputContactState.value && inputContactZipcode.value !== '') {\r\n                    formsubmit = false;\r\n                    await addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            contactsCreate(event, userResponse);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactsCreate = async (event, valid = null) => {\r\n\r\n\r\n        let formData = new FormData();\r\n        setInputContactFirstName({...inputContactFirstName, error: ' '})\r\n        setInputLastName({...inputContactLastName, error: ' '})\r\n        setInputNotificationEmail({...inputContactEmail, error: ' '})\r\n        setInputNotificationPhone({...inputContactPhone, error: ' '})\r\n        setInputNotificationAddress({...inputContactStreet, error: ' '})\r\n        setInputNotificationContactType({...inputContactType, error: ' '})\r\n        setInputNotificationCity({...inputContactCity, error: ' '})\r\n        setInputNotificationState({...inputContactState, error: ' '})\r\n        setInputNotificationZip({...inputContactZipcode, error: ' '})\r\n\r\n        if(attributes.organization) {\r\n            formData.append('entityId', props.match.params.id ? props.match.params.id : attributes.organization);\r\n        }\r\n        formData.append('inputContactFirstName', inputContactFirstName.value);\r\n        formData.append('inputContactLastName', inputContactLastName.value);\r\n        formData.append('inputContactEmail', inputContactEmail.value);\r\n        formData.append('inputContactPhone', inputContactPhone.value);\r\n        formData.append('inputContactStreet', addressObject.streetLine);\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputContactStreet', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputContactStreet', addressObject)\r\n        }\r\n        formData.append('inputContactType', inputContactType.value)\r\n\r\n        if (inputContactCity.value) {\r\n            formData.append('inputContactCity', inputContactCity.value);\r\n        } else {\r\n            formData.append('inputContactCity', '');\r\n        }\r\n        if (inputContactState.value) {\r\n            formData.append('inputContactState', inputContactState.value);\r\n        } else {\r\n            formData.append('inputContactState', '');\r\n        }\r\n\r\n        formData.append('inputContactZipcode', inputContactZipcode.value)\r\n\r\n\r\n        formData.append('inputAddressIsValid', valid ? valid : isValidAddress)\r\n        formData.append('acceptInvalidAddress', userAgree)\r\n\r\n        const response = await createContact(formData);\r\n\r\n        if (response.type === 'error') {\r\n            window.location.reload();\r\n        }\r\n\r\n        if (response.status === 401) {\r\n            window.location.reload();\r\n        }\r\n\r\n        if (response.field_error) {\r\n\r\n            setComponentLoading(false);\r\n            setIsValidAddress(false);\r\n            setUserAgree(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n\r\n                if (key === 'inputContactFirstName') {\r\n                    setInputContactFirstName({...inputContactFirstName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactLastName') {\r\n                    setInputLastName({...inputContactLastName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactEmail') {\r\n                    setInputNotificationEmail({...inputContactEmail, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactPhone') {\r\n                    setInputNotificationPhone({...inputContactPhone, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactStreet') {\r\n                    setInputNotificationAddress({...inputContactStreet, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactType') {\r\n                    setInputNotificationContactType({...inputContactType, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactCity') {\r\n                    setInputNotificationCity({...inputContactCity, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactState') {\r\n                    setInputNotificationState({...inputContactState, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactZipcode') {\r\n                    setInputNotificationZip({...inputContactZipcode, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n        if (response.data) {\r\n            if (response.data.type === 'ok') {\r\n\r\n                new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve();\r\n                        setUserAgree(false);\r\n                        setComponentLoading(false);\r\n                        setSuccessMessage(response.data.results);\r\n                        resetForm();\r\n                        window.scrollTo(0, 0)\r\n                    }, 600);\r\n                });\r\n\r\n            }\r\n\r\n            if (response.data) {\r\n                if (response.data.type === 'error') {\r\n                    await updateStates(response.data.results);\r\n\r\n                    // console.log(addressObject);\r\n                }\r\n            }\r\n        }\r\n\r\n        //\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n        //\r\n        // setTimeout(() => {\r\n        //     setComponentLoading(false);\r\n        //     history.goBack();\r\n        // }, 4000)\r\n        // setComponentLoading(true);\r\n\r\n\r\n    }\r\n\r\n\r\n    const updateStates = async (data) => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setUserAgree(false);\r\n                setComponentLoading(false);\r\n                setErrorMessage(data);\r\n                window.scrollTo(0, 0)\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const addressCheck = async (event) => {\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputContactCity.value;\r\n        lookup1.state = inputContactState.value;\r\n        lookup1.zipCode = inputContactZipcode.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                contactsCreate(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const disableSuccessMessage = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n\r\n    const disableErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Contact</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Please make sure that you have entered it correctly.\r\n                        If you proceed and we are unable to validate your address it may cause delays\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                            {successMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableSuccessMessage()}}\r\n                                    variant=\"success\"\r\n                                    message={successMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n\r\n                            {errorMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableErrorMessage()}}\r\n                                    variant=\"error\"\r\n                                    message={errorMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n                            <Grid container spacing={0}>\r\n                                <form id={\"create-course-form\"} className={classes.container} onSubmit={handleOnSubmit}\r\n                                      noValidate\r\n                                      autoComplete=\"off\">\r\n                                    <FormGroup row>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                error={inputContactFirstName.error !== ' '}\r\n                                                label=\"First Name\"\r\n                                                value={inputContactFirstName.value}\r\n                                                onChange={e => setInputContactFirstName({\r\n                                                    ...inputContactFirstName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactFirstName',\r\n                                                    id: 'inputContactFirstName',\r\n                                                }}\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactFirstName.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                value={inputContactLastName.value}\r\n                                                onChange={e => setInputLastName({\r\n                                                    ...inputContactLastName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactLastName',\r\n                                                    id: 'inputContactLastName',\r\n                                                }}\r\n                                                error={inputContactLastName.error !== ' '}\r\n                                                label=\"Last Name\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactLastName.error}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n\r\n                                                type=\"email\"\r\n                                                value={inputContactEmail.value}\r\n                                                onChange={e => setInputNotificationEmail({\r\n                                                    ...inputContactEmail,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactEmail',\r\n                                                    id: 'inputContactEmail',\r\n                                                }}\r\n                                                error={inputContactEmail.error !== ' '}\r\n                                                helperText={inputContactEmail.error}\r\n                                                label=\"Email\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                value={inputContactPhone.value}\r\n                                                onChange={e => setInputNotificationPhone({\r\n                                                    ...inputContactPhone,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactPhone',\r\n                                                    id: 'inputContactPhone',\r\n                                                }}\r\n                                                error={inputContactPhone.error !== ' '}\r\n                                                helperText={inputContactPhone.error}\r\n                                                label=\"Phone\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-12'}>\r\n                                            <Autocomplete\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                width={''}\r\n                                                addressObject={addressObjectChangeHandler}\r\n                                                addressValue={addressValueChangeHandler}\r\n                                                reset={addressReset}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactStreet',\r\n                                                    id: 'inputContactStreet',\r\n                                                }}\r\n                                                error={inputContactStreet.error !== ' '}\r\n                                                helperText={inputContactStreet.error}\r\n                                                className={clsx(classes.dense)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactType.error !== ' '}>\r\n                                                <InputLabel htmlFor=\"age-native-simple\">Contact Type</InputLabel>\r\n                                                <Select\r\n                                                    disabled={componentLoading}\r\n                                                    native\r\n                                                    value={inputContactType.value}\r\n                                                    onChange={e => setInputNotificationContactType({\r\n                                                        ...inputContactType,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactType',\r\n                                                        id: 'inputContactType',\r\n                                                    }}\r\n                                                    error={inputContactType.error !== ' '}\r\n                                                    helperText={inputContactType.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {contactType?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactType.error}</FormHelperText>\r\n\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                error={inputContactCity.error !== ' '}\r\n                                                helperText={inputContactCity.error}\r\n                                                value={inputContactCity.value || ''}\r\n                                                onChange={e => setInputNotificationCity({\r\n                                                    ...inputContactCity,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactCity',\r\n                                                    id: 'inputContactCity',\r\n                                                }}\r\n                                                label=\"City\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactState.error !== ' '}>\r\n                                                <InputLabel>\r\n                                                    State/Region/Province\r\n                                                </InputLabel>\r\n                                                <Select\r\n                                                    disabled={componentLoading}\r\n                                                    required\r\n                                                    native\r\n                                                    value={inputContactState.value || ''}\r\n                                                    onChange={e => setInputNotificationState({\r\n                                                        ...inputContactState,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactState',\r\n                                                        id: 'inputContactState',\r\n                                                    }}\r\n                                                    error={inputContactState.error !== ' '}\r\n                                                    helperText={inputContactState.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactState.error}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                type=\"text\"\r\n                                                value={inputContactZipcode.value}\r\n                                                onChange={e => setInputNotificationZip({\r\n                                                    ...inputContactZipcode,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactZipcode',\r\n                                                    id: 'inputContactZipcode',\r\n                                                }}\r\n                                                error={inputContactZipcode.error !== ' '}\r\n                                                helperText={inputContactZipcode.error}\r\n                                                label=\"Postal / Zip Code\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-12'}>\r\n                                            <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                                {componentLoading ? (\r\n                                                        <div className={clsx(classes.loader)}>\r\n                                                            <FacebookProgress/>\r\n                                                        </div>)\r\n                                                    : null}\r\n                                                {/*<input className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                                {/*       type=\"reset\" onClick={(e) => {resetForm()}} value=\"Reset\"/>*/}\r\n\r\n                                                <input disabled={componentLoading}\r\n                                                       className={clsx('btn btn-primary', classes.restButton)}\r\n                                                       type=\"submit\" value=\"Add new Contact\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </form>\r\n                            </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddContactForm);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {AttachmentsList} from \"../api/attachment\";\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Attachments = () => {\r\n    const {loading, attributes, addError, errorList, addTitle} = useContext(UserContext);\r\n\r\n    // const history = useHistory();\r\n    const classes = useStyles();\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Attachments');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await AttachmentsList(attributes.organization);\r\n            if (response.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (response.status === 401) {\r\n                window.location.reload();\r\n            }\r\n            await setAttachmentList(response.data.documents);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Attachment API.');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dummyData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n            {title: 'Entity', field: 'entityName'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable redirect={true} url={'/admin/attachments'} loading={componentLoading} tooltip={'Add Attachment'} data={dummyData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Attachments);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {contactList} from \"../api/contact.crud\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Contacts = () => {\r\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [listcontacts, setListcontacts] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Contacts');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await contactList(attributes.organization);\r\n            if (response.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (response.status === 401) {\r\n                window.location.reload();\r\n            }\r\n            await setListcontacts(response.data.contacts);\r\n\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Contact API.');\r\n        }\r\n    }\r\n\r\n    const dummyDataa = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Phone', field: 'phone'},\r\n        ],\r\n        data: listcontacts,\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={(e) => removeError(index)}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Contacts'} data={dummyDataa}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Contacts);\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport {attachFiles} from \"../api/attachment\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n        width: '100%',\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    formStyle: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n\r\n    uploadCustom: {\r\n        marginTop: 10,\r\n        marginLeft: 5\r\n\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddAttachmentForm = (props) => {\r\n\r\n    const {addTitle, addError, attributes, role} = useContext(UserContext);\r\n    addTitle('Add New Document');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    // const [error, setError] = React.useState(false);\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // const handleClose = (event, reason) => {\r\n    //     setError(false);\r\n    // }\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n\r\n// console.log(inputFormationDate.value);\r\n\r\n// Display the key/value pairs\r\n        if (attributes.organization) {\r\n            formData.append('entityId', props.match.params.id ? props.match.params.id : attributes.organization);\r\n        }\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        try {\r\n            const response = await attachFiles(formData);\r\n            if (response.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (response.status === 401) {\r\n                window.location.reload();\r\n            }\r\n            if (response) {\r\n                if (response.status === true) {\r\n                    setSuccessMessage(response.message);\r\n                    setLoading(false);\r\n                }\r\n                if (response.status === false) {\r\n                    setInputFiling({...inputFiling, error: response.message});\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            addError('Something went wrong with Document API.');\r\n            setErrorMessage('Something went wrong with Document API.');\r\n        }\r\n\r\n        // if(response.status == true) {\r\n        //     setTimeout(() => {\r\n        //         history.goBack();\r\n        //     }, 4000)\r\n        // }\r\n\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const filename = e.target.files[0].name;\r\n        const response = await lorexFileUpload(formData);\r\n        if (response.error === false) {\r\n            setInputFiling({...inputFiling, value: response.record_id, success: 'Ready to add Document.'});\r\n            setInputFileSize({...inputFileSize, value: response.file_size})\r\n            if (filename) {\r\n                setInputFileName({...inputFileName, value: filename});\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Layout>\r\n\r\n                <>\r\n                    <div className={classes.breadcrumbsDiv}>\r\n                        <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                            <Typography className={classes.baseColor} color=\"inherit\"\r\n                                        variant=\"h4\">Navigation</Typography>\r\n                            <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                                <Link color=\"inherit\" href=\"/\">\r\n                                    <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                                </Link>\r\n\r\n                                <Link color=\"inherit\" onClick={(e) => {\r\n                                    history.goBack()\r\n                                }}>\r\n                                    <Typography color=\"textPrimary\">Entity</Typography>\r\n                                </Link>\r\n                                <Typography color=\"textPrimary\">Add Document</Typography>\r\n                            </Breadcrumbs>\r\n                        </Paper>\r\n                    </div>\r\n\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        {successMessage !== ' ' ? (\r\n                            <MySnackbarContentWrapper\r\n                                onClose={() => {\r\n                                    removeSuccess()\r\n                                }}\r\n                                variant=\"success\"\r\n                                message={successMessage}\r\n                            />\r\n                        ) : ''}\r\n\r\n\r\n                        {errorMessage !== ' ' ? (\r\n                            <MySnackbarContentWrapper\r\n                                onClose={() => {\r\n                                    removeErrorMessage()\r\n                                }}\r\n                                variant=\"error\"\r\n                                message={errorMessage}\r\n                            />\r\n                        ) : ''}\r\n                        <div className=\"row\">\r\n                            <form className={classes.formStyle} onSubmit={handleOnSubmit} noValidate\r\n                                  autoComplete=\"off\">\r\n                                <FormGroup row>\r\n                                    <div className={'col-md-6'}>\r\n                                        <CustomFileInput\r\n                                            disabled={loading}\r\n                                            required\r\n                                            id=\"attachment\"\r\n                                            value={inputFiling.value.File}\r\n                                            onChange={e => fileChange(e)}\r\n                                            label=\"Document\"\r\n                                            className={clsx(classes.fileUploading, classes.dense)}\r\n                                            margin=\"dense\"\r\n                                            invalid={inputFiling.error !== ' '}\r\n                                            valid={inputFiling.success !== ' '}\r\n                                        />\r\n                                        <span\r\n                                            className={classes.uploadCustom}>{inputFiling.success !== ' ' ? inputFiling.success : ' '}</span>\r\n                                        {inputFiling.error !== ' ' ? <span\r\n                                            className={'error'}>{inputFiling.error !== ' ' ? inputFiling.error : ' '}</span> : ''}\r\n                                    </div>\r\n\r\n                                    <div className={'col-md-12'}>\r\n                                        <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                            {loading ? (\r\n                                                    <div className={clsx(classes.loader)}>\r\n                                                        <FacebookProgress/>\r\n                                                    </div>)\r\n                                                : null}\r\n\r\n                                            <input disabled={loading}\r\n                                                   className={clsx('btn btn-primary', classes.restButton)}\r\n                                                   type=\"submit\" value=\"Add Document\"/>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </Paper>\r\n                </>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default withOktaAuth(AddAttachmentForm);\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Particles from \"react-particles-js\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Footer from \"../layout/Footer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    privacyBody: {\r\n        padding: 20\r\n    },\r\n    privacyLogo: {\r\n        textAlign: 'center',\r\n        marginBottom: 50,\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nfunction Privacy(props) {\r\n    const classes = useStyles();\r\n    const today = new Date().getFullYear();\r\n\r\n    return (\r\n        <>\r\n            <div className={'paperContainerPrivacy'}>\r\n                <Container component=\"main\">\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.privacyBody}>\r\n                                <div className={classes.privacyLogo}>\r\n                                    <Link to=\"/\">\r\n                                        <img\r\n                                            alt=\"Logo\"\r\n                                            src=\"/media/agentadmin/logo/aa_full.png\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>Privacy and Cookies Policy</h2>\r\n                                    <p>\r\n                                        <strong>United Agent Services, LLC (“UAS,” “we,” “us,” “our,” or the “Company”)\r\n                                            is committed\r\n                                            to\r\n                                            protecting the privacy of anyone who visits our websites or registers to use\r\n                                            our\r\n                                            services or\r\n                                            to attend our events.</strong>\r\n                                    </p>\r\n                                    <h4>Your Consent</h4>\r\n                                    <p>Use of this site constitutes your consent to the terms of this Notice and the\r\n                                        application of\r\n                                        any applicable laws and regulations. Whenever you submit personal data and\r\n                                        information via\r\n                                        this site, you consent to the collection, use, and disclosure of that data and\r\n                                        information\r\n                                        in accordance with this Notice.</p>\r\n                                    <h4>Collection of Information</h4>\r\n                                    <p>Like many web sites, this site actively collects information from its visitors\r\n                                        both by asking\r\n                                        you specific questions when you interact with us (such as registering on our\r\n                                        websites,\r\n                                        signing up to receive information from us, or making a purchase) and by\r\n                                        permitting you to\r\n                                        communicate directly with us via e-mail. Some of the information that you submit\r\n                                        may be\r\n                                        personal data or information, that is: information relating to an identified or\r\n                                        identifiable\r\n                                        natural person. Information collected may include your name, username, mailing\r\n                                        address,\r\n                                        email address or other information which you provide to us so that we may\r\n                                        communicate with\r\n                                        you.\r\n                                        Our websites will gather information such as what kind of browser you are on,\r\n                                        what operating\r\n                                        system you are using, your IP address, cookie information, time stamp (time page\r\n                                        accessed as\r\n                                        well as time spent per web page) and your clickstream information (for example,\r\n                                        which pages\r\n                                        you have viewed and how long you have been there). Note that information is only\r\n                                        gathered\r\n                                        while you are on the website.\r\n                                        In compliance with the United States Children's Online Privacy Protection Act\r\n                                        (COPPA), we do\r\n                                        not seek information from children 13 and under.\r\n                                        Use of Personal Information</p>\r\n                                    <p>We will use and process your personal data lawfully, fairly and in a transparent\r\n                                        manner. We\r\n                                        will collect and use your personal data solely for the specified and legitimate\r\n                                        purposes\r\n                                        stated in this Notice. Except as otherwise stated, we may use your information\r\n                                        to improve\r\n                                        the content of our site, to customize the site to your preferences, to\r\n                                        communicate\r\n                                        information to you (if you have requested it), for our marketing and research\r\n                                        purposes, for\r\n                                        the fulfillment of services and related activities, and account management. </p>\r\n                                    <p>We use your personal information to:\r\n                                        <ul>\r\n                                            <li>Set up your account and verify your identity</li>\r\n                                            <li>Provide products or services and related activities you requested</li>\r\n                                            <li>Provide direct and digital marketing communications via email, direct\r\n                                                mail and\r\n                                                telephone communication or through personalized online experiences\r\n                                            </li>\r\n                                            <li>Provide better customer service when you contact us</li>\r\n                                            <li>Improve the quality, content and overall user experience of this site\r\n                                            </li>\r\n                                            <li>Administer surveys, contests and other promotional events</li>\r\n                                            <li>Address other business needs such as website administration, security\r\n                                                and fraud\r\n                                                prevention, legal compliance and business continuity\r\n                                            </li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <h4>Sharing of Information with Third Parties</h4>\r\n                                    <p>We understand that you do not want us to sell, rent or lease your personal\r\n                                        information to\r\n                                        third\r\n                                        parties without your consent and we only share your personal information with\r\n                                        third parties\r\n                                        in\r\n                                        certain situations. Examples of situations where we may share your personal\r\n                                        information with\r\n                                        third parties include:</p>\r\n                                    <ul>\r\n                                        <li>Sharing personal information with our service providers who provide services\r\n                                            on our\r\n                                            behalf on\r\n                                            the condition that they are permitted to use that information solely in\r\n                                            accordance with\r\n                                            our\r\n                                            instructions to provide requested services\r\n                                        </li>\r\n                                        <li>Sharing personal information with our business partners, but only to the\r\n                                            extent you have\r\n                                            purchased or expressed an interest in a product or service of such business\r\n                                            partner or\r\n                                            interacted with or otherwise authorized the sharing of your personal\r\n                                            information with\r\n                                            such\r\n                                            business partner\r\n                                        </li>\r\n                                        <li>Sharing personal information with a third-party service provider to conduct\r\n                                            our\r\n                                            contests,\r\n                                            surveys, or promotions, but only for the limited purpose of administering\r\n                                            such contests,\r\n                                            surveys\r\n                                            or promotions\r\n                                        </li>\r\n                                        <li>Transferring personal information to a purchaser or successor entity in the\r\n                                            event of a\r\n                                            sale or\r\n                                            other corporate transaction involving some or all of our business or as\r\n                                            needed to affect\r\n                                            the\r\n                                            sale or transfer of business assets, or as needed for external audit,\r\n                                            compliance or\r\n                                            corporate\r\n                                            governance related matters\r\n                                        </li>\r\n                                        <li>Disclosing information (i) as required by applicable law, court orders,\r\n                                            government\r\n                                            regulators\r\n                                            or legal process (including subpoenas); (ii) as necessary to protect the\r\n                                            rights or\r\n                                            property of\r\n                                            United Agent Services, LLC or this site; or (iii) in exigent circumstances\r\n                                            to protect\r\n                                            the\r\n                                            personal safety of users of the site or other members of the public\r\n                                            We also share your personal information with our affiliates for the purposes\r\n                                            set forth\r\n                                            in this\r\n                                            Notice.\r\n                                        </li>\r\n                                    </ul>\r\n\r\n\r\n                                    <h5>Use of Cookies</h5>\r\n                                    <p> Our websites use \"cookies\". A cookie is a small text file that is stored on your\r\n                                        computer,\r\n                                        tablet, or smartphone when you visit a website that helps the site remember\r\n                                        information\r\n                                        about\r\n                                        you and your preferences.\r\n                                        You can find more information about the type of cookies we use and the purposes\r\n                                        for which we\r\n                                        use\r\n                                        them below:</p>\r\n                                    <ul>\r\n                                        <li>How we use Cookies on our Websites and what Information we collect.</li>\r\n                                    </ul>\r\n                                    <h5>Session Cookies</h5>\r\n                                    <p>We use session cookies for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>To control access to paid for subscription content</li>\r\n                                        <li>To allow you to carry information across pages of our website and avoid\r\n                                            having to\r\n                                            re-enter\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>information</h5>\r\n                                    <ul>\r\n                                        <li>To allow you to access stored information for future use, such as\r\n                                            registration\r\n                                        </li>\r\n                                        <li>To compile anonymous, aggregated statistics that allow us to understand how\r\n                                            users use\r\n                                            our\r\n                                            website and to help us improve the structure of our website\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>Persistent Cookies</h5>\r\n                                    <p>We use persistent cookies for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>To control access to paid for subscription content</li>\r\n                                        <li>To help us recognize you as a unique visitor (just a number) when you return\r\n                                            to our\r\n                                            website\r\n                                            and to allow us to tailor content to match your preferred interests\r\n                                        </li>\r\n                                        <li>To compile anonymous, aggregated statistics that allow us to understand how\r\n                                            users use\r\n                                            our\r\n                                            website and to help us improve the structure of our website\r\n                                        </li>\r\n                                        <li>To internally identify you by account name, email address, customer ID, and\r\n                                            location\r\n                                            (geographic and computer ID/IP address)\r\n                                        </li>\r\n                                        <li>To tailor content to your preferences</li>\r\n\r\n                                    </ul>\r\n                                    <h5>Third Party Cookies</h5>\r\n                                    <p>Third parties serve cookies via our websites. These are used for the following\r\n                                        purposes:</p>\r\n                                    <ul>\r\n                                        <li>To serve content on websites and track whether this content is clicked on by\r\n                                            users\r\n                                        </li>\r\n                                        <li>To control how often you are shown particular content</li>\r\n                                        <li>To count the number of anonymous users of our websites</li>\r\n                                        <li>For website usage analysis</li>\r\n                                        <li>To link the information we store in cookies to any personally identifiable\r\n                                            information\r\n                                            you\r\n                                            submit while on our websites\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h4>Links to Other Websites</h4>\r\n                                    <p>This site may contain links or references to other web sites. Please be aware\r\n                                        that we do not\r\n                                        control other web sites and, except as otherwise noted in the applicable\r\n                                        website, this\r\n                                        Notice\r\n                                        does not apply to those websites and we are not responsible for the security or\r\n                                        privacy of\r\n                                        any\r\n                                        information collected by these third parties.</p>\r\n\r\n                                    <h4>Share; Social Media Features; Email a Friend Functions; Public Forums</h4>\r\n                                    <p>We offers certain “share”, “social media” functionality on some of our websites.\r\n                                        If you\r\n                                        choose\r\n                                        to use these functions, we may and/or the third party social media network may\r\n                                        collect\r\n                                        certain\r\n                                        information about you depending on the function or feature you use. We use this\r\n                                        information\r\n                                        for\r\n                                        the sole purpose of sending this one-time email and we do not retain the\r\n                                        information. With\r\n                                        respect to the social media features (such as allowing you to post information\r\n                                        about your\r\n                                        activities or share your information with others on a social media site), the\r\n                                        collection and\r\n                                        use\r\n                                        of information by and your interactions with the third party social media\r\n                                        network will be\r\n                                        governed by the privacy policy of the company providing those social media\r\n                                        features. We are\r\n                                        not\r\n                                        responsible for the security or privacy of any information collected by these\r\n                                        third\r\n                                        parties.</p>\r\n\r\n                                    <h4>Storage in Marketing and Customer Relationship Software Applications</h4>\r\n                                    <p>Regardless of your consent to be contacted for direct marketing purposes, your\r\n                                        personally\r\n                                        identifiable data will be held in our marketing automation software and customer\r\n                                        relationship\r\n                                        management software for the purposes outlined above, and to properly track\r\n                                        compliance, such\r\n                                        as\r\n                                        previous consent or opt-ins, as well as your company’s relationship history with\r\n                                        us.</p>\r\n\r\n                                    <h4>Security</h4>\r\n                                    <p>We have implemented reasonable technical and organizational measures that are\r\n                                        designed to\r\n                                        prevent unauthorized access, unlawful processing and unauthorized or accidental\r\n                                        loss,\r\n                                        destruction or damage to your personal data on its servers. </p>\r\n\r\n                                    <h4>Access and Correction; Your Rights</h4>\r\n                                    <p> In some jurisdictions, you are entitled to request access to and correction of\r\n                                        your personal\r\n                                        information and, to the extent available under applicable law, you are also\r\n                                        entitled to\r\n                                        request\r\n                                        the deletion of personal data and to restrict or object to processing. Any\r\n                                        requests for\r\n                                        access\r\n                                        to or correction or deletion of your personal data, should be directed to the\r\n                                        contact person\r\n                                        listed under \"Contact Information\" below. Note that we may ask additional\r\n                                        information from\r\n                                        you,\r\n                                        to confirm your identity, as we take the protection of your personal data\r\n                                        seriously. In some\r\n                                        cases, if you have an online account with us, you may be able to log into your\r\n                                        account at\r\n                                        any\r\n                                        time to access and update the information you have provided to us.</p>\r\n                                    <p> Furthermore, you have a right of access to the personal data that you have\r\n                                        provided in a\r\n                                        structured, commonly used and machine-readable format (portability), subject to\r\n                                        a fee\r\n                                        (except\r\n                                        where it is not permissible under applicable law).</p>\r\n                                    <p>You have the ability and the right to limit the information you share with us and\r\n                                        the\r\n                                        communications we send to you. When you opt-in to receive communications from\r\n                                        us, you are\r\n                                        giving\r\n                                        your consent for your information to be used for us to contact you by email,\r\n                                        direct mail and\r\n                                        telephone, and to deliver personalized website experiences, to share information\r\n                                        about\r\n                                        relevant\r\n                                        products, services, best practice information, industry news and events. You can\r\n                                        amend your\r\n                                        communication preferences, or opt-out completely.</p>\r\n\r\n\r\n                                    <h4>International Data Transfers</h4>\r\n                                    <p>We store and process your personal data in various countries worldwide including\r\n                                        the United\r\n                                        States. We may transfer and access such information from around the world,\r\n                                        including the\r\n                                        United\r\n                                        States and other countries in which we have operations or in which our hosted\r\n                                        service\r\n                                        providers’\r\n                                        cloud servers are located. By providing us with your personal data, you consent\r\n                                        to this\r\n                                        transfer. Your data shall be protected in accordance with this Notice regardless\r\n                                        of where it\r\n                                        is\r\n                                        processed or stored.</p>\r\n\r\n                                    <p>The following applies to data transfers outside the European Economic Area\r\n                                        (“EEA): While\r\n                                        using\r\n                                        or otherwise processing your personal data for the purposes set out in this\r\n                                        Notice, we may\r\n                                        transfer your personal data to countries outside of the EEA. Whenever such\r\n                                        transfer occurs,\r\n                                        it\r\n                                        will be based on the Standard Contractual Clauses (according to EU Commission\r\n                                        Decision\r\n                                        87/2010/EC or any future replacement) signed by the recipient of such personal\r\n                                        data in\r\n                                        accordance with applicable law.</p>\r\n\r\n                                    <h4>Changes to This Privacy Policy</h4>\r\n                                    <p>We may revise this Notice. You agree to be bound by any such revisions and should\r\n                                        therefore\r\n                                        periodically visit this page to determine the current terms to which you are\r\n                                        bound. This\r\n                                        Notice\r\n                                        has been amended for the last time on May 11th 2020.</p>\r\n\r\n                                    <h4>Contact Information</h4>\r\n                                    <p>If you have any questions, comments or concerns about this Policy, you may\r\n                                        contact us at by\r\n                                        phone at (302) 467-3700 between 9am and 4pm ET or via email to\r\n                                        privacy@unitedagentservices.com.</p>\r\n                                    <h4>Disclosures</h4>\r\n                                    <p>If we are required by law or legal process, we will disclose or provide access to\r\n                                        your PII or\r\n                                        Business Information to such government or judicial authority as specified by\r\n                                        such law or\r\n                                        legal\r\n                                        process.</p>\r\n                                    <h4>Options</h4>\r\n                                    <p>Upon request we will provide customers with access to their own records.\r\n                                        Customers can access\r\n                                        and correct their PII or Business Information by emailing us Monday – Friday 9am\r\n                                        to 4pm ET\r\n                                        at\r\n                                        privacy@unitedagentservices.com, using the username and phone number provided\r\n                                        during\r\n                                        ordering.</p>\r\n\r\n                                    <h4>California Privacy Rights</h4>\r\n                                    <p>California Civil Code Section 1798.83 permits customers of United Agent Services,\r\n                                        LLC who are\r\n                                        California residents to request certain information regarding the disclosure of\r\n                                        any personal\r\n                                        information, including PII and Business Information, to third parties for their\r\n                                        direct\r\n                                        marketing\r\n                                        purposes. To make such a request, please send an email at\r\n                                        privacy@unitedagentservices.com</p>\r\n\r\n                                    <h4>Additional Information for California Residents</h4>\r\n                                    <p>In addition to the information provided in this privacy policy, additional\r\n                                        information for\r\n                                        California residents can be found below.</p>\r\n\r\n                                    <p>Pursuant to California law, we are providing additional information to California\r\n                                        residents.\r\n                                        Under California law, certain organizations need to disclose whether the\r\n                                        following\r\n                                        categories of\r\n                                        “personal information” are collected or disclosed for an organization’s\r\n                                        “business purpose”\r\n                                        as\r\n                                        those terms are defined under California law. Below please find the categories\r\n                                        of personal\r\n                                        information about California residents that we collect or disclose to third\r\n                                        parties or\r\n                                        service\r\n                                        providers. Note that while a category may be marked that does not necessarily\r\n                                        mean that we\r\n                                        have\r\n                                        information in that category about you. For example, while we collect credit\r\n                                        card numbers\r\n                                        for\r\n                                        customers who purchase our products, we do not collect or transfer credit card\r\n                                        numbers of\r\n                                        individuals that submit questions on our website’s “contact us” page. We do not\r\n                                        sell\r\n                                        personal\r\n                                        information.</p>\r\n\r\n                                    <h4>Personal Information</h4>\r\n                                    <p>Information is Collected By Us and Disclosed for Business Purposes</p>\r\n                                    <ul>\r\n                                        <li>Audio, electronic, visual, thermal, olfactory, physical characteristics or\r\n                                            similar\r\n                                        </li>\r\n                                        <li>Credit or debit card number, bank account number or other financial\r\n                                            information\r\n                                        </li>\r\n                                        <li>Commercial or transactional information (e.g., products or services\r\n                                            purchased, or\r\n                                            other purchasing or consuming histories or tendencies)\r\n                                        </li>\r\n\r\n                                        <li>Electronic network activity (e.g., browsing history)</li>\r\n                                        <li>Contact information (e.g., name or alias, postal address, email address,\r\n                                            telephone\r\n                                            number,\r\n                                            signature)\r\n                                        </li>\r\n                                        <li>Online identifier (e.g. IP address)</li>\r\n                                    </ul>\r\n                                    <h4>Information is Collected By Us but Not Disclosed for Business Purposes</h4>\r\n                                    <ul>\r\n                                        <li> Social Security Number, Driver’s License Number, State ID, Passport Number,\r\n                                            Insurance Policy\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>Number or Signature</h5>\r\n                                    <p>Information is Not Collected By Us and Information is Not Disclosed for Business\r\n                                        Purposes</p>\r\n                                    <ul>\r\n                                        <li>Biometric information</li>\r\n                                        <li>Characteristics of protected classifications (e.g., age, sex, race,\r\n                                            ethnicity,\r\n                                            physical or\r\n                                            mental handicap, etc.)\r\n                                        </li>\r\n                                        <li>Professional, employment, employment history or education information\r\n                                            • Geolocation data\r\n                                        </li>\r\n                                        <li>Medical or health information not covered by HIPAA or health insurance\r\n                                            information\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p><strong>We and our third-party service providers may collect the above categories\r\n                                        of\r\n                                        personal\r\n                                        information from the following sources:</strong></p>\r\n                                    <ul>\r\n                                        <li>Direct Interactions, such as, when you register for our services or make a\r\n                                            purchase\r\n                                        </li>\r\n                                        <li>Data from Third Parties, such as, information on third-party websites or\r\n                                            other\r\n                                            information you\r\n                                            may have made publicly available or information provided by third-party\r\n                                            sources,\r\n                                            including but\r\n                                            not limited to government entities and data resellers\r\n                                        </li>\r\n                                        <li> Automated Tracking Technologies, such as, information automatically\r\n                                            collected\r\n                                            about\r\n                                            your\r\n                                            interaction with our services and websites using various technologies such\r\n                                            as\r\n                                            cookies,\r\n                                            web logs\r\n                                            and beacons and internet tags.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p>Depending on how you interact with us and our services, we may use and disclose\r\n                                        the\r\n                                        above\r\n                                        categories of personal information for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>Administering our relationship with you and our business, such as, providing\r\n                                            and\r\n                                            managing your\r\n                                            access to and use of our services.\r\n                                        </li>\r\n                                        <li>Improving our Services, such as inviting you to participate in surveys or to\r\n                                            personalize your\r\n                                            experience with our services.\r\n                                        </li>\r\n                                        <li>Marketing, such as registering your opt-in to receive marketing\r\n                                            communications\r\n                                            when\r\n                                            applicable.\r\n                                        </li>\r\n                                        <li>Other general business support purposes, including but not limited to,\r\n                                            procurement,\r\n                                            financial\r\n                                            and fiscal management, risk and compliance management, and external\r\n                                            reporting.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p><strong>We may share the above categories of personal information to the\r\n                                        following third\r\n                                        parties:</strong></p>\r\n                                    <ul>\r\n                                        <li>other United Agent Services affiliates or subsidiaries, e.g. for providing\r\n                                            underpinning\r\n                                            technology to support the services we deliver;\r\n                                        </li>\r\n                                        <li>our service providers, e.g. for managing or hosting services and/or\r\n                                            underpinning\r\n                                            technology\r\n                                            for the services we provide;\r\n                                        </li>\r\n                                        <li>our business partners, to the extent you have purchased or expressed\r\n                                            interest in, a\r\n                                            product or\r\n                                            service of such business partner, interacted with them or otherwise\r\n                                            authorized the\r\n                                            sharing of\r\n                                            your personal information with such business partner;\r\n                                        </li>\r\n                                        <li>subscribing, accrediting or professional organizations, e.g. for providing\r\n                                            utilization\r\n                                            information to organizations that provide you with access to our services\r\n                                            and/or sharing\r\n                                            tracking and redeeming credits for professional accreditation;\r\n                                        </li>\r\n                                        <li>organizations involved in business transfers, e.g.to a purchaser or\r\n                                            successor entity\r\n                                            in the\r\n                                            event of a sale or any other corporate transaction involving some or all of\r\n                                            our\r\n                                            business;\r\n                                        </li>\r\n                                        <li>other parties, e.g. as needed for external audit, compliance, risk\r\n                                            management,\r\n                                            corporate\r\n                                            development and/or corporate governance related matters; or\r\n                                        </li>\r\n                                        <li>governmental authorities and regulators, as required under applicable law.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h4>Exercising Rights to Request Access and Request Deletion</h4>\r\n                                    <p>Subject to certain exceptions, California residents have the right to request\r\n                                        access,\r\n                                        deletion\r\n                                        and portability of their personal information as further described in the\r\n                                        Privacy & Cookie\r\n                                        Notice. If you would like to submit a request or have additional questions about\r\n                                        the\r\n                                        personal\r\n                                        information that we have about you, please contact us by contacting us at\r\n                                        privacy@unitedagentservices.com.</p>\r\n\r\n                                    <p>When you submit your request, we will take steps to attempt to verify your\r\n                                        identity. We will\r\n                                        seek to match the information in your request to the personal information we\r\n                                        maintain about\r\n                                        you.\r\n                                        As part of our verification process, we may ask you to submit additional\r\n                                        information, use\r\n                                        identity verification services to assist us, or if you have set up an account on\r\n                                        our\r\n                                        website, we\r\n                                        may ask you to sign in to your account as part of our identity verification\r\n                                        process. Please\r\n                                        understand that, depending on the type of request you submit, to protect the\r\n                                        privacy and\r\n                                        security of your personal information, we will only complete your request when\r\n                                        we are\r\n                                        satisfied\r\n                                        that we have verified your identity to a reasonable degree of certainty.</p>\r\n\r\n                                    <p>We do not discriminate against individuals who exercise their rights under\r\n                                        applicable law.\r\n                                        If we receive a request from an authorized agent, we have the right to verify\r\n                                        with the data\r\n                                        subject that the data subject indeed wants to take the action requested by the\r\n                                        agent and\r\n                                        will do\r\n                                        so by contacting the data subject directly.</p>\r\n\r\n\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box>\r\n                        <div className=\"privacy-policy-footer\">\r\n                            <Footer/>\r\n                        </div>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n\r\n        </>);\r\n}\r\n\r\nexport default Privacy;\r\n\r\n\r\n","import { Grid, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nlet direction = \"ltr\";\r\n// direction = 'rtl';\r\nconst theme = createMuiTheme({\r\n    direction: direction,\r\n    palette: {\r\n        type: \"light\",\r\n    },\r\n});\r\n\r\nconst bigData = [];\r\nfor (let i = 0; i < 1; i++) {\r\n    const d = {\r\n        id: i + 1,\r\n        name: \"Name\" + i,\r\n        surname: \"Surname\" + Math.round(i / 10),\r\n        isMarried: i % 2 ? true : false,\r\n        birthDate: new Date(1987, 1, 1),\r\n        birthCity: 0,\r\n        sex: i % 2 ? \"Male\" : \"Female\",\r\n        type: \"adult\",\r\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n        time: new Date(1900, 1, 1, 14, 23, 35),\r\n    };\r\n    bigData.push(d);\r\n}\r\n\r\nfunction ExampleTable() {\r\n    return (\r\n        <MaterialTable\r\n            title=\"Basic Tree Data Preview\"\r\n            data={[\r\n                {\r\n                    id: 7,\r\n                    name: 'g',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'child',\r\n                    parentId: 3,\r\n                },\r\n                {\r\n                    id: 5,\r\n                    name: 'e',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'child',\r\n                },\r\n                {\r\n                    id: 1,\r\n                    name: 'a',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 63,\r\n                    sex: 'Male',\r\n                    type: 'adult',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'b',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'adult',\r\n                    parentId: 1,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'c',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'child',\r\n                    parentId: 1,\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'omer',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'child',\r\n                    parentId: 3,\r\n                },\r\n                {\r\n                    id: 6,\r\n                    name: 'f',\r\n                    surname: 'Baran',\r\n                    birthYear: 1987,\r\n                    birthCity: 34,\r\n                    sex: 'Female',\r\n                    type: 'child',\r\n                    parentId: 5,\r\n                },\r\n            ]}\r\n            columns={[\r\n                { title: 'Adı', field: 'name' },\r\n                { title: 'Soyadı', field: 'surname' },\r\n                { title: 'Cinsiyet', field: 'sex' },\r\n                { title: 'Tipi', field: 'type', removable: false },\r\n                { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\r\n                {\r\n                    title: 'Doğum Yeri',\r\n                    field: 'birthCity',\r\n                    lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n                },\r\n            ]}\r\n            parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n            options={{\r\n                // selection: true,\r\n                // searchAutoFocus: true,\r\n                search:true\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default ExampleTable;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {EntityList, lorexFileUpload} from \"../api/enitity.crud\";\r\nimport {attachFiles} from \"../api/attachment\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {DropzoneArea} from 'material-ui-dropzone';\r\nimport {AttachFile, Description, PictureAsPdf, Theaters} from '@material-ui/icons';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst handlePreviewIcon = (fileObject, classes) => {\r\n    const {type} = fileObject.file\r\n    const iconProps = {\r\n        className: classes.image,\r\n    }\r\n\r\n    if (type.startsWith(\"video/\")) return <Theaters {...iconProps} />\r\n\r\n\r\n    switch (type) {\r\n        case \"application/msword\":\r\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            return <Description {...iconProps} />\r\n        case \"application/pdf\":\r\n            return <PictureAsPdf {...iconProps} />\r\n        default:\r\n            return <AttachFile {...iconProps} />\r\n    }\r\n}\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n        width: '100%',\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    formStyle: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AdminAddAttachmentForm = (props) => {\r\n\r\n    const {loading, addTitle, addError, role} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const [apiLoading, setApiLoading] = React.useState(false);\r\n    // const [error, setError] = React.useState(false);\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n    const [files, setFiles] = React.useState([]);\r\n    const [fileProgress, setFileProgress] = React.useState(0);\r\n    const [state, setState] = React.useState({counter: 0});\r\n    const [entityId, setEntityId] = React.useState({value: '', error: ' '});\r\n    const [entityList, setEntityList] = React.useState([]);\r\n    const [key, setKey] = React.useState(0);\r\n    var fileIndex = 0;\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Bulk Attachments');\r\n            entitylisitingLoader();\r\n        }\r\n    }, [loading]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (state.counter === files.length) {\r\n            if (files.length > 0) {\r\n                setSuccessMessage('Uploaded Successfully');\r\n                setApiLoading(false);\r\n                setState({counter: 0});\r\n                reset();\r\n            }\r\n\r\n        }\r\n    }, [state]);\r\n\r\n    const reset = () => {\r\n        setFiles([]);\r\n        fileIndex = 0;\r\n        setKey(Math.floor((Math.random() * 10) + 1));\r\n    }\r\n    const entitylisitingLoader = async () => {\r\n        setApiLoading(true);\r\n        var EntityListLocal = await JSON.parse(localStorage.getItem(\"EntityList\") !== 'undefined' ? localStorage.getItem(\"EntityList\") : '');\r\n        if (EntityListLocal !== 'undefined' && EntityListLocal) {\r\n            setEntityList(EntityListLocal);\r\n            setApiLoading(false);\r\n        } else {\r\n            const response = await EntityList();\r\n\r\n            if (response.error) {\r\n                addError(response.error.message);\r\n            }\r\n\r\n            if (response.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (response.status === 401) {\r\n                window.location.reload();\r\n            }\r\n\r\n\r\n            localStorage.setItem(\"EntityList\", JSON.stringify(response.data));\r\n            await setEntityList(response.data);\r\n            setApiLoading(false);\r\n        }\r\n    }\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const handleChange = (files) => {\r\n        setFiles(files);\r\n    }\r\n\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n\r\n        if (files.length === 0) {\r\n            setErrorMessage('File is required');\r\n            setApiLoading(false);\r\n        } else {\r\n            setErrorMessage(' ');\r\n        }\r\n\r\n        if (entityId.value === '') {\r\n            setEntityId({...entityId, error: 'Entity field is required'});\r\n            setApiLoading(false);\r\n        } else {\r\n            setEntityId({...entityId, error: ' '})\r\n        }\r\n\r\n        files.map(async (anObjectMapped, index) => {\r\n            let formData = new FormData();\r\n            formData.append('file', anObjectMapped);\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                fileIndex = fileIndex + 1;\r\n\r\n\r\n                formData.append('entityId', entityId.value);\r\n                formData.append('inputFileId', response.record_id);\r\n                formData.append('inputFileName', anObjectMapped.name);\r\n                formData.append('inputFileSize', response.file_size);\r\n                formData.append('bulkUpload', fileIndex);\r\n                formData.append('totalBulkUpload', files.length);\r\n\r\n                try {\r\n                    const response = await attachFiles(formData);\r\n                    if (response) {\r\n                        if (response.status === true) {\r\n                            setState((prevState, props) => {\r\n                                return {counter: prevState.counter + 1};\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    addError('Something went wrong with Attchemnt API.');\r\n                    setErrorMessage('Something went wrong with Attchemnt API.');\r\n                }\r\n            }\r\n\r\n            if (response.error === true) {\r\n                addError(response.message);\r\n            }\r\n\r\n        })\r\n\r\n\r\n        // setLoading(true);\r\n        // let formData = new FormData();\r\n        // console.log(files);\r\n// console.log(inputFormationDate.value);\r\n\r\n// Display the key/value pairs\r\n//         if (attributes.organization) {\r\n//             formData.append('entityId', props.match.params.id ? props.match.params.id : attributes.organization);\r\n//         }\r\n//         formData.append('inputFileId', inputFiling.value);\r\n//         formData.append('inputFileName', inputFileName.value);\r\n//         formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        // try {\r\n        //     const response = await attachFiles(formData);\r\n        //     if (response) {\r\n        //         if (response.status === true) {\r\n        //             setSuccessMessage(response.message);\r\n        //             setLoading(false);\r\n        //         }\r\n        //     }\r\n        // } catch (e) {\r\n        //     addError('Something went wrong with Attchemnt API.');\r\n        //     setErrorMessage('Something went wrong with Attchemnt API.');\r\n        // }\r\n\r\n        // if(response.status == true) {\r\n        //     setTimeout(() => {\r\n        //         history.goBack();\r\n        //     }, 4000)\r\n        // }\r\n\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        setApiLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const filename = e.target.files[0].name;\r\n        const response = await lorexFileUpload(formData);\r\n        if (response.error === false) {\r\n            setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n            setInputFileSize({...inputFileSize, value: response.file_size})\r\n            if (filename) {\r\n                setInputFileName({...inputFileName, value: filename});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setApiLoading(false);\r\n        }\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Layout>\r\n            {role === 'Administrator' ?\r\n                <>\r\n                    {history.length > 0 ?\r\n                        <div className={classes.breadcrumbsDiv}>\r\n                            <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                                <Typography className={classes.baseColor} color=\"inherit\"\r\n                                            variant=\"h4\">Navigation</Typography>\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                                    {/*<Link color=\"inherit\" href=\"/\">*/}\r\n                                    {/*    <Typography color=\"textPrimary\">Dashboard</Typography>*/}\r\n                                    {/*</Link>*/}\r\n\r\n                                    <Link color=\"inherit\" onClick={(e) => {\r\n                                        history.goBack()\r\n                                    }}>\r\n                                        <Typography color=\"textPrimary\">Attachments</Typography>\r\n                                    </Link>\r\n                                    <Typography color=\"textPrimary\">Add Attachment</Typography>\r\n                                </Breadcrumbs>\r\n                            </Paper>\r\n                        </div>\r\n                        : ''}\r\n\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        {successMessage !== ' ' ? (\r\n                            <MySnackbarContentWrapper\r\n                                onClose={() => {\r\n                                    removeSuccess()\r\n                                }}\r\n                                variant=\"success\"\r\n                                message={successMessage}\r\n                            />\r\n                        ) : ''}\r\n\r\n\r\n                        {errorMessage !== ' ' ? (\r\n                            <MySnackbarContentWrapper\r\n                                onClose={() => {\r\n                                    removeErrorMessage()\r\n                                }}\r\n                                variant=\"error\"\r\n                                message={errorMessage}\r\n                            />\r\n                        ) : ''}\r\n                        {/*<Backdrop className={classes.backdrop} open={apiLoading}>*/}\r\n                        {/*    <CircularProgress color=\"inherit\" />*/}\r\n                        {/*</Backdrop>*/}\r\n                        <div className=\"row\">\r\n                            <form className={classes.formStyle} onSubmit={handleOnSubmit} noValidate\r\n                                  autoComplete=\"off\">\r\n\r\n\r\n                                <div className={'col-md-6'}>\r\n                                    <FormControl className={clsx(classes.selectField)}\r\n                                                 error={entityId.error !== ' '}>\r\n                                <Autocomplete\r\n                                    onChange={(event, newValue) => {\r\n                                       if(newValue) {\r\n                                           setEntityId({\r\n                                               ...entityId,\r\n                                               value: newValue.id\r\n                                           })\r\n                                       } else {\r\n                                           setEntityId({\r\n                                               ...entityId,\r\n                                               value: ''\r\n                                           })\r\n                                       }\r\n                                    }}\r\n\r\n                                    id=\"combo-box-demo\"\r\n                                    options={entityList ? entityList : ''}\r\n                                    getOptionLabel={(option) => option.account_name}\r\n                                    renderInput={(params) => <TextField error={entityId.error !== ' '} {...params} label=\"Entity Name\" variant=\"outlined\" />}\r\n                                />\r\n                                        <FormHelperText>{entityId.error}</FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <FormGroup row>\r\n\r\n                                    <div className=\"col-md-12\">\r\n                                        <DropzoneArea key={key} getPreviewIcon={handlePreviewIcon} filesLimit={50}\r\n                                                      showPreviews={true}\r\n                                                      showPreviewsInDropzone={false}\r\n                                                      useChipsForPreview\r\n                                                      previewGridProps={{container: {spacing: 1, direction: 'row'}}}\r\n                                                      previewChipProps={{classes: {root: classes.previewChip}}}\r\n                                                      previewText=\"Selected files\"\r\n                                                      acceptedFiles={['.pdf']}\r\n                                                      onChange={handleChange}\r\n                                                      disableRejectionFeedback={apiLoading}\r\n                                                      clearOnUnmount={true}\r\n                                                      getFileAddedMessage={(fileName) => `File ${fileName} ready to add document.`}\r\n\r\n                                        />\r\n                                    </div>\r\n                                    {/*<div className={'col-md-6'}>*/}\r\n                                    {/*    <CustomFileInput*/}\r\n                                    {/*        disabled={loading}*/}\r\n                                    {/*        required*/}\r\n                                    {/*        id=\"attachment\"*/}\r\n                                    {/*        value={inputFiling.value.File}*/}\r\n                                    {/*        onChange={e => fileChange(e)}*/}\r\n                                    {/*        label=\"Attachment\"*/}\r\n                                    {/*        className={clsx(classes.fileUploading, classes.dense)}*/}\r\n                                    {/*        margin=\"dense\"*/}\r\n                                    {/*        invalid={inputFiling.error !== ' '}*/}\r\n                                    {/*        valid={inputFiling.success !== ' '}*/}\r\n                                    {/*    />*/}\r\n                                    {/*    <span>{inputFiling.success !== ' ' ? inputFiling.success : ' '}</span>*/}\r\n                                    {/*</div>*/}\r\n\r\n                                    <div className={'col-md-12'}>\r\n\r\n                                        <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                            {apiLoading ? (\r\n                                                files.length !== 0 ?\r\n                                                    <Box position=\"relative\" display=\"inline-flex\">\r\n                                                        <CircularProgress variant=\"static\"\r\n                                                                          value={Math.round(state.counter / files.length * 100)}/>\r\n                                                        <Box\r\n                                                            top={0}\r\n                                                            left={0}\r\n                                                            bottom={0}\r\n                                                            right={0}\r\n                                                            position=\"absolute\"\r\n                                                            display=\"flex\"\r\n                                                            alignItems=\"center\"\r\n                                                            justifyContent=\"center\"\r\n                                                        >\r\n                                                            <Typography variant=\"caption\" component=\"div\"\r\n                                                                        color=\"textSecondary\">{Math.round(state.counter / files.length * 100)}%</Typography>\r\n                                                        </Box>\r\n                                                    </Box> : ''\r\n\r\n                                            ) : null}\r\n\r\n                                            {/*{apiLoading ? (*/}\r\n                                            {/*        <div className={clsx(classes.loader)}>*/}\r\n                                            {/*            <FacebookProgress/>*/}\r\n                                            {/*        </div>)*/}\r\n                                            {/*    : null}*/}\r\n\r\n                                            <input disabled={apiLoading}\r\n                                                   className={clsx('btn btn-primary', classes.restButton)}\r\n                                                   type=\"submit\" value=\"Add attachment\"/>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </Paper>\r\n                </> : <MySnackbarContentWrapper\r\n                    variant=\"error\"\r\n                    message={'Access Denied.'}\r\n                />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default withOktaAuth(AdminAddAttachmentForm);\r\n","import React, {useContext, ReactDOM} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {object} from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {sendMessageFormChat} from '../api/message';\r\nimport clsx from \"clsx\";\r\n// import {animateScroll} from \"react-scroll\";\r\nimport { ScrollTo } from \"react-scroll-to\";\r\n\r\nimport {toast} from \"react-toastify\";\r\nimport {animateScroll, Element, scroller} from \"react-scroll\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst ReactDOMServer = require('react-dom/server');\r\nconst HtmlToReactParser = require('html-to-react').Parser;\r\n\r\n\r\nconst NewChatPanelForLogs = (props) => {\r\n    const ref = React.createRef();\r\n    const chatContainer = React.createRef();\r\n    const entity_id = localStorage.getItem('activeEntityID');\r\n    const IncomingIDFromAllMessages = localStorage.getItem('activeLogThread');\r\n    const {attributes, loading, role, profile, userMessages, addMessage, manageOuterThreads, messageLogThreads} = useContext(UserContext);\r\n    const [inComingThreadID, setInComingThreadID] = React.useState(IncomingIDFromAllMessages);\r\n    const [activeThread, setActiveThread] = React.useState('');\r\n    const [chosenThread, setChosenThread] = React.useState({});\r\n\r\n    const [updateThread, setUpdateThread] = React.useState(false)\r\n\r\n    const [message, setMessage] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        const obj = messageLogThreads.find(o => o.id === inComingThreadID);\r\n        setActiveThread(obj.id);\r\n        setChosenThread(obj);\r\n\r\n        setTimeout(() => {\r\n            scrollToBottom(obj.id);\r\n        }, 1000);\r\n\r\n    }, [inComingThreadID]);\r\n\r\n\r\n    const scrollToBottom = (id) => {\r\n        let goToContainer = new Promise((resolve, reject) => {\r\n            scroller.scrollTo(`containerElementThread${id}`,{\r\n                containerId: `contacts`,\r\n                duration: 0,\r\n                delay: 0,\r\n                smooth: \"easeInOutQuart\",\r\n            });\r\n            resolve();\r\n        });\r\n        const getMessageID = localStorage.getItem('activeLogMessage');\r\n        // console.log('MessageID', getMessageID);\r\n        let goToMessage = new Promise((resolve, reject) => {\r\n            scroller.scrollTo(`containerElementMessage${getMessageID}`,{\r\n                containerId: `containerElement`,\r\n                duration: 0,\r\n                delay: 0,\r\n                smooth: \"easeInOutQuart\",\r\n            });\r\n            resolve();\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const onClickThread = async (threadID) => {\r\n        const obj = messageLogThreads.find(o => o.id === threadID);\r\n        await setChosenThread(obj);\r\n        setMessage('');\r\n    }\r\n\r\n\r\n    var getInitials = function (string) {\r\n        var names = string.split(' '),\r\n            initials = names[0].substring(0, 1).toUpperCase();\r\n\r\n        if (names.length > 1) {\r\n            initials += names[names.length - 1].substring(0, 1).toUpperCase();\r\n        }\r\n        return initials;\r\n    };\r\n\r\n\r\n    const handleKeypress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessage();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const sendMessage = (event) => {\r\n        // event.preventDefault();\r\n\r\n        let form = new FormData();\r\n        form.append('eid', '4071993000001842131')\r\n        form.append('subject', 'RE: ' + chosenThread.subject);\r\n        form.append('gid', chosenThread.id);\r\n        form.append('message', message);\r\n        const response = sendMessageFormChat(form).then(response => {\r\n            if (response.status === true) {\r\n                setMessage('')\r\n                setUpdateThread(true);\r\n                addMessage(chosenThread, message, role, attributes.organization)\r\n            }\r\n\r\n\r\n            if (response.status === false) {\r\n                toast.error(response.message, {\r\n                    position: toast.POSITION.BOTTOM_LEFT\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const stripHTML = (myString) => {\r\n        return myString.replace(/<[^>]*>?/gm, '').replace(/\\&nbsp;/g, '');\r\n    }\r\n\r\n    const truncate = (str, no_words) => {\r\n        return str.split(\" \").splice(0, no_words).join(\" \") + \" ...\";\r\n    }\r\n\r\n\r\n    const convertHTML = (data) => {\r\n\r\n\r\n        if (typeof data !== 'undefined') {\r\n            // console.log('Messages', data);\r\n            // var newHTML = stripHtml(data, {\r\n            //     stripTogetherWithTheirContents: [\r\n            //         \"table\", // default\r\n            //\r\n            //     ],\r\n            // }).result;\r\n\r\n            const htmlInput = data;\r\n            const htmlToReactParser = new HtmlToReactParser();\r\n            const abc = htmlToReactParser.parse(htmlInput);\r\n            return abc;\r\n        } else {\r\n            // console.log(typeof data)\r\n            return data;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const messageOrientation = (threadInfo) => {\r\n        if (role === 'Administrator') {\r\n            if (threadInfo.fromEid === '0') {\r\n                return 'replies'\r\n            } else {\r\n                return 'sent'\r\n            }\r\n        }\r\n\r\n        if (role === 'Child Entity' || role === 'Parent Organization') {\r\n            // if (threadInfo.fromEid === profile.organization) {\r\n            //     return 'sent'\r\n            // } else {\r\n            //     return 'replies'\r\n            // }\r\n\r\n\r\n            if (threadInfo.fromEid === '0') {\r\n                return 'sent'\r\n            }\r\n            if (threadInfo.fromEid === attributes.organization) {\r\n                return 'replies'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const namePicker = (threadInfo) => {\r\n        if (threadInfo.fromEid === '0') {\r\n            return getInitials('Admin')\r\n        }\r\n\r\n        if (threadInfo.fromEid === attributes.organization) {\r\n            return getInitials(localStorage.getItem('ThreadBelongsTo'))\r\n        } else {\r\n            return getInitials(localStorage.getItem('ThreadBelongsTo'))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const lastMessage = (threadInfo) => {\r\n\r\n        if ((threadInfo.child).length !== 0) {\r\n\r\n            if ((threadInfo.child).length > 0) {\r\n                const data = threadInfo.child;\r\n                const lastChild = data.slice(-1)[0]\r\n                return stripHTML(lastChild.message);\r\n            } else {\r\n                return stripHTML(threadInfo.child[0].message)\r\n            }\r\n            // console.log(threadInfo.child.last())\r\n            // return threadInfo.child.last();\r\n        } else {\r\n            return stripHTML(threadInfo.message);\r\n        }\r\n    }\r\n\r\n\r\n    const isHTML = (str) => !(str || '')\r\n        // replace html tag with content\r\n        .replace(/<([^>]+?)([^>]*?)>(.*?)<\\/\\1>/ig, '')\r\n        // remove remaining self closing tags\r\n        .replace(/(<([^>]+)>)/ig, '')\r\n        // remove extra space at start and end\r\n        .trim();\r\n\r\n    return (\r\n\r\n        <div id=\"frame\">\r\n            <div id=\"sidepanel\">\r\n                <div id=\"profile\">\r\n                    <div className=\"wrap\">\r\n                        {/*<img id=\"profile-img\" src=\"http://emilcarlsson.se/assets/mikeross.png\" className=\"online\"*/}\r\n                        {/*     alt=\"\"/>*/}\r\n                        <Avatar>{profile.name ? getInitials(profile.name) : ''}</Avatar>\r\n                        {profile ? <p>{profile.name}</p> : ''}\r\n                    </div>\r\n                </div>\r\n                <div id=\"search\">\r\n                    <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\r\n                    <input disabled type=\"text\" placeholder=\"Search contacts...\"/>\r\n                </div>\r\n                <div id=\"contacts\">\r\n\r\n                    <ul>\r\n                        {messageLogThreads.map((anObjectMapped, index) =>\r\n\r\n                            <li id={`containerElementThread${anObjectMapped.id}`}\r\n                                className={clsx('contact', chosenThread ? chosenThread.id === anObjectMapped.id ? 'active-thread' : '' : '')}\r\n                                onClick={() => onClickThread(anObjectMapped.id)} key={anObjectMapped.id}>\r\n                                <div className=\"wrap\">\r\n                                    {/*<Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />*/}\r\n                                    {/*<img src=\"http://emilcarlsson.se/assets/louislitt.png\" alt=\"\"/>*/}\r\n\r\n                                    <Avatar>{localStorage.getItem('ThreadBelongsTo') ? getInitials(localStorage.getItem('ThreadBelongsTo')) : ''}</Avatar>\r\n                                    <div className=\"meta\">\r\n                                        <p className=\"name\">{anObjectMapped.subject}</p>\r\n                                        <p className=\"preview\">{lastMessage(anObjectMapped)}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n\r\n                <div className=\"messages\" id=\"containerElement\">\r\n                    <ul>\r\n                        {chosenThread ?\r\n                            <li id={`containerElementMessage${chosenThread.id}`} className={messageOrientation(chosenThread)}>\r\n                                {/*<Avatar alt={anObjectMapped.user} />*/}\r\n                                <Avatar>{namePicker(chosenThread)}</Avatar>\r\n                                <div className=\"message-body-chat\">\r\n                                    <span><strong>    Subject: </strong> {chosenThread.subject}</span>\r\n                                    {isHTML(chosenThread.message) === false ?\r\n                                        <>\r\n                                            {convertHTML(chosenThread.message)}\r\n                                            <List>\r\n                                                {chosenThread.attachments?.map((anObjectMapped, index) =>\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <PictureAsPdfIcon/>\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n\r\n                                                            primary={anObjectMapped.name}\r\n                                                            secondary={anObjectMapped.size}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                <a target=\"_blank\" href={`/${anObjectMapped.path}`}><CloudDownloadIcon/></a>\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n                                                    </ListItem>\r\n                                                )}\r\n\r\n\r\n                                            </List>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <p>{chosenThread.message}</p>\r\n\r\n                                    }\r\n\r\n\r\n                                    <div className=\"message-info\">\r\n                                        <div className=\"message-time\">\r\n                                            <span>{chosenThread.sendTime}</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"message-status\">\r\n                                            {role === 'Administrator' ?\r\n                                                <span>{chosenThread.status}</span> : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </li> : ''}\r\n\r\n                        {\r\n                            chosenThread.child?.map((anObjectMapped, index) =>\r\n                                <li id={`containerElementMessage${anObjectMapped.id}`}  key={index} className={messageOrientation(anObjectMapped)}>\r\n                                    <Avatar>{namePicker(anObjectMapped)}</Avatar>\r\n                                    <div className=\"message-body-chat\">\r\n                                        <span><strong>Subject: </strong> {anObjectMapped.subject}</span>\r\n                                        <>\r\n                                            {isHTML(anObjectMapped.message) === true ?\r\n                                                convertHTML(anObjectMapped.message) :\r\n                                                <p>{convertHTML(anObjectMapped.message)}</p>\r\n\r\n                                            }\r\n                                            <List>\r\n                                                {anObjectMapped.attachments?.map((anObjectMapped, index) =>\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <PictureAsPdfIcon/>\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n\r\n                                                            primary={anObjectMapped.name}\r\n                                                            secondary={anObjectMapped.size}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                <a target=\"_blank\" href={`/${anObjectMapped.path}`}><CloudDownloadIcon/></a>\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n                                                    </ListItem>\r\n                                                )}\r\n\r\n\r\n                                            </List>\r\n                                        </>\r\n                                        <div className=\"message-info\">\r\n                                            <div className=\"message-time\">\r\n                                                <span>{anObjectMapped.sendTime}</span>\r\n                                            </div>\r\n\r\n                                            <div className=\"message-status\">\r\n                                                {role === 'Administrator' ?\r\n                                                    <span>{chosenThread.status}</span> : ''}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )}\r\n\r\n                    </ul>\r\n                </div>\r\n                <div className=\"message-input\">\r\n                    <div className=\"wrap\">\r\n                        <input disabled={true} onKeyPress={handleKeypress} value={message} type=\"text\"\r\n                               placeholder=\"Type a message\"/>\r\n                        <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\r\n                        <button disabled={true} className=\"submit\"><i\r\n                            className=\"fa fa-paper-plane\"\r\n                            aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewChatPanelForLogs;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Layout from \"../layout/Layout\";\r\nimport MaterialTable from \"material-table\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport clsx from \"clsx\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport {EntityList} from \"../api/enitity.crud\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {FetchMessageLogs, FetchThreads} from \"../api/message\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Modal from \"react-modal\";\r\nimport NewChatPanelForLogs from \"./NewChatPanelForLogs\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nModal.setAppElement(document.getElementById('messageModal'));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 3,\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n\r\n    label: {\r\n        fontSize: 14\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        width: '100%',\r\n        marginBottom: 20\r\n    },\r\n\r\n    searchButton: {\r\n        marginTop: 26\r\n    },\r\n\r\n    largeIcon: {\r\n        width: 40,\r\n        height: 40,\r\n        color: '#48465b'\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nconst MessageLog = (props) => {\r\n\r\n\r\n    const {loading, attributes, addError, errorList, role, addTitle, profile, setMessageForLogs} = useContext(UserContext);\r\n    const classes = useStyles();\r\n\r\n    const [entityId, setEntityId] = React.useState({value: '', error: ' '});\r\n    const [apiLoading, setApiLoading] = React.useState(false);\r\n    const [date, setDate] = React.useState({value: '', error: ' '});\r\n    const [date2, setDate2] = React.useState({value: '', error: ' '});\r\n    const [entityList, setEntityList] = React.useState([]);\r\n    const [messagesLogs, setMessagesLogs] = React.useState([]);\r\n    const [threads, setThreads] = React.useState([]);\r\n\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const [state, setState] = React.useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Message Logs');\r\n            entitylisitingLoader();\r\n        }\r\n    }, [loading])\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const entitylisitingLoader = async () => {\r\n        setApiLoading(true);\r\n        var EntityListLocal = await JSON.parse(localStorage.getItem(\"EntityList\") !== 'undefined' ? localStorage.getItem(\"EntityList\") : '');\r\n        if (EntityListLocal !== 'undefined' && EntityListLocal) {\r\n            setEntityList(EntityListLocal);\r\n            setApiLoading(false);\r\n        } else {\r\n            const response = await EntityList();\r\n\r\n            if (response.error) {\r\n                addError(response.error.message);\r\n            }\r\n\r\n            if (response.type === 'error') {\r\n                window.location.reload();\r\n            }\r\n\r\n            if (response.status === 401) {\r\n                window.location.reload();\r\n            }\r\n\r\n\r\n            localStorage.setItem(\"EntityList\", JSON.stringify(response.data));\r\n            await setEntityList(response.data);\r\n            setApiLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('eid', entityId.value);\r\n        formData.append('startDate', date.value);\r\n        formData.append('endDate', date2.value);\r\n        const response = await FetchMessageLogs(formData);\r\n        if (response.status === true) {\r\n            setMessagesLogs(response.data);\r\n            setApiLoading(false);\r\n        }\r\n\r\n        if (response.status === true) {\r\n            if(response.data.length !== 0){\r\n                FetchThreads(entityId.value).then(response => {\r\n                    setMessageForLogs(response.data)\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <Grid container spacing={0}>\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <form onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-4'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={entityId.error !== ' '}>\r\n                                    <Autocomplete\r\n                                        onChange={(event, newValue) => {\r\n                                            if (newValue) {\r\n                                                setEntityId({\r\n                                                    ...entityId,\r\n                                                    value: newValue.id\r\n                                                })\r\n                                            } else {\r\n                                                setEntityId({\r\n                                                    ...entityId,\r\n                                                    value: ''\r\n                                                })\r\n                                            }\r\n                                        }}\r\n                                        disabled={apiLoading}\r\n                                        id=\"combo-box-demo\"\r\n                                        options={entityList ? entityList : ''}\r\n                                        getOptionLabel={(option) => option.account_name}\r\n                                        renderInput={(params) => <TextField error={entityId.error !== ' '} {...params}\r\n                                                                            label=\"Entity Name\" variant=\"outlined\"/>}\r\n                                    />\r\n                                    <FormHelperText>{entityId.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <TextField\r\n                                    required\r\n                                    label=\"Start Date\"\r\n                                    format={'Y-M-d'}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n                                    onChange={e => setDate({\r\n                                        ...date,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <TextField\r\n                                    required\r\n                                    label=\"End Date\"\r\n                                    format={'Y-M-d'}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n                                    onChange={e => setDate2({\r\n                                        ...date2,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-2'}>\r\n                                <div\r\n                                    className={clsx(classes.submitButton, 'custom-button-wrapper', classes.searchButton)}>\r\n                                    <input\r\n                                        className={clsx('btn btn-primary', classes.restButton)}\r\n                                        type=\"submit\" value=\"Search\"/>\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <div style={{maxWidth: \"100%\"}}>\r\n                <MaterialTable\r\n                    isLoading={apiLoading}\r\n                    columns={[\r\n                        {title: \"Entity\", field: \"name\"},\r\n                        {title: \"Subject\", field: \"subject\"},\r\n                        {title: \"Date\", field: \"sendTime\"},\r\n\r\n                    ]}\r\n                    data={messagesLogs}\r\n                    actions={[\r\n                        rowData => ({\r\n                            icon: () => <VisibilityIcon/>,\r\n                            tooltip: 'View',\r\n                            onClick: (event, rowData) => {\r\n                                if (rowData.id) {\r\n                                    if(rowData.groupId !== \"0\") {\r\n                                        localStorage.setItem('activeLogThread', rowData.groupId);\r\n                                    } else {\r\n                                        localStorage.setItem('activeLogThread', rowData.id);\r\n                                    }\r\n                                    localStorage.setItem('ThreadBelongsTo', rowData.name);\r\n                                    localStorage.setItem('activeLogMessage', rowData.id);\r\n                                    openModal();\r\n                                }\r\n                            }\r\n                        })\r\n                    ]}\r\n                    title=\"Messages\"\r\n                />\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <Modal\r\n                    // parentSelector={() => document.querySelector('#messageModal')}\r\n                    isOpen={modalIsOpen}\r\n                    onAfterOpen={afterOpenModal}\r\n                    onRequestClose={closeModal}\r\n                    ariaHideApp={false}\r\n                    contentLabel=\"Chat Application\"\r\n                    style={{\r\n                        overlay: {\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                        },\r\n                    }}\r\n                >\r\n                    <div className=\"closeButton\">\r\n                        <CancelIcon onClick={closeModal} className={classes.largeIcon}/>\r\n                    </div>\r\n                    <div className=\"chat-wrapper\">\r\n                        <NewChatPanelForLogs/>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageLog;\r\n","import React, {Component} from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {Security, SecureRoute, LoginCallback} from '@okta/okta-react';\r\nimport Home from '../okta/Home';\r\nimport Login from '../okta/Login';\r\nimport AddEntity from \"../entity/AddEntity\";\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport UserContextProvider from '../context/UserContext';\r\nimport EntityDetailedPage from '../entity/EntityDetailedPage';\r\nimport SelfDetailedPage from '../entity/SelfDetailedPage';\r\nimport AddContactForm from \"../contact/AddContactForm\";\r\nimport Attachments from \"../attachment/Attachments\";\r\nimport Contacts from \"../contact/Contacts\";\r\nimport AddAttachmentForm from \"../attachment/AddAttachmentForm\";\r\nimport Privacy from \"../privacy/Privacy\";\r\nimport ExampleTable from \"../entity/ExampleTable\";\r\nimport AdminAddAttachmentForm from \"../attachment/AdminAttachmentForm\";\r\nimport MessageLog from '../message/MessageLog';\r\nexport default withRouter(class AppWithRouterAccess extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onAuthRequired = this.onAuthRequired.bind(this);\r\n    }\r\n\r\n    onAuthRequired() {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Security\r\n                issuer={process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default'}\r\n                clientId={process.env.REACT_APP_OKTA_CLIENT_ID}\r\n                redirectUri={window.location.origin + '/implicit/callback/'}\r\n                onAuthRequired={this.onAuthRequired}\r\n                pkce={true}>\r\n                <UserContextProvider>\r\n                    <SecureRoute exact={true} path='/' component={Dashboard}/>\r\n                    <SecureRoute exact={true} path='/home' component={Home}/>\r\n                    <SecureRoute exact={true} path='/entity' component={SelfDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/:id' component={EntityDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/new/add' component={AddEntity}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add' component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add/:id'\r\n                                 component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/attachments' component={Attachments}/>\r\n                    <SecureRoute exact={true} path='/contacts' component={Contacts}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add\" component={AddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add/:id\" component={AddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/table\" component={ExampleTable}/>\r\n                    <SecureRoute exact={true} path=\"/admin/attachments\" component={AdminAddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/message/logs\" component={MessageLog}/>\r\n                </UserContextProvider>\r\n                <Route exact={true} path='/login'\r\n                       render={() => <Login baseUrl={process.env.REACT_APP_OKTA_BASE_URL}/>}/>\r\n                <Route exact={true} path='/implicit/callback' component={LoginCallback}/>\r\n                <Route exact={true} path='/privacy-policy' component={Privacy}/>\r\n            </Security>\r\n        );\r\n    }\r\n});\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport AppWithRouterAccess from './components/routes/AppWithRouterAccess';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"messageModal\">\r\n                <Router>\r\n                    <AppWithRouterAccess/>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}