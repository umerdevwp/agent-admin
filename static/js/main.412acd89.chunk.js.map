{"version":3,"sources":["components/routes/listItems.js","components/routes/ChildListItems.js","components/routes/ParentListItems.js","components/layout/Footer.js","components/api/OKTA.js","components/api/enitity.crud.js","components/context/UserContext.js","components/layout/Layout.js","components/okta/Home.js","components/okta/OktaSignInWidget.js","components/okta/Login.js","components/entity/TestAutocomplete.js","components/entity/AddEntity.js","components/api/attachment.js","components/entity/ComplianceTaskList.js","components/entity/ContactList.js","components/attachment/AttachmentTable.js","components/entity/ChildDetailedPage.js","components/dashboard/Dashboard.js","components/entity/EntityDetailedPage.js","components/entity/SelfDetailedPage.js","components/api/contact.crud.js","components/contact/AddContactForm.js","components/attachment/Attachments.js","components/contact/Contacts.js","components/attachment/AddAttachmentForm.js","components/privacy/Privacy.js","components/entity/ExampleTable.js","components/routes/AppWithRouterAccess.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","link","color","textDecoration","MainListItems","classes","className","to","ListItem","button","ListItemIcon","ListItemText","primary","ChildListItems","ParentListItems","Footer","Typography","variant","align","Link","href","Date","getFullYear","fetchUserProfile","sub","a","fetch","process","headers","Accept","Authorization","response","Promise","resolve","json","ENTITY","entityList","token","JSON","parse","localStorage","getItem","checkRole","eid","bit","tokenOKTA","okta","accessToken","entityDetail","entity","selfEntityDetail","ContactTypeList","email","EntitytypesList","StateRegionList","createEntity","data","method","body","lorexFileUpload","UserContext","createContext","drawerState","role","title","profile","attributes","loading","errorList","currentEntity","Consumer","withOktaAuth","props","useOktaAuth","authState","authService","useState","setTitle","setDrawerState","setToken","setProfile","setAttributes","appLoader","setAppLoader","setErrorList","setCurrentEntity","setRole","React","useEffect","undefined","initialUtliz","length","map","value","index","setTimeout","removeError","removeItem","getToken","getUserProfile","result_profile","getUserAttributes","result_attributes","getUserRole","setInterval","tokenResult","getUser","UserData","AllAttributes","organization_parent","toLowerCase","organization","get_role","status","setItem","addError","message","array","splice","Provider","addTitle","changeDrawer","updateCurrentEntity","children","theme","root","display","toolbar","paddingRight","backgroundColor","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","chevronLeftIcon","flexGrow","textTransform","fontSize","drawerPaper","position","whiteSpace","breakpoints","up","flexShrink","drawerPaperClose","overflowX","spacing","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","listColor","useContext","matches","useMediaQuery","maxWidth","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","openMenu","Boolean","maxSnack","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","event","currentTarget","name","anchorOrigin","vertical","horizontal","id","keepMounted","open","onClose","TransitionComponent","Fade","getContentAnchorEl","MenuItem","logout","Drawer","ModalProps","Divider","List","Container","Box","pt","size","login","bind","this","isPending","isAuthenticated","Component","OktaSignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","features","showPasswordToggleOnSignInPage","clientId","redirectUri","authScheme","logo","authParams","issuer","responseType","scopes","authorizeUrl","renderEl","onSuccess","onError","remove","Copyright","paperContainer","marginTop","avatar","margin","palette","secondary","main","form","submit","Login","res","redirect","sessionToken","session","err","console","log","pathname","style","mt","withStyles","smartyStreetsSharedCredentials","SmartyStreetsSDK","SharedCredentials","autoCompleteClient","ClientBuilder","buildUsAutocompleteClient","IntegrationDownshift","left","right","chip","inputRoot","flexWrap","inputInput","divider","suggestions","setSuggestions","setValue","getFinal","setGetFinal","sendDatatoParent","resetState","reset","addressObject","smartyHandler","Lookup","target","lookup","send","then","add","result","selectedItem","onStateChange","changes","hasOwnProperty","newObject","find","text","inputValue","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","isOpen","clearSelection","getRootProps","onInputValueChange","placeholder","onBlur","onFocus","inputProps","disabled","error","required","helperText","InputProps","ref","other","TextField","onChange","inputRef","input","renderInput","fullWidth","label","InputLabelProps","shrink","Paper","square","showEmpty","deburr","trim","inputLength","count","filter","suggestion","keep","slice","getSuggestions","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","selected","key","fontWeight","renderSuggestion","item","client","buildUsStreetApiClient","useStylesFacebook","top","bottom","animationDuration","backButton","instructions","marginBottom","adjustment","companyinfo","listStyle","minHeight","listItem","textField","textFieldOther","textFieldCity","textFieldtwofield","selectField","dense","checkbox","fileUpapiLoading","submitButton","float","restButton","loader","success","green","fileError","dark","info","warning","amber","icon","iconVariant","opacity","paddingLeft","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","MySnackbarContentWrapper","Icon","SnackbarContent","elevation","aria-describedby","action","setOpen","userAgree","setUserAgree","setAddressObject","addressValue","setAddressValue","addressReset","setAddressReset","setIsValidAddress","apiLoading","setApiLoading","setError","setContactType","FillingStructureData","setFillingStructureData","StateRegion","setStateRegion","successMessage","setSuccessMessage","fiscal","inputName","setInputName","inputComplianceOnly","setInputComplianceOnly","inputFillingState","setInputFillingState","inputFillingStructure","setInputFillingStructure","inputFormationDate","setInputFormationDate","inputFiscalDate","setInputFiscalDate","inputNotificationEmail","setInputNotificationEmail","inputNotificationPhone","setInputNotificationPhone","inputNotificationAddress","setInputNotificationAddress","inputEIN","setInputEIN","inputNotificationCity","setInputNotificationCity","inputNotificationState","setInputNotificationState","inputNotificationZip","setInputNotificationZip","inputFiling","setInputFiling","inputBusinessPurpose","setInputBusinessPurpose","inputForeign","setInputForeign","inputFileName","setInputFileName","inputFileSize","setInputFileSize","handleClose","iAgree","handleOnSubmit","FacebookProgress","CircularProgress","thickness","disableShrink","city","state","fetchDataforDropdownsContactTypeList","fetchDataforDropdownsFillingStructureData","fetchDataforDropdownsStateRegion","ContactTypeListLocal","stringify","EntitytypesListLocal","StateRegionListLocal","fileChange","e","files","formData","FormData","append","filename","record_id","file_size","file","resetForm","addressCheck","lookup1","street","streetLine","zipCode","valid","utils","isValid","lookups","createEntitysubmit","userResponse","preventDefault","formsubmit","parseInt","toString","zip","field_error","Object","keys","forEach","window","scrollTo","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Grid","onSubmit","noValidate","autoComplete","FormGroup","row","FormControlLabel","checked","control","Checkbox","labelPlacement","FormControl","InputLabel","htmlFor","Select","anObjectMapped","code","FormHelperText","format","type","CustomFileInput","File","invalid","AttachmentsList","zoho_id","attachFiles","taskUpdate","table","minWidth","ComplianceTaskList","setLoading","setStatus","taskID","setTaskID","taskUpdateController","update","xs","isLoading","actions","rowData","tooltip","options","selection","actionsColumnIndex","columns","withRouter","history","useHistory","isFreeAction","push","url","sorting","fileId","errorMessage","breadcrumbsDiv","breadcrumbsInner","baseColor","entitydetail","setEntitydetail","contactList","setContactList","attachmentList","setAttachmentList","taskList","setTaskList","compliance","setComplainace","componentLoading","setComponentLoading","fetchDetailedProfile","detailedView","reject","contacts","attachments","tasks","errors","detail","location","reload","updateComplianceTable","contactData","field","taskData","attachmentData","editable","sm","Card","CardHeader","Avatar","gutterBottom","CardContent","formationDate","expirationDate","Skeleton","subheader","registerAgent","fileAs","address","address2","zipcode","shippingStreet","shippingCity","shippingState","shippingCode","textAlign","tableIcons","Add","forwardRef","entitydata","setEntityData","asyncDataFetch","fetchData","results","settingData","icons","parentChildData","rows","parentId","defaultExpanded","entity_id","match","params","Breadcrumbs","goBack","createContact","fileUpcomponentLoading","contactType","inputContactFirstName","setInputContactFirstName","inputContactLastName","setInputLastName","inputContactEmail","inputContactPhone","inputContactStreet","inputContactType","setInputNotificationContactType","inputContactCity","inputContactState","inputContactZipcode","isValidAddress","setErrorMessage","addressValueChangeHandler","contactsCreate","updateStates","native","fetchAttachmentData","documents","dummyData","listcontacts","setListcontacts","dummyDataa","fileUploading","formStyle","uploadCustom","privacyBody","privacyLogo","Privacy","alt","src","createMuiTheme","direction","bigData","i","d","surname","Math","round","isMarried","birthDate","birthCity","sex","insertDateTime","time","ExampleTable","tableRef","createRef","colRenderCount","selecteds","filterPlaceholder","editPlaceholder","initialEditValue","resizable","disableClick","removable","34","0","remoteColumns","render","borderRadius","defaultFilter","selectedRows","onFilterChange","appliedFilter","tableLayout","columnResizable","headerSelectionProps","selectionProps","tableData","localization","emptyDataSourceMessage","filterRow","filterTooltip","filterPlaceHolder","onSearchChange","onColumnDragged","oldPos","newPos","current","onAllSelected","onAuthRequired","origin","pkce","exact","path","Dashboard","Home","SelfDetailedPage","EntityDetailedPage","AddEntity","AddContactForm","Attachments","Contacts","AddAttachmentForm","LoginCallback","App","hostname","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.412acd89.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function MainListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ChildListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            {/*<Link className={classes.link} to='/entity/new/add'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <PeopleIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Add entity\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            {/*<Link className={classes.link} to='/contacts'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <ContactPhoneOutlinedIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Contacts\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n\n        </div>)\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ParentListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}\r\n            <Link color=\"inherit\" href=\"/privacy-policy\">\r\n                Privacy Policy\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n","export const fetchUserProfile = async (sub) => {\r\n\r\n    const response = await fetch(process.env.REACT_APP_OKTA_BASE_URL + `api/v1/users/${sub}`, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            Accept: 'application/json',\r\n            Authorization: `SSWS ${process.env.REACT_APP_OKTA_API_TOKEN}`,\r\n        }\r\n    });\r\n    return Promise.resolve(response.json());\r\n\r\n\r\n}\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\nconst LOREX_TOKEN = process.env.REACT_APP_LOREX_TOKEN;\r\nconst LOREX_API_HOST = process.env.REACT_APP_LOREX_API_HOST;\r\n\r\n\r\n\r\n// const LOREX_TOKEN = '3cJe5YXiSBGUAqYd0uFC2cKYvgfBIUswmXTudN3HQfvzIGvddfVYjPmakGOkGVM9g5YRKJR2FF9iYuZQ0GsbGw';\r\n// const LOREX_API_HOST = 'https://lorax-api-sandbox.filemystuff.com';\r\nexport const LOGIN_URL = \"api/auth/login\";\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ENTITY = HOST;\r\n\r\n\r\n\r\nexport const ME_URL = \"api/me\";\r\n\r\nexport const entityList = async (token) => {\r\n\r\n\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Entity/getChildAccount`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const checkRole = async (eid,bit, tokenOKTA) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    var response = '';\r\n    if(okta) {\r\n        if(bit === 1) {\r\n           response = await fetch(`${ENTITY}/entity/role?eid=${eid}&bit=${bit}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n        if(bit === 0) {\r\n         response = await fetch(`${ENTITY}/entity/role?eid=${eid}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkAdmin = async (zoho_id, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/admin_api/checkadmin/?zoho_id=${zoho_id}&email=${email}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const entityDetail = async (entity) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview/?eid=${entity}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const selfEntityDetail = async () => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const ContactTypeList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/ContactTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const EntitytypesList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/EntityTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization':okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const StateRegionList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/States/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createEntity = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const lorexFileUpload = async (data) => {\r\n\r\n\r\n    // console.log('LOREX_TOKEN',LOREX_TOKEN);\r\n    // console.log('LOREX_URL',`${LOREX_API_HOST}/api/v1/upload`);\r\n    // console.log('LOREX_URL',HOST);\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${LOREX_API_HOST}/api/v1/upload`, {\r\n            method: 'post',\r\n            headers: {\r\n                'authorization': LOREX_TOKEN,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const testcall = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch('https://apidev.youragentservices.com/api/entity/add', {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {createContext, useState} from 'react'\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport {fetchUserProfile} from \"../api/OKTA\";\r\nimport {checkRole} from '../api/enitity.crud';\r\n\r\n\r\nexport const UserContext = createContext(\r\n    {\r\n        drawerState: true,\r\n        role: '',\r\n        title: '',\r\n        token: '',\r\n        profile: '',\r\n        attributes: [],\r\n        loading: false,\r\n        errorList:[],\r\n        currentEntity:[]\r\n    }\r\n);\r\n\r\nexport const UserConsumer = UserContext.Consumer;\r\n\r\nfunction UserContextProvider(props) {\r\n    const {authState, authService} = useOktaAuth();\r\n    const [title, setTitle] = useState('');\r\n    const [drawerState, setDrawerState] = useState(true);\r\n    const [token, setToken] = useState('');\r\n    const [profile, setProfile] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    const [appLoader, setAppLoader] = useState({loading: false});\r\n    const [errorList, setErrorList] = useState([]);\r\n    const [currentEntity, setCurrentEntity] = useState([]);\r\n    const [role, setRole] = useState({});\r\n    React.useEffect(() => {\r\n        const okta = localStorage.getItem('okta-token-storage');\r\n        if (okta !== '{}' && okta !== null && okta !== undefined) {\r\n\r\n            initialUtliz();\r\n        }\r\n    }, []);\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if (errorList !== undefined || errorList.length !== 0) {\r\n            errorList.map((value, index) => {\r\n               setTimeout(()=>{\r\n                   removeError(index);\r\n               }, 6000)\r\n            })\r\n        }\r\n\r\n    },[errorList])\r\n\r\n\r\n    const initialUtliz = async () => {\r\n        localStorage.removeItem('role');\r\n        const tokenOKTA = await getToken();\r\n        // if(tokenOKTA === null){\r\n        //  authService.logout('/');\r\n        // }\r\n        const result_profile = await getUserProfile();\r\n        const result_attributes = await getUserAttributes(result_profile);\r\n        if (result_attributes) {\r\n            await getUserRole(result_attributes.profile, tokenOKTA);\r\n        }\r\n\r\n        setInterval(()=>{\r\n            setAppLoader({...appLoader, loading: true});\r\n        },4000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const getToken = async () => {\r\n        const tokenResult = await authState.accessToken;\r\n        setToken(tokenResult);\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserProfile = async () => {\r\n\r\n        const tokenResult = await authService.getUser();\r\n        if (tokenResult) {\r\n            await setProfile({...profile, profile: tokenResult});\r\n        }\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserAttributes = async (UserData) => {\r\n        if (UserData) {\r\n            const AllAttributes = await fetchUserProfile(UserData.sub);\r\n            if (AllAttributes) {\r\n                await setAttributes({...attributes, attributes: AllAttributes.profile})\r\n            }\r\n            return Promise.resolve(AllAttributes);\r\n        }\r\n    }\r\n\r\n    const getUserRole = async (profile, tokenOKTA) => {\r\n        var organization_parent = '';\r\n        if (profile.organization_parent) {\r\n            const bit = profile.organization_parent.toLowerCase();\r\n            if (bit === 'yes') {\r\n                organization_parent = 1;\r\n            }\r\n        }\r\n        try {\r\n            const get_role = await checkRole(profile.organization, organization_parent ? organization_parent : 0, tokenOKTA);\r\n\r\n            if (get_role) {\r\n                if (get_role.status === true) {\r\n                    await localStorage.setItem('role', get_role.data.role);\r\n                    return Promise.resolve(setRole({...role, role: get_role.data.role}));\r\n                }\r\n                if (get_role.status === false) {\r\n                    return Promise.resolve(addError(get_role.message));\r\n                }\r\n            }\r\n\r\n            // if(get_role.type === 'error'){\r\n            //     window.location.reload();\r\n            // }\r\n            //\r\n            // if(get_role.status === 401){\r\n            //     window.location.reload();\r\n            // }\r\n\r\n\r\n            if (get_role.message) {\r\n                addError(get_role.message)\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addError = (data) => {\r\n        setErrorList(errorList => [...errorList, data])\r\n    }\r\n\r\n    const addTitle = (data) => {\r\n        setTitle(data);\r\n    }\r\n\r\n    const updateCurrentEntity = (data) => {\r\n         setCurrentEntity(data)\r\n    }\r\n\r\n\r\n    const removeError = (index) => {\r\n        var array = [...errorList]; // make a separate copy of the array\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            setErrorList(array)\r\n        }\r\n\r\n    }\r\n\r\n    const changeDrawer = (data) => {\r\n        setDrawerState(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                ...token,\r\n                ...profile,\r\n                ...attributes,\r\n                ...appLoader,\r\n                ...role,\r\n                title,\r\n                errorList,\r\n                addError,\r\n                addTitle,\r\n                drawerState,\r\n                changeDrawer,\r\n                removeError,\r\n                updateCurrentEntity,\r\n                currentEntity\r\n            }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(UserContextProvider);\r\n","import React, {useContext} from 'react';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MainListItems from '../routes/listItems';\r\nimport ChildListItems from '../routes/ChildListItems';\r\nimport ParentListItems from '../routes/ParentListItems';\r\nimport Footer from './Footer';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport {SnackbarProvider} from 'notistack';\r\n// import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {useOktaAuth, withOktaAuth} from \"@okta/okta-react\";\r\n\r\nimport {SemipolarLoading} from 'react-loadingg';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        backgroundColor: '#1e1e2d'\r\n    },\r\n    toolbarIcon: {\r\n        // color: '#434d6b',\r\n        // backgroundColor: '#434d6b',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: '#ffffff',\r\n        // backgroundColor: '#ffffff',\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n\r\n    chevronLeftIcon: {\r\n        color: '#ffffff'\r\n    },\r\n\r\n    title: {\r\n        marginLeft: 10,\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n\r\n    button: {\r\n        textTransform: \"none\",\r\n        fontSize: 14\r\n    },\r\n    drawerPaper: {\r\n\r\n        backgroundColor: '#1e1e2d',\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        backgroundColor: '#f0f0f6'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n    listColor: {\r\n        color: \"#ffffff\"\r\n    }\r\n\r\n\r\n}));\r\n\r\nexport default withOktaAuth(function Layout(props) {\r\n    const {authState} = useOktaAuth();\r\n    const {role, title, drawerState, changeDrawer, profile} = useContext(UserContext);\r\n\r\n    // const theme = useTheme();\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery({maxWidth: 767});\r\n    // const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n\r\n    React.useEffect(() => {\r\n        // if (!matches) {\r\n        //     changeDrawer(true);\r\n        // }\r\n        if (matches) {\r\n            changeDrawer(false);\r\n        }\r\n    }, [matches])\r\n    const handleDrawerOpen = () => {\r\n        changeDrawer(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        changeDrawer(false);\r\n    };\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {role ?\r\n                <SnackbarProvider maxSnack={3}>\r\n                    <div className={classes.root}>\r\n                        <CssBaseline/>\r\n                        <AppBar position=\"absolute\"\r\n                                className={clsx(classes.appBar, drawerState && classes.appBarShift)}>\r\n\r\n                            <Toolbar className={classes.toolbar}>\r\n                                <IconButton\r\n                                    edge=\"start\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={handleDrawerOpen}\r\n                                    className={clsx(classes.menuButton, drawerState && classes.menuButtonHidden)}\r\n                                >\r\n\r\n                                    <MenuIcon/>\r\n                                </IconButton>\r\n                                <Typography component=\"h1\" variant=\"h6\" noWrap className={classes.title}>\r\n                                    {title}\r\n                                </Typography>\r\n                                {/*<IconButton color=\"inherit\">*/}\r\n                                {/*    <Badge badgeContent={4} color=\"secondary\">*/}\r\n                                {/*        <NotificationsIcon/>*/}\r\n                                {/*    </Badge>*/}\r\n                                {/*</IconButton>*/}\r\n\r\n                                <IconButton color=\"inherit\" onClick={handleClick}>\r\n                                    <Typography variant=\"h5\" className={clsx(classes.title, classes.button)}>\r\n                                        Hi, {profile.name ? profile.name : ''}\r\n                                    </Typography>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    anchorOrigin={{\r\n                                        vertical: \"bottom\",\r\n                                        horizontal: \"right\"\r\n                                    }}\r\n                                    id=\"menu-list-grow\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={openMenu}\r\n                                    onClose={handleClose}\r\n                                    TransitionComponent={Fade}\r\n                                    getContentAnchorEl={null}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        props.authService.logout('/');\r\n                                    }}>Logout</MenuItem>\r\n                                </Menu>\r\n\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <Drawer\r\n                            variant=\"permanent\"\r\n                            classes={{\r\n                                paper: clsx(classes.drawerPaper, !drawerState && classes.drawerPaperClose),\r\n                            }}\r\n                            open={drawerState}\r\n                            onClose={handleDrawerToggle}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            <div className={classes.toolbarIcon}>\r\n                                <Typography component=\"h3\" variant=\"h6\" color=\"inherit\" noWrap\r\n                                            className={classes.title}>\r\n                                    AgentAdmin\r\n                                </Typography>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    <ChevronLeftIcon className={classes.chevronLeftIcon}/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider/>\r\n                            {role === 'Administrator' ?\r\n                                <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                            {role === 'Child Entity' ?\r\n                                <List className={classes.listColor}><ChildListItems/></List> : ''}\r\n\r\n                            {role === 'Parent Organization' ?\r\n                                <List className={classes.listColor}><ParentListItems/></List> : ''}\r\n\r\n                        </Drawer>\r\n                        <main className={classes.content}>\r\n                            <div className={classes.appBarSpacer}/>\r\n                            <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n                                {props.children}\r\n\r\n                                <Box pt={4}>\r\n                                    <Footer/>\r\n                                </Box>\r\n                            </Container>\r\n                        </main>\r\n                    </div>\r\n                </SnackbarProvider>\r\n                : <SemipolarLoading className={'Test'} size={'large'} color={'#1e1e2d'}/>}\r\n\r\n        </>\r\n\r\n    );\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport Layout from \"../layout/Layout\";\r\n\r\nexport default withOktaAuth(class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    async login() {\r\n        this.props.authService.login();\r\n    }\r\n\r\n    async logout() {\r\n        this.props.authService.logout('/');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.authState.isPending) return null;\r\n\r\n        const button = this.props.authState.isAuthenticated ?\r\n            <button onClick={this.logout}>Logout</button> :\r\n            <button onClick={this.login}>Login</button>;\r\n\r\n        return (\r\n            <Layout>\r\n            <div>\r\n                <Link to='/'>Home</Link><br/>\r\n                <Link to='/protected'>Protected</Link><br/>\r\n                <Link to='/dashboard'>Dashboard</Link><br/>\r\n                {button}\r\n            </div>\r\n            </Layout>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nexport default class OktaSignInWidget extends Component {\r\n    componentDidMount() {\r\n        const el = ReactDOM.findDOMNode(this);\r\n        this.widget = new OktaSignIn({\r\n            baseUrl: process.env.REACT_APP_OKTA_BASE_URL,\r\n            features: {\r\n                // idpDiscovery: true,\r\n                showPasswordToggleOnSignInPage: true\r\n            },\r\n            // idps: [\r\n            //     {type: process.env.REACT_APP_OKTA_IDPS_TYPE, id: process.env.REACT_APP_OKTA_IDPS_ID},\r\n            // ],\r\n            clientId: process.env.REACT_APP_OKTA_CLIENT_ID,\r\n            redirectUri: process.env.REACT_APP_OKTA_REDIRECT_URI,\r\n            authScheme: 'OAUTH2',\r\n            logo: '/media/agentadmin/logo/aa_full.png',\r\n            authParams: {\r\n                issuer: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default',\r\n                display: 'page',\r\n                responseType: ['id_token', 'token'],\r\n                scopes: ['openid', 'email', 'profile', 'address', 'phone'],\r\n                authorizeUrl: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default/v1/authorize',\r\n            },\r\n\r\n        });\r\n        this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.widget.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div/>;\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography className={'copyright'} variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}\r\n            <Link color=\"inherit\" href=\"/privacy-policy\">\r\n                Privacy Policy\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paperContainer: {\r\n        backgroundColor: '#000000'\r\n    },\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    onSuccess(res) {\r\n        if (res.status === 'SUCCESS') {\r\n            return this.props.authService.redirect({\r\n                sessionToken: res.session.token\r\n            });\r\n        } else {\r\n            // The user can be in another authentication state that requires further action.\r\n            // For more information about these states, see:\r\n            //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n        }\r\n    }\r\n\r\n    onError(err) {\r\n        console.log('error logging in', err);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        if (this.props.authState.isPending && this.props.authState.isAuthenticated) return null;\r\n        return this.props.authState.isAuthenticated ?\r\n            <Redirect to={{pathname: '/'}}/> :\r\n\r\n            <div className={'paperContainer'}>\r\n                <Particles   style={{\r\n                    width: '100%',\r\n                    position:'absolute'\r\n                }} className={'particles'} />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Box className={'okta-custom'} mt={3}>\r\n                            <OktaSignInWidget\r\n                                baseUrl={this.props.baseUrl}\r\n                                onSuccess={this.onSuccess}\r\n                                onError={this.onError}/>\r\n                        </Box>\r\n                    </div>\r\n                    <Box>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(useStyles)(withOktaAuth(Login));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport deburr from 'lodash.deburr';\r\nimport Downshift from 'downshift';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst autoCompleteClientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nconst autoCompleteClient = autoCompleteClientBuilder.buildUsAutocompleteClient();\r\n\r\n\r\n\r\n\r\nexport default function IntegrationDownshift(props) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        container: {\r\n            flexGrow: 1,\r\n            position: 'relative',\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n            marginTop: theme.spacing(1),\r\n            left: 0,\r\n            right: 0,\r\n            width: props.width ?? props.width,\r\n        },\r\n        chip: {\r\n            margin: theme.spacing(0.5, 0.25),\r\n        },\r\n        inputRoot: {\r\n            flexWrap: 'wrap',\r\n        },\r\n        inputInput: {\r\n            width: 'auto',\r\n            flexGrow: 1,\r\n        },\r\n        divider: {\r\n            height: theme.spacing(2),\r\n        },\r\n    }));\r\n    const [suggestions, setSuggestions] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [getFinal, setGetFinal] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        sendDatatoParent();\r\n    },[getFinal,value])\r\n\r\n    React.useEffect(() => {\r\n        resetState();\r\n    },[props.reset])\r\n\r\n    const resetState = () => {\r\n        if(props.reset === 'reset') {\r\n            setValue('');\r\n            setGetFinal([]);\r\n        }\r\n    }\r\n\r\n    const sendDatatoParent = () => {\r\n        // if(props.reset == 'reset') {\r\n        //     setSuggestions([]);\r\n        //     setValue('');\r\n        //     setGetFinal([]);\r\n        // }\r\n        // const [addressobject, addressvalue] = props;\r\n        if(getFinal !== undefined && getFinal.length !== 0) {\r\n            props.addressObject(getFinal)\r\n        } else {\r\n            props.addressObject(value)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleStateChange = changes => {\r\n        if (changes.hasOwnProperty('selectedItem')) {\r\n            setValue(changes.selectedItem);\r\n            const value = changes.selectedItem;\r\n            const newObject = suggestions.find((value) => value.text === changes.selectedItem);\r\n            setGetFinal(newObject);\r\n        } else if (changes.hasOwnProperty('inputValue')) {\r\n            setGetFinal([]);\r\n            setValue(changes.inputValue);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const smartyHandler = async (event) => {\r\n        const lookup = await new SmartyStreetsSDK.usAutocomplete.Lookup(event.target.value);\r\n        autoCompleteClient.send(lookup)\r\n            .then(response => {\r\n                const add = response.result\r\n                setSuggestions(add);\r\n            })\r\n    }\r\n\r\n\r\n    function renderInput(inputProps) {\r\n        const {disabled, required, error, className, helperText} = props\r\n        const {InputProps, classes, ref, ...other} = inputProps;\r\n        return (\r\n            <TextField\r\n\r\n                className={className}\r\n                disabled={disabled}\r\n                required\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={(event) => smartyHandler(event)}\r\n                InputProps={{\r\n                    inputRef: ref,\r\n                    classes: {\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    },\r\n                    ...InputProps,\r\n                }}\r\n                {...other}\r\n            />\r\n        );\r\n    }\r\n\r\n    function renderSuggestion(suggestionProps) {\r\n\r\n        const {suggestion, index, itemProps, highlightedIndex, selectedItem} = suggestionProps;\r\n        const isHighlighted = highlightedIndex === index;\r\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n        return (\r\n            <MenuItem\r\n\r\n                {...itemProps}\r\n                selected={isHighlighted}\r\n                key={suggestion.text}\r\n                component=\"div\"\r\n                style={{fontWeight: isSelected ? 500 : 400,}}>\r\n                {suggestion.text}\r\n            </MenuItem>\r\n        );\r\n    }\r\n\r\n    function getSuggestions(value, {showEmpty = false} = {}) {\r\n        const inputValue = deburr(value.trim()).toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        let count = 0;\r\n\r\n        return inputLength === 0 && !showEmpty\r\n            ? inputValue\r\n            : suggestions.filter(suggestion => {\r\n                const keep =\r\n                    count < 5 && suggestion.text.slice(0, inputLength).toLowerCase() === inputValue;\r\n                if (keep) {\r\n                    count += 1;\r\n                }\r\n                return keep;\r\n            });\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div   className={classes.root}>\r\n            <Downshift selectedItem={value} onStateChange={handleStateChange} id=\"downshift-simple\">\r\n                {({\r\n                      getInputProps,\r\n                      getItemProps,\r\n                      getLabelProps,\r\n                      getMenuProps,\r\n                      highlightedIndex,\r\n                      inputValue,\r\n                      isOpen,\r\n                      selectedItem,\r\n                      clearSelection,\r\n                      getRootProps,\r\n                      onInputValueChange,\r\n                  }) => {\r\n                    const {onBlur, onFocus, ...inputProps} = getInputProps({\r\n                        placeholder: 'Address',\r\n                    });\r\n                    return (\r\n                        <div className={classes.container}>\r\n                            {renderInput({\r\n                                fullWidth: true,\r\n                                classes,\r\n                                label: 'Address',\r\n                                InputLabelProps: getLabelProps({shrink: true}),\r\n                                InputProps: {onBlur, onFocus},\r\n                                inputProps,\r\n                            })}\r\n\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square>\r\n                                        {inputValue !== '' ? getSuggestions(inputValue)?.map((suggestion, index) =>\r\n                                            renderSuggestion({\r\n                                                suggestion,\r\n                                                index,\r\n                                                itemProps: getItemProps({item: suggestion.text, index}),\r\n                                                highlightedIndex,\r\n                                                selectedItem,\r\n\r\n                                            }),\r\n                                        ) : null}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Downshift>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Layout from \"../layout/Layout\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {\r\n    ContactTypeList,\r\n    EntitytypesList,\r\n    StateRegionList,\r\n    createEntity,\r\n    lorexFileUpload\r\n} from \"../api/enitity.crud\";\r\n\r\nimport utils from \"smartystreets-javascript-sdk-utils\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport {UserContext} from '../context/UserContext';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n\r\n    label: {\r\n        fontSize: 14\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\nfunction AddEntity() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes,addTitle, loading } = useContext(UserContext);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [apiLoading, setApiLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [FillingStructureData, setFillingStructureData] = React.useState([])\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    const [successMessage, setSuccessMessage] = React.useState(false);\r\n    var d = new Date();\r\n    const fiscal = d.getFullYear() + '-12-31'\r\n\r\n    //form state\r\n    const [inputName, setInputName] = React.useState({value: '', error: ' ',});\r\n    const [inputComplianceOnly, setInputComplianceOnly] = React.useState({value: false, error: ' '});\r\n    const [inputFillingState, setInputFillingState] = React.useState({value: '', error: ' '});\r\n    const [inputFillingStructure, setInputFillingStructure] = React.useState({value: '', error: ' '});\r\n    const [inputFormationDate, setInputFormationDate] = React.useState({value: '', error: ' '});\r\n    const [inputFiscalDate, setInputFiscalDate] = React.useState({value: fiscal, error: ' '});\r\n\r\n\r\n    const [inputNotificationEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationAddress, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputEIN, setInputEIN] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationZip, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputBusinessPurpose, setInputBusinessPurpose] = React.useState({value: '', error: ' '});\r\n    const [inputForeign, setInputForeign] = React.useState({value: false, error: ' '});\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setApiLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true)\r\n\r\n    };\r\n\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                console.log('City', addressObject.city);\r\n                console.log('State', addressObject.state);\r\n                setInputNotificationCity({...inputNotificationCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputNotificationState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(loading === true) {\r\n            addTitle('Add New Entity');\r\n            fetchDataforDropdownsContactTypeList()\r\n            fetchDataforDropdownsFillingStructureData();\r\n            fetchDataforDropdownsStateRegion();\r\n        }\r\n    }, [loading]);\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await ContactTypeList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n                setContactType(response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fetchDataforDropdownsFillingStructureData = async () => {\r\n\r\n        var EntitytypesListLocal = await JSON.parse(localStorage.getItem(\"EntitytypesList\"));\r\n        if (EntitytypesListLocal) {\r\n            setFillingStructureData(EntitytypesListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await EntitytypesList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"EntitytypesList\", JSON.stringify(response.data));\r\n                setFillingStructureData(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await StateRegionList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n                setStateRegion(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = (value) => {\r\n        setAddressValue(value);\r\n    }\r\n\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setApiLoading(true);\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n                setInputFileSize({...inputFileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setInputFileName({...inputFileName, value: filename});\r\n                    setApiLoading(false);\r\n                }\r\n            } else {\r\n                setInputFiling({...inputFiling, error: response.message.file[0]});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n\r\n                setInputComplianceOnly({value: false, error: ' '})\r\n                setInputFillingState({value: '', error: ' '});\r\n                setInputFillingStructure({value: '', error: ' '});\r\n                setInputFormationDate({value: '', error: ' '});\r\n                setInputFiscalDate({value: fiscal, error: ' '});\r\n                setInputName({value: '', error: ' '});\r\n                setInputNotificationEmail({value: '', error: ' '});\r\n                setInputNotificationPhone({value: '', error: ' '});\r\n                setInputNotificationAddress({value: '', error: ' '});\r\n                setInputNotificationCity({value: '', error: ' '});\r\n                setInputNotificationState({value: '', error: ' '});\r\n                setInputNotificationZip({value: '', error: ' '});\r\n                setInputEIN({value: '', error: ' ', success: ' '});\r\n                setInputFiling({value: '', error: ' ', success: ' '})\r\n                setInputBusinessPurpose({value: '', error: ' '})\r\n                setInputForeign({value: false, error: ' '});\r\n                setInputFileName({value: '', error: ' ', success: ' '});\r\n                setInputFileSize({value: '', error: ' ', success: ' '});\r\n\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const addressCheck = async (event) => {\r\n\r\n\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputNotificationCity.value;\r\n        lookup1.state = inputNotificationState.value;\r\n        lookup1.zipCode = inputNotificationZip.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                createEntitysubmit(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        var formsubmit = true;\r\n        if (inputEIN.value) {\r\n            var value = parseInt(inputEIN.value)\r\n            if (typeof value === 'number') {\r\n                if (value.toString().length === 9) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (inputNotificationZip.value) {\r\n            var zip = parseInt(inputNotificationZip.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputNotificationCity.value && inputNotificationState.value && inputNotificationZip.value !== '') {\r\n                    formsubmit = false;\r\n                    const response = addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            createEntitysubmit(event, userResponse);\r\n        }\r\n    }\r\n\r\n\r\n    const createEntitysubmit = async (event) => {\r\n\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        setInputFiling({...inputFiling, value: '', success: ' ', error: ' '});\r\n        setInputFileSize({...inputFileSize, value: ''});\r\n        setInputFileName({...inputFileName, value: ''});\r\n        setInputName({...inputName, error: ' '})\r\n        setInputComplianceOnly({...inputComplianceOnly, error: ' '})\r\n        setInputFillingState({...inputFillingState, error: ' '})\r\n        // setInputFirstName({...inputFirstName, error: ' '})\r\n        // setInputLastName({...inputLastName, error: ' '})\r\n        setInputFillingStructure({...inputFillingStructure, error: ' '})\r\n        setInputFormationDate({...inputFormationDate, error: ' '})\r\n        setInputFiscalDate({...inputFiscalDate, error: ' '})\r\n        setInputNotificationEmail({...inputNotificationEmail, error: ' '})\r\n        setInputNotificationPhone({...inputNotificationPhone, error: ' '})\r\n        setInputNotificationAddress({...inputNotificationAddress, error: ' '})\r\n        setInputNotificationCity({...inputNotificationCity, error: ' '})\r\n        setInputNotificationState({...inputNotificationState, error: ' '})\r\n        setInputNotificationZip({...inputNotificationZip, error: ' '})\r\n        setInputBusinessPurpose({...inputBusinessPurpose, error: ' '})\r\n        setInputEIN({...inputEIN, error: ' '})\r\n        setInputForeign({...inputForeign, error: ' '});\r\n        setInputFileSize({...inputFileSize, error: ' '})\r\n        let formData = new FormData();\r\n\r\n        formData.append('inputName', inputName.value)\r\n        formData.append('inputComplianceOnly', inputComplianceOnly.value)\r\n        formData.append('inputForeign', inputForeign.value)\r\n        formData.append('inputFillingState', inputFillingState.value)\r\n        formData.append('inputFillingStructure', inputFillingStructure.value)\r\n        formData.append('inputFormationDate', inputFormationDate.value)\r\n        formData.append('inputFiscalDate', inputFiscalDate.value)\r\n        // formData.append('inputFirstName', inputFirstName.value)\r\n        // formData.append('inputLastName', inputLastName.value)\r\n        formData.append('inputNotificationEmail', inputNotificationEmail.value)\r\n        formData.append('inputNotificationPhone', inputNotificationPhone.value)\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputNotificationAddress', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputNotificationAddress', addressObject)\r\n        }\r\n        formData.append('inputEIN', inputEIN.value)\r\n\r\n        if (inputNotificationCity.value) {\r\n            formData.append('inputNotificationCity', inputNotificationCity.value);\r\n        } else {\r\n            formData.append('inputNotificationCity', '');\r\n        }\r\n        if (inputNotificationState.value) {\r\n            formData.append('inputNotificationState', inputNotificationState.value);\r\n        } else {\r\n            formData.append('inputNotificationState', '');\r\n        }\r\n        formData.append('inputNotificationZip', inputNotificationZip.value);\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputBusinessPurpose', inputBusinessPurpose.value)\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n\r\n        const response = await createEntity(formData);\r\n        if (response.field_error) {\r\n            setApiLoading(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n                if (key === 'inputName') {\r\n                    setInputName({...inputName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputComplianceOnly') {\r\n                    setInputComplianceOnly({...inputComplianceOnly, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFillingState') {\r\n                    setInputFillingState({...inputFillingState, error: response.field_error[key]})\r\n                }\r\n\r\n                // if (key === 'inputFirstName') {\r\n                //     setInputFirstName({...inputFirstName, error: response.field_error[key]})\r\n                // }\r\n                //\r\n                // if (key === 'inputLastName') {\r\n                //     setInputLastName({...inputLastName, error: response.field_error[key]})\r\n                // }\r\n                if (key === 'inputFillingStructure') {\r\n                    setInputFillingStructure({...inputFillingStructure, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputFormationDate') {\r\n                    setInputFormationDate({...inputFormationDate, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationEmail') {\r\n                    setInputNotificationEmail({...inputNotificationEmail, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationPhone') {\r\n                    setInputNotificationPhone({...inputNotificationPhone, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationAddress') {\r\n                    setInputNotificationAddress({...inputNotificationAddress, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationCity') {\r\n                    setInputNotificationCity({...inputNotificationCity, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationState') {\r\n                    setInputNotificationState({...inputNotificationState, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationZip') {\r\n                    setInputNotificationZip({...inputNotificationZip, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputBusinessPurpose') {\r\n                    setInputBusinessPurpose({...inputBusinessPurpose, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n                if (key === 'inputEIN') {\r\n                    setInputEIN({...inputEIN, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFiscalDate') {\r\n                    // setInputFiscalDate(inputFiscalDate => ...inputFiscalDate, error:response.field_error[key])\r\n                    setInputFiscalDate({...inputFiscalDate, value: fiscal, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n        if (response) {\r\n            if (response.status) {\r\n                await resetForm();\r\n                setApiLoading(false);\r\n                setSuccessMessage(true);\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n\r\n\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(false);\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setError(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Paper className={classes.paper} elevation={3} >\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Please make sure that you have entered it correctly.\r\n                            If you proceed and we are unable to validate your address it may cause delays\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                            Accept\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {error ? (<MySnackbarContentWrapper\r\n                    onClose={()=>{removeErrorMessage()}}\r\n                    variant=\"error\"\r\n                    message=\"Something went wrong\"\r\n                />) : ''}\r\n\r\n                {successMessage ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeSuccess()}}\r\n                        variant=\"success\"\r\n                        message=\"Entity has been added\"\r\n                    />\r\n                ) : ''}\r\n\r\n                <Grid container spacing={0}>\r\n\r\n\r\n                    <form className={classes.container} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    value={inputName.value}\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputName.error !== ' '}\r\n                                    onChange={e => setInputName({...inputName, value: e.target.value})}\r\n                                    id=\"inputName\"\r\n                                    label=\"Entity Name\"\r\n                                    className={clsx(classes.textField, classes.dense, classes.label)}\r\n                                    margin=\"dense\"\r\n                                    helperText={inputName.error}\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputForeign.error !== ' ' ? \"true\" : \"false\"}\r\n                                    onChange={e => setInputForeign({\r\n                                        ...inputForeign,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputForeign.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Foreign Qualified\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputComplianceOnly.error !== ' ' ?  \"true\" : \"false\"}\r\n                                    onChange={e => setInputComplianceOnly({\r\n                                        ...inputComplianceOnly,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputComplianceOnly.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Compliance Only\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingState.error !== ' ' }>\r\n                                    <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Entity\r\n                                        State</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingState.error !== ' '}\r\n                                        value={inputFillingState.value}\r\n\r\n                                        onChange={e => setInputFillingState({\r\n                                            ...inputFillingState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingState',\r\n                                            id: 'inputFillingState',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)\r\n\r\n                                        }\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingStructure.error !== ' '}>\r\n                                    <InputLabel htmlFor=\"age-native-simple\">Entity Structure</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingStructure.error !== ' '}\r\n                                        value={inputFillingStructure.value}\r\n                                        onChange={e => setInputFillingStructure({\r\n                                            ...inputFillingStructure,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingStructure',\r\n                                            id: 'inputFillingStructure',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {FillingStructureData?.map((anObjectMapped, index) => <option\r\n                                            key={index}\r\n                                            value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingStructure.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Formation Date\"\r\n                                    format={'Y-M-d'}\r\n                                    error={inputFormationDate.error !== ' '}\r\n                                    value={inputFormationDate.value}\r\n                                    onChange={e => setInputFormationDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Fiscal Date\"\r\n                                    error={inputFiscalDate.error !== ' '}\r\n                                    value={inputFiscalDate.value}\r\n                                    onChange={e => setInputFiscalDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFiscalDate',\r\n                                        id: 'inputFiscalDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n\r\n                                    type=\"email\"\r\n                                    value={inputNotificationEmail.value}\r\n                                    onChange={e => setInputNotificationEmail({\r\n                                        ...inputNotificationEmail,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationEmail',\r\n                                        id: 'inputNotificationEmail',\r\n                                    }}\r\n                                    error={inputNotificationEmail.error !== ' '}\r\n                                    helperText={inputNotificationEmail.error}\r\n                                    label=\"Notification Email\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    value={inputNotificationPhone.value}\r\n                                    onChange={e => setInputNotificationPhone({\r\n                                        ...inputNotificationPhone,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationPhone',\r\n                                        id: 'inputNotificationPhone',\r\n                                    }}\r\n                                    error={inputNotificationPhone.error !== ' '}\r\n                                    helperText={inputNotificationPhone.error}\r\n                                    label=\"Notification Phone\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <Autocomplete\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    width={''}\r\n                                    addressObject={addressObjectChangeHandler}\r\n                                    addressValue={addressValueChangeHandler}\r\n                                    reset={addressReset}\r\n                                    onChange={e => setAddressValue({\r\n                                        ...addressValue,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationAddress',\r\n                                        id: 'inputNotificationAddress',\r\n                                    }}\r\n                                    error={inputNotificationAddress.error !== ' '}\r\n                                    helperText={inputNotificationAddress.error}\r\n                                    className={clsx(classes.dense)}\r\n                                />\r\n                            </div>\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    value={inputEIN.value}\r\n                                    onChange={e => setInputEIN({\r\n                                        ...inputEIN,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputEIN',\r\n                                        id: 'inputEIN',\r\n                                    }}\r\n                                    error={inputEIN.error !== ' '}\r\n                                    helperText={inputEIN.error}\r\n                                    label=\"EIN\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputNotificationCity.error !== ' '}\r\n                                    helperText={inputNotificationCity.error}\r\n                                    value={inputNotificationCity.value || ''}\r\n                                    onChange={e => setInputNotificationCity({\r\n                                        ...inputNotificationCity,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationCity',\r\n                                        id: 'inputNotificationCity',\r\n                                    }}\r\n                                    label=\"City\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-4'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputNotificationState.error !== ' '}>\r\n                                    <InputLabel>\r\n                                        State/Region/Province\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        // renderValue={inputNotificationState.value || ''}\r\n                                        value={inputNotificationState.value || ''}\r\n                                        onChange={e => setInputNotificationState({\r\n                                            ...inputNotificationState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputNotificationState',\r\n                                            id: 'inputNotificationState',\r\n                                        }}\r\n                                        error={inputNotificationState.error !== ' '}\r\n                                        // helperText={inputNotificationState.error}\r\n                                    >\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputNotificationState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    value={inputNotificationZip.value}\r\n                                    onChange={e => setInputNotificationZip({\r\n                                        ...inputNotificationZip,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationZip',\r\n                                        id: 'inputNotificationZip',\r\n                                    }}\r\n                                    error={inputNotificationZip.error !== ' '}\r\n                                    helperText={inputNotificationZip.error}\r\n                                    label=\"Postal / Zip Code\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUpapiLoading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                {inputFiling.success !== ' ' ? (<span>{inputFiling.success}</span>) : ' '}\r\n                                {inputFiling.error !== ' ' ? (\r\n                                    <span className={clsx(classes.fileError)}>{inputFiling.error}</span>) : ' '}\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    disabled={apiLoading}\r\n                                    placeholder=\"Business Purpose\"\r\n                                    value={inputBusinessPurpose.value}\r\n                                    error={inputBusinessPurpose.error !== ' '}\r\n                                    helperText={inputBusinessPurpose.error}\r\n                                    onChange={e => setInputBusinessPurpose({\r\n                                        ...inputBusinessPurpose,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'inputBusinessPurpose',\r\n                                        id: 'inputBusinessPurpose',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {apiLoading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n                                    {/*<input disabled={apiLoading}*/}\r\n                                    {/*       className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                    {/*       type=\"reset\"  value=\"Reset\"/>*/}\r\n\r\n                                    <input disabled={apiLoading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Create New Entity\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddEntity);\r\n","const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\n\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const AttachmentsList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Documents/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const attachFiles = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/documents/attachment`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n// import {useHistory} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {taskUpdate} from '../api/attachment';\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ComplianceTaskList(props) {\r\n    localStorage.setItem('task', 'false');\r\n    const {addError} = useContext(UserContext);\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    // const [userAgree, setUserAgree] = React.useState(false);\r\n    const [status, setStatus] = React.useState('');\r\n    const [taskID, setTaskID] = React.useState()\r\n    // const [eid, setEid] = React.useState('');\r\n    // const [data, setData] = React.useState(props.data)\r\n    // const history = useHistory();\r\n    // const classes = useStyles();\r\n\r\n\r\n    // const data = [{id: \"4071993000002295199\", subject: \"Dissolve LLC FQ\", dueDate: \"2019-12-12\", status: \"Not Started\"}]\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setLoading(false);\r\n        return null;\r\n    };\r\n    const taskUpdateController = () => {\r\n        console.log('task', localStorage.getItem('task'))\r\n        if (localStorage.getItem('task') === 'false') {\r\n            setOpen(true);\r\n        }\r\n\r\n\r\n        if (localStorage.getItem('task') === 'true') {\r\n            setOpen(false);\r\n\r\n            let formData = new FormData();\r\n            formData.append('status', status);\r\n            formData.append('eid', props.eid);\r\n            taskUpdate(taskID, formData).then(response => {\r\n                if (response.message) {\r\n                    localStorage.setItem('task', 'false');\r\n                    props.update();\r\n                    setLoading(false);\r\n                }\r\n\r\n                if (response.type === 'error') {\r\n                    addError(response.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const iAgree = async (event) => {\r\n\r\n        localStorage.setItem('task', 'true');\r\n        taskUpdateController();\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Compliance Task\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure, you want to mark this task\r\n                        as {localStorage.getItem('userMessage') ? localStorage.getItem('userMessage') : ''}.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n\r\n                actions={[\r\n                    rowData => ({\r\n                        icon: 'check',\r\n                        position: 'row',\r\n                        tooltip: rowData.status === 'Completed' ? 'Mark this task Incomplete' : 'Mark this task Complete',\r\n                        onClick: (event, rowData) => {\r\n                            setLoading(true);\r\n                            if (rowData.status === 'Completed') {\r\n                                Promise.resolve(setStatus(0));\r\n                                localStorage.setItem('userMessage', 'Incomplete');\r\n                            } else {\r\n                                Promise.resolve(setStatus(1));\r\n                                localStorage.setItem('userMessage', 'Complete');\r\n                            }\r\n                            Promise.resolve(setTaskID(rowData.id));\r\n                            setOpen(true);\r\n\r\n\r\n                        }\r\n                    })\r\n                ]}\r\n\r\n                title={props.title !== '' ? props.title : ''}\r\n                options={{\r\n                    selection: props.selection ? props.selection : false,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ComplianceTaskList;\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ContactList(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={  props.action ? [\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ] : ''}\r\n                options={{\r\n                    sorting: true\r\n                }}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(ContactList);\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction AttachmentTable(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={[\r\n                    rowData => ({\r\n                        icon: () => <CloudDownloadIcon/>,\r\n                        tooltip: 'Download',\r\n                        onClick: (event, rowData) => {\r\n                            const url = `${process.env.REACT_APP_SERVER_API_URL}/download/${rowData.fileId}?token=${rowData.token}&name=${rowData.name}`;\r\n                            window.open(url,'_blank');\r\n                        }\r\n                    }),\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    sorting: true\r\n                }}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(AttachmentTable);\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst ChildDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n\r\n        if(checkRole === 'Child Entity'){\r\n             detailedView = await entityDetail(attributes.organization);\r\n        }\r\n        if (detailedView.result) {\r\n            addTitle('Dashboard ' +' - '+ detailedView.result.entity.name);\r\n            localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks);\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError('Status '+ detailedView.errors.status +' '+ detailedView.errors.detail);\r\n        }\r\n\r\n\r\n        if(detailedView.status === 401){\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(attributes.organization);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <Grid container spacing={2}>\r\n\r\n                    {errorList?.map((value, index) => (\r\n                        <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                                  message={value} onClose={()=> removeError(index)}/>\r\n                    ))}\r\n\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add`} data={attachmentData}\r\n                                     title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(ChildDetailedPage);\r\n\r\n","import React, {useEffect, useContext, forwardRef } from 'react';\nimport MaterialTable, {MTableToolbar} from \"material-table\";\nimport Layout from \"../layout/Layout\";\nimport {entityList} from \"../api/enitity.crud\";\nimport {UserContext} from '../context/UserContext';\nimport {withOktaAuth} from '@okta/okta-react';\nimport {useHistory} from \"react-router-dom\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Link from '@material-ui/core/Link';\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {amber, green} from \"@material-ui/core/colors\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ChildDetailedPage from '../entity/ChildDetailedPage';\nimport Add from '@material-ui/icons/Add';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n\n    adjustment: {\n        marginRight: '5px',\n    },\n\n    companyinfo: {\n        listStyle: 'none',\n        padding: '0px',\n        minHeight: '100px'\n\n    },\n    listItem: {\n        marginBottom: '5px'\n    },\n\n    errorMessage: {\n        marginBottom: '5px'\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles();\n    const {className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            elevation={6}\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n}\n\n\nfunction Dashboard(props) {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const tableIcons = {\n       Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />)\n\n};\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\n    const checkRole = role ? role : localStorage.getItem('role');\n    const [entitydata, setEntityData] = React.useState([]);\n    const [componentLoading, setComponentLoading] = React.useState(true);\n    useEffect(() => {\n        if (loading === true) {\n            addTitle('Dashboard');\n            if (role === 'Parent Organization' || role === 'Administrator') {\n                asyncDataFetch();\n            }\n        }\n\n    }, [loading])\n\n    const asyncDataFetch = async () => {\n        const tokenResult = await props.authState.accessToken;\n        ;\n\n        try {\n            await fetchData(tokenResult);\n        } catch (e) {\n            addError('Something when wrong!!');\n        }\n    }\n\n\n    const fetchData = async (token) => {\n        try {\n            await entityList(token).then(response => {\n                if (response.data) {\n                    setEntityData(response.data.results);\n                    setComponentLoading(false);\n                }\n\n                if (response.error) {\n                    addError(response.error.message);\n                }\n\n                if (response.type === 'error') {\n                    window.location.reload();\n                }\n\n                if (response.status === 401) {\n                    window.location.reload();\n                }\n\n\n            });\n        } catch (e) {\n            addError(e);\n        }\n    }\n\n    const settingData = {\n        columns: [\n\n            {title: 'Name', field: 'name'},\n            {title: 'Entity Structure', field: 'entityStructure'},\n            {title: 'Filing State', field: 'filingState'},\n            {title: 'Formation Date', field: 'formationDate'},\n            // {\n            //     title: 'Action',\n            //     sorting: false,\n            //     field: 'url',\n            //\n            //     render: rowData =>  <Link\n            //         component=\"button\"\n            //         variant=\"body2\"\n            //         onClick={() => {\n            //             if (rowData.id !== attributes.organization) {\n            //                 history.push(`/entity/${rowData.id}`);\n            //             } else {\n            //                 history.push(`/entity`);\n            //             }\n            //         }}>\n            //         {/*<VisibilityIcon/>*/}\n            //     </Link>\n            //\n            //     // render: rowData => <a href={`/entity/${rowData.id}`}> <VisibilityIcon/> </a>\n            // },\n        ],\n        data: entitydata,\n    };\n\n    return (\n        <>\n\n            <Layout>\n\n                {errorList?.map((value, index) => (\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\n                                              message={value} onClose={() => {\n                        removeError(index)\n                    }}/>\n                ))}\n                {checkRole === 'Parent Organization' ?\n                    <div style={{maxWidth: \"100%\"}}>\n                        <MaterialTable\n                            icons={tableIcons}\n                            parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                            isLoading={componentLoading}\n                            title={'Entities'}\n                            columns={settingData.columns}\n                            data={settingData.data}\n                            options={{\n                                defaultExpanded: false,\n                                sorting: true,\n                                actionsColumnIndex: -1\n                            }}\n                            actions={[\n                                rowData => ({\n                                    icon: () => <VisibilityIcon />,\n                                    tooltip: 'View',\n                                    onClick: (event, rowData) => {\n                                        if (rowData.id !== attributes.organization) {\n                                            history.push(`/entity/${rowData.id}`);\n                                        } else {\n                                            history.push(`/entity`);\n                                        }\n                                    }\n                                })\n                            ]}\n                        />\n                    </div> : ''}\n\n                {\n                    checkRole === 'Child Entity' ?\n                        <ChildDetailedPage/> : ''\n                }\n\n\n                {\n                    checkRole === 'Administrator' ?\n                        <div style={{maxWidth: \"100%\"}}>\n                            <MaterialTable\n                                icons={tableIcons}\n                                parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                                isLoading={componentLoading}\n                                title={'Entities'}\n                                columns={settingData.columns}\n                                data={settingData.data}\n                                options={{\n                                    defaultExpanded: false,\n                                    sorting: true,\n                                    actionsColumnIndex: -1\n                                }}\n                                actions={[\n                                    rowData => ({\n                                        icon: () => <VisibilityIcon />,\n                                        tooltip: 'View',\n                                        onClick: (event, rowData) => {\n                                            if (rowData.id !== attributes.organization) {\n                                                history.push(`/entity/${rowData.id}`);\n                                            } else {\n                                                history.push(`/entity`);\n                                            }\n                                        }\n                                    })\n                                ]}\n                            />\n                        </div> : ''\n\n                }\n\n            </Layout>\n\n        </>\n\n    )\n}\n\n\nexport default withOktaAuth(Dashboard);\n","import React, {useEffect, useMemo, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n// import BusinessIcon from '@material-ui/icons/Business';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst EntityDetailedPage = (props) => {\r\n\r\n    const entity_id = props.match.params.id;\r\n\r\n\r\n    const {loading, attributes, addError, errorList, role, addTitle, profile} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    const [entityName, setEntityName] = React.useState('');\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ');\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n        var detailedView = '';\r\n        if (checkRole === 'Parent Organization' || checkRole === 'Administrator' ) {\r\n            detailedView = await entityDetail(entity_id);\r\n            if(detailedView.result) {\r\n                addTitle('Entity - ' + detailedView.result.entity.name);\r\n               localStorage.setItem('entityName', detailedView.result.entity.name);\r\n            }\r\n        }\r\n\r\n        if (checkRole === 'Child Entity') {\r\n            detailedView = await selfEntityDetail();\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            addTitle('Entity - '+ detailedView.result.entity.name);\r\n            setEntitydetail(detailedView.result)\r\n            setContactList(detailedView.result.contacts);\r\n            setAttachmentList(detailedView.result.attachments)\r\n            setTaskList(detailedView.result.tasks)\r\n            setComponentLoading(false);\r\n\r\n        }\r\n\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n        if(detailedView.status === 401){\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(entity_id);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n\r\n\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={2}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </> :\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={entity_id}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${entity_id}`} data={attachmentData}\r\n                                     title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${entity_id}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(EntityDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst SelfDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, profile, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            try{\r\n                addTitle('Entity - ' + profile.name);\r\n            } catch (e) {\r\n                props.authService.logout('/');\r\n            }\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n                setComponentLoading(false);\r\n            }\r\n        }\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks)\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n        if(detailedView.status === 401){\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={()=> removeError(index)}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable action={true} loading={componentLoading} tooltip={'Add New Document'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${attributes ? attributes.organization : ''}`} data={attachmentData}\r\n                                     title={'Documents'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${attributes ? attributes.organization : ''}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(SelfDetailedPage);\r\n\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const contactList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const createContact = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ContactTypeList, StateRegionList} from \"../api/enitity.crud\";\r\nimport {createContact} from \"../api/contact.crud\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport utils from 'smartystreets-javascript-sdk-utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\n\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpcomponentLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddContactForm = (props) => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const {loading, attributes, addTitle} = useContext(UserContext);\r\n\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [componentLoading, setComponentLoading] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    //form state\r\n\r\n\r\n    const [inputContactFirstName, setInputContactFirstName] = React.useState({value: '', error: ' '});\r\n    const [inputContactLastName, setInputLastName] = React.useState({value: '', error: ' '});\r\n    const [inputContactEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputContactPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputContactStreet, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputContactType, setInputNotificationContactType] = React.useState({value: '', error: ' '});\r\n    const [inputContactCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputContactState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputContactZipcode, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setComponentLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true);\r\n\r\n    };\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                setInputNotificationCity({...inputContactCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputContactState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(loading === true) {\r\n            addTitle('Add New Contact');\r\n            fetchDataforDropdownsContactTypeList();\r\n            fetchDataforDropdownsStateRegion();\r\n            localStorage.setItem('iAgree', false);\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            const response = await ContactTypeList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n            setContactType(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            const response = await StateRegionList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n            setStateRegion(response.data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = async (value) => {\r\n        return Promise.resolve(setAddressValue(value));\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setInputContactFirstName({error: ' ', value: ''})\r\n                setInputLastName({error: ' ', value: ''})\r\n                setInputNotificationEmail({error: ' ', value: ''})\r\n                setInputNotificationPhone({error: ' ', value: ''})\r\n                setInputNotificationAddress({error: ' ', value: ''})\r\n                setInputNotificationContactType({error: ' ', value: ''})\r\n                setInputNotificationCity({error: ' ', value: ''})\r\n                setInputNotificationState({error: ' ', value: ''})\r\n                setInputNotificationZip({error: ' ', value: ''});\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n\r\n        event.preventDefault();\r\n        setComponentLoading(true);\r\n        setAddressReset('');\r\n        // if (userResponse === 'false') {\r\n        //     await addressCheck();\r\n        // }\r\n\r\n\r\n        var formsubmit = true;\r\n        if (inputContactZipcode.value) {\r\n            var zip = parseInt(inputContactZipcode.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setComponentLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setComponentLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputContactCity.value && inputContactState.value && inputContactZipcode.value !== '') {\r\n                    formsubmit = false;\r\n                    await addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            contactsCreate(event, userResponse);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactsCreate = async (event, valid = null) => {\r\n\r\n\r\n        let formData = new FormData();\r\n        setInputContactFirstName({...inputContactFirstName, error: ' '})\r\n        setInputLastName({...inputContactLastName, error: ' '})\r\n        setInputNotificationEmail({...inputContactEmail, error: ' '})\r\n        setInputNotificationPhone({...inputContactPhone, error: ' '})\r\n        setInputNotificationAddress({...inputContactStreet, error: ' '})\r\n        setInputNotificationContactType({...inputContactType, error: ' '})\r\n        setInputNotificationCity({...inputContactCity, error: ' '})\r\n        setInputNotificationState({...inputContactState, error: ' '})\r\n        setInputNotificationZip({...inputContactZipcode, error: ' '})\r\n\r\n        if(attributes.organization) {\r\n            formData.append('entityId', props.match.params.id ? props.match.params.id : attributes.organization);\r\n        }\r\n        formData.append('inputContactFirstName', inputContactFirstName.value);\r\n        formData.append('inputContactLastName', inputContactLastName.value);\r\n        formData.append('inputContactEmail', inputContactEmail.value);\r\n        formData.append('inputContactPhone', inputContactPhone.value);\r\n        formData.append('inputContactStreet', addressObject.streetLine);\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputContactStreet', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputContactStreet', addressObject)\r\n        }\r\n        formData.append('inputContactType', inputContactType.value)\r\n\r\n        if (inputContactCity.value) {\r\n            formData.append('inputContactCity', inputContactCity.value);\r\n        } else {\r\n            formData.append('inputContactCity', '');\r\n        }\r\n        if (inputContactState.value) {\r\n            formData.append('inputContactState', inputContactState.value);\r\n        } else {\r\n            formData.append('inputContactState', '');\r\n        }\r\n\r\n        formData.append('inputContactZipcode', inputContactZipcode.value)\r\n\r\n\r\n        formData.append('inputAddressIsValid', valid ? valid : isValidAddress)\r\n        formData.append('acceptInvalidAddress', userAgree)\r\n\r\n        const response = await createContact(formData);\r\n        if (response.field_error) {\r\n\r\n            setComponentLoading(false);\r\n            setIsValidAddress(false);\r\n            setUserAgree(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n\r\n                if (key === 'inputContactFirstName') {\r\n                    setInputContactFirstName({...inputContactFirstName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactLastName') {\r\n                    setInputLastName({...inputContactLastName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactEmail') {\r\n                    setInputNotificationEmail({...inputContactEmail, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactPhone') {\r\n                    setInputNotificationPhone({...inputContactPhone, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactStreet') {\r\n                    setInputNotificationAddress({...inputContactStreet, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactType') {\r\n                    setInputNotificationContactType({...inputContactType, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactCity') {\r\n                    setInputNotificationCity({...inputContactCity, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactState') {\r\n                    setInputNotificationState({...inputContactState, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactZipcode') {\r\n                    setInputNotificationZip({...inputContactZipcode, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n        if (response.data) {\r\n            if (response.data.type === 'ok') {\r\n\r\n                new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve();\r\n                        setUserAgree(false);\r\n                        setComponentLoading(false);\r\n                        setSuccessMessage(response.data.results);\r\n                        resetForm();\r\n                        window.scrollTo(0, 0)\r\n                    }, 600);\r\n                });\r\n\r\n            }\r\n\r\n            if (response.data) {\r\n                if (response.data.type === 'error') {\r\n                    await updateStates(response.data.results);\r\n\r\n                    // console.log(addressObject);\r\n                }\r\n            }\r\n        }\r\n\r\n        //\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n        //\r\n        // setTimeout(() => {\r\n        //     setComponentLoading(false);\r\n        //     history.goBack();\r\n        // }, 4000)\r\n        // setComponentLoading(true);\r\n\r\n\r\n    }\r\n\r\n\r\n    const updateStates = async (data) => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setUserAgree(false);\r\n                setComponentLoading(false);\r\n                setErrorMessage(data);\r\n                window.scrollTo(0, 0)\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const addressCheck = async (event) => {\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputContactCity.value;\r\n        lookup1.state = inputContactState.value;\r\n        lookup1.zipCode = inputContactZipcode.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                contactsCreate(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const disableSuccessMessage = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n\r\n    const disableErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Contact</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Please make sure that you have entered it correctly.\r\n                        If you proceed and we are unable to validate your address it may cause delays\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                            {successMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableSuccessMessage()}}\r\n                                    variant=\"success\"\r\n                                    message={successMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n\r\n                            {errorMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableErrorMessage()}}\r\n                                    variant=\"error\"\r\n                                    message={errorMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n                            <Grid container spacing={0}>\r\n                                <form id={\"create-course-form\"} className={classes.container} onSubmit={handleOnSubmit}\r\n                                      noValidate\r\n                                      autoComplete=\"off\">\r\n                                    <FormGroup row>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                error={inputContactFirstName.error !== ' '}\r\n                                                label=\"First Name\"\r\n                                                value={inputContactFirstName.value}\r\n                                                onChange={e => setInputContactFirstName({\r\n                                                    ...inputContactFirstName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactFirstName',\r\n                                                    id: 'inputContactFirstName',\r\n                                                }}\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactFirstName.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                value={inputContactLastName.value}\r\n                                                onChange={e => setInputLastName({\r\n                                                    ...inputContactLastName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactLastName',\r\n                                                    id: 'inputContactLastName',\r\n                                                }}\r\n                                                error={inputContactLastName.error !== ' '}\r\n                                                label=\"Last Name\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactLastName.error}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n\r\n                                                type=\"email\"\r\n                                                value={inputContactEmail.value}\r\n                                                onChange={e => setInputNotificationEmail({\r\n                                                    ...inputContactEmail,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactEmail',\r\n                                                    id: 'inputContactEmail',\r\n                                                }}\r\n                                                error={inputContactEmail.error !== ' '}\r\n                                                helperText={inputContactEmail.error}\r\n                                                label=\"Email\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                value={inputContactPhone.value}\r\n                                                onChange={e => setInputNotificationPhone({\r\n                                                    ...inputContactPhone,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactPhone',\r\n                                                    id: 'inputContactPhone',\r\n                                                }}\r\n                                                error={inputContactPhone.error !== ' '}\r\n                                                helperText={inputContactPhone.error}\r\n                                                label=\"Phone\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-12'}>\r\n                                            <Autocomplete\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                width={''}\r\n                                                addressObject={addressObjectChangeHandler}\r\n                                                addressValue={addressValueChangeHandler}\r\n                                                reset={addressReset}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactStreet',\r\n                                                    id: 'inputContactStreet',\r\n                                                }}\r\n                                                error={inputContactStreet.error !== ' '}\r\n                                                helperText={inputContactStreet.error}\r\n                                                className={clsx(classes.dense)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactType.error !== ' '}>\r\n                                                <InputLabel htmlFor=\"age-native-simple\">Contact Type</InputLabel>\r\n                                                <Select\r\n                                                    disabled={componentLoading}\r\n                                                    native\r\n                                                    value={inputContactType.value}\r\n                                                    onChange={e => setInputNotificationContactType({\r\n                                                        ...inputContactType,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactType',\r\n                                                        id: 'inputContactType',\r\n                                                    }}\r\n                                                    error={inputContactType.error !== ' '}\r\n                                                    helperText={inputContactType.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {contactType?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactType.error}</FormHelperText>\r\n\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                error={inputContactCity.error !== ' '}\r\n                                                helperText={inputContactCity.error}\r\n                                                value={inputContactCity.value || ''}\r\n                                                onChange={e => setInputNotificationCity({\r\n                                                    ...inputContactCity,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactCity',\r\n                                                    id: 'inputContactCity',\r\n                                                }}\r\n                                                label=\"City\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactState.error !== ' '}>\r\n                                                <InputLabel>\r\n                                                    State/Region/Province\r\n                                                </InputLabel>\r\n                                                <Select\r\n                                                    disabled={componentLoading}\r\n                                                    required\r\n                                                    native\r\n                                                    value={inputContactState.value || ''}\r\n                                                    onChange={e => setInputNotificationState({\r\n                                                        ...inputContactState,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactState',\r\n                                                        id: 'inputContactState',\r\n                                                    }}\r\n                                                    error={inputContactState.error !== ' '}\r\n                                                    helperText={inputContactState.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactState.error}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={componentLoading}\r\n                                                required\r\n                                                type=\"text\"\r\n                                                value={inputContactZipcode.value}\r\n                                                onChange={e => setInputNotificationZip({\r\n                                                    ...inputContactZipcode,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactZipcode',\r\n                                                    id: 'inputContactZipcode',\r\n                                                }}\r\n                                                error={inputContactZipcode.error !== ' '}\r\n                                                helperText={inputContactZipcode.error}\r\n                                                label=\"Postal / Zip Code\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-12'}>\r\n                                            <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                                {componentLoading ? (\r\n                                                        <div className={clsx(classes.loader)}>\r\n                                                            <FacebookProgress/>\r\n                                                        </div>)\r\n                                                    : null}\r\n                                                {/*<input className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                                {/*       type=\"reset\" onClick={(e) => {resetForm()}} value=\"Reset\"/>*/}\r\n\r\n                                                <input disabled={componentLoading}\r\n                                                       className={clsx('btn btn-primary', classes.restButton)}\r\n                                                       type=\"submit\" value=\"Add new Contact\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </form>\r\n                            </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddContactForm);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {AttachmentsList} from \"../api/attachment\";\r\nimport AttachmentTable from \"../attachment/AttachmentTable\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Attachments = () => {\r\n    const {loading, attributes, addError, errorList, addTitle} = useContext(UserContext);\r\n\r\n    // const history = useHistory();\r\n    const classes = useStyles();\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Attachments');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await AttachmentsList(attributes.organization);\r\n            await setAttachmentList(response.data.documents);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Attachment API.');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dummyData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                field: 'name',\r\n\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <AttachmentTable loading={componentLoading} tooltip={'Add Attachment'} data={dummyData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Attachments);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {contactList} from \"../api/contact.crud\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Contacts = () => {\r\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [listcontacts, setListcontacts] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Contacts');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await contactList(attributes.organization);\r\n            await setListcontacts(response.data.contacts);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Contact API.');\r\n        }\r\n    }\r\n\r\n    const dummyDataa = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Phone', field: 'phone'},\r\n        ],\r\n        data: listcontacts,\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={(e) => removeError(index)}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Contacts'} data={dummyDataa}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Contacts);\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport {attachFiles} from \"../api/attachment\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n        width: '100%',\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    formStyle: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    },\r\n\r\n    uploadCustom :{\r\n        marginTop: 10,\r\n        marginLeft: 5\r\n\r\n    }\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                        {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddAttachmentForm = (props) => {\r\n\r\n    const {addTitle, addError, attributes} = useContext(UserContext);\r\n    addTitle('Add New Document');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    // const [error, setError] = React.useState(false);\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // const handleClose = (event, reason) => {\r\n    //     setError(false);\r\n    // }\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n\r\n// console.log(inputFormationDate.value);\r\n\r\n// Display the key/value pairs\r\n        if(attributes.organization) {\r\n            formData.append('entityId', props.match.params.id ? props.match.params.id : attributes.organization);\r\n        }\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        try {\r\n            const response = await attachFiles(formData);\r\n            if (response) {\r\n                if (response.status === true) {\r\n                    setSuccessMessage(response.message);\r\n                    setLoading(false);\r\n                }\r\n                if(response.status === false){\r\n                    setInputFiling({...inputFiling,error: response.message});\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            addError('Something went wrong with Document API.');\r\n            setErrorMessage('Something went wrong with Document API.');\r\n        }\r\n\r\n        // if(response.status == true) {\r\n        //     setTimeout(() => {\r\n        //         history.goBack();\r\n        //     }, 4000)\r\n        // }\r\n\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const filename = e.target.files[0].name;\r\n        const response = await lorexFileUpload(formData);\r\n        if (response.error === false) {\r\n            setInputFiling({...inputFiling, value: response.record_id, success: 'Ready to add Document.'});\r\n            setInputFileSize({...inputFileSize, value: response.file_size})\r\n            if (filename) {\r\n                setInputFileName({...inputFileName, value: filename});\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Layout>\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Document</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n                {successMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeSuccess()}}\r\n                        variant=\"success\"\r\n                        message={successMessage}\r\n                    />\r\n                ) : ''}\r\n\r\n\r\n                {errorMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeErrorMessage()}}\r\n                        variant=\"error\"\r\n                        message={errorMessage}\r\n                    />\r\n                ) : ''}\r\n                <div className=\"row\">\r\n                    <form className={classes.formStyle} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={loading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Document\"\r\n                                    className={clsx(classes.fileUploading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                <span className={classes.uploadCustom}>{inputFiling.success !== ' ' ? inputFiling.success : ' '}</span>\r\n                                {inputFiling.error !== ' ' ? <span className={'error'}>{inputFiling.error !== ' ' ? inputFiling.error : ' '}</span> : ''}\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {loading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n\r\n                                    <input disabled={loading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Add Document\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </div>\r\n\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default withOktaAuth(AddAttachmentForm);\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Particles from \"react-particles-js\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Footer from \"../layout/Footer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    privacyBody: {\r\n        padding: 20\r\n    },\r\n    privacyLogo: {\r\n        textAlign: 'center',\r\n        marginBottom: 50,\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nfunction Privacy(props) {\r\n    const classes = useStyles();\r\n    const today = new Date().getFullYear();\r\n\r\n    return (\r\n        <>\r\n            <div className={'paperContainerPrivacy'}>\r\n                <Container component=\"main\">\r\n\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.privacyBody}>\r\n                                <div className={classes.privacyLogo}>\r\n                                    <Link to=\"/\">\r\n                                        <img\r\n                                            alt=\"Logo\"\r\n                                            src=\"/media/agentadmin/logo/aa_full.png\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>Privacy and Cookies Policy</h2>\r\n                                    <p>\r\n                                        <strong>United Agent Services, LLC (“UAS,” “we,” “us,” “our,” or the “Company”)\r\n                                            is committed\r\n                                            to\r\n                                            protecting the privacy of anyone who visits our websites or registers to use\r\n                                            our\r\n                                            services or\r\n                                            to attend our events.</strong>\r\n                                    </p>\r\n                                    <h4>Your Consent</h4>\r\n                                    <p>Use of this site constitutes your consent to the terms of this Notice and the\r\n                                        application of\r\n                                        any applicable laws and regulations. Whenever you submit personal data and\r\n                                        information via\r\n                                        this site, you consent to the collection, use, and disclosure of that data and\r\n                                        information\r\n                                        in accordance with this Notice.</p>\r\n                                    <h4>Collection of Information</h4>\r\n                                    <p>Like many web sites, this site actively collects information from its visitors\r\n                                        both by asking\r\n                                        you specific questions when you interact with us (such as registering on our\r\n                                        websites,\r\n                                        signing up to receive information from us, or making a purchase) and by\r\n                                        permitting you to\r\n                                        communicate directly with us via e-mail. Some of the information that you submit\r\n                                        may be\r\n                                        personal data or information, that is: information relating to an identified or\r\n                                        identifiable\r\n                                        natural person. Information collected may include your name, username, mailing\r\n                                        address,\r\n                                        email address or other information which you provide to us so that we may\r\n                                        communicate with\r\n                                        you.\r\n                                        Our websites will gather information such as what kind of browser you are on,\r\n                                        what operating\r\n                                        system you are using, your IP address, cookie information, time stamp (time page\r\n                                        accessed as\r\n                                        well as time spent per web page) and your clickstream information (for example,\r\n                                        which pages\r\n                                        you have viewed and how long you have been there). Note that information is only\r\n                                        gathered\r\n                                        while you are on the website.\r\n                                        In compliance with the United States Children's Online Privacy Protection Act\r\n                                        (COPPA), we do\r\n                                        not seek information from children 13 and under.\r\n                                        Use of Personal Information</p>\r\n                                    <p>We will use and process your personal data lawfully, fairly and in a transparent\r\n                                        manner. We\r\n                                        will collect and use your personal data solely for the specified and legitimate\r\n                                        purposes\r\n                                        stated in this Notice. Except as otherwise stated, we may use your information\r\n                                        to improve\r\n                                        the content of our site, to customize the site to your preferences, to\r\n                                        communicate\r\n                                        information to you (if you have requested it), for our marketing and research\r\n                                        purposes, for\r\n                                        the fulfillment of services and related activities, and account management. </p>\r\n                                    <p>We use your personal information to:\r\n                                        <ul>\r\n                                            <li>Set up your account and verify your identity</li>\r\n                                            <li>Provide products or services and related activities you requested</li>\r\n                                            <li>Provide direct and digital marketing communications via email, direct\r\n                                                mail and\r\n                                                telephone communication or through personalized online experiences\r\n                                            </li>\r\n                                            <li>Provide better customer service when you contact us</li>\r\n                                            <li>Improve the quality, content and overall user experience of this site\r\n                                            </li>\r\n                                            <li>Administer surveys, contests and other promotional events</li>\r\n                                            <li>Address other business needs such as website administration, security\r\n                                                and fraud\r\n                                                prevention, legal compliance and business continuity\r\n                                            </li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <h4>Sharing of Information with Third Parties</h4>\r\n                                    <p>We understand that you do not want us to sell, rent or lease your personal\r\n                                        information to\r\n                                        third\r\n                                        parties without your consent and we only share your personal information with\r\n                                        third parties\r\n                                        in\r\n                                        certain situations. Examples of situations where we may share your personal\r\n                                        information with\r\n                                        third parties include:</p>\r\n                                    <ul>\r\n                                        <li>Sharing personal information with our service providers who provide services\r\n                                            on our\r\n                                            behalf on\r\n                                            the condition that they are permitted to use that information solely in\r\n                                            accordance with\r\n                                            our\r\n                                            instructions to provide requested services\r\n                                        </li>\r\n                                        <li>Sharing personal information with our business partners, but only to the\r\n                                            extent you have\r\n                                            purchased or expressed an interest in a product or service of such business\r\n                                            partner or\r\n                                            interacted with or otherwise authorized the sharing of your personal\r\n                                            information with\r\n                                            such\r\n                                            business partner\r\n                                        </li>\r\n                                        <li>Sharing personal information with a third-party service provider to conduct\r\n                                            our\r\n                                            contests,\r\n                                            surveys, or promotions, but only for the limited purpose of administering\r\n                                            such contests,\r\n                                            surveys\r\n                                            or promotions\r\n                                        </li>\r\n                                        <li>Transferring personal information to a purchaser or successor entity in the\r\n                                            event of a\r\n                                            sale or\r\n                                            other corporate transaction involving some or all of our business or as\r\n                                            needed to affect\r\n                                            the\r\n                                            sale or transfer of business assets, or as needed for external audit,\r\n                                            compliance or\r\n                                            corporate\r\n                                            governance related matters\r\n                                        </li>\r\n                                        <li>Disclosing information (i) as required by applicable law, court orders,\r\n                                            government\r\n                                            regulators\r\n                                            or legal process (including subpoenas); (ii) as necessary to protect the\r\n                                            rights or\r\n                                            property of\r\n                                            United Agent Services, LLC or this site; or (iii) in exigent circumstances\r\n                                            to protect\r\n                                            the\r\n                                            personal safety of users of the site or other members of the public\r\n                                            We also share your personal information with our affiliates for the purposes\r\n                                            set forth\r\n                                            in this\r\n                                            Notice.\r\n                                        </li>\r\n                                    </ul>\r\n\r\n\r\n                                    <h5>Use of Cookies</h5>\r\n                                    <p> Our websites use \"cookies\". A cookie is a small text file that is stored on your\r\n                                        computer,\r\n                                        tablet, or smartphone when you visit a website that helps the site remember\r\n                                        information\r\n                                        about\r\n                                        you and your preferences.\r\n                                        You can find more information about the type of cookies we use and the purposes\r\n                                        for which we\r\n                                        use\r\n                                        them below:</p>\r\n                                    <ul>\r\n                                        <li>How we use Cookies on our Websites and what Information we collect.</li>\r\n                                    </ul>\r\n                                    <h5>Session Cookies</h5>\r\n                                    <p>We use session cookies for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>To control access to paid for subscription content</li>\r\n                                        <li>To allow you to carry information across pages of our website and avoid\r\n                                            having to\r\n                                            re-enter\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>information</h5>\r\n                                    <ul>\r\n                                        <li>To allow you to access stored information for future use, such as\r\n                                            registration\r\n                                        </li>\r\n                                        <li>To compile anonymous, aggregated statistics that allow us to understand how\r\n                                            users use\r\n                                            our\r\n                                            website and to help us improve the structure of our website\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>Persistent Cookies</h5>\r\n                                    <p>We use persistent cookies for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>To control access to paid for subscription content</li>\r\n                                        <li>To help us recognize you as a unique visitor (just a number) when you return\r\n                                            to our\r\n                                            website\r\n                                            and to allow us to tailor content to match your preferred interests\r\n                                        </li>\r\n                                        <li>To compile anonymous, aggregated statistics that allow us to understand how\r\n                                            users use\r\n                                            our\r\n                                            website and to help us improve the structure of our website\r\n                                        </li>\r\n                                        <li>To internally identify you by account name, email address, customer ID, and\r\n                                            location\r\n                                            (geographic and computer ID/IP address)\r\n                                        </li>\r\n                                        <li>To tailor content to your preferences</li>\r\n\r\n                                    </ul>\r\n                                    <h5>Third Party Cookies</h5>\r\n                                    <p>Third parties serve cookies via our websites. These are used for the following\r\n                                        purposes:</p>\r\n                                    <ul>\r\n                                        <li>To serve content on websites and track whether this content is clicked on by\r\n                                            users\r\n                                        </li>\r\n                                        <li>To control how often you are shown particular content</li>\r\n                                        <li>To count the number of anonymous users of our websites</li>\r\n                                        <li>For website usage analysis</li>\r\n                                        <li>To link the information we store in cookies to any personally identifiable\r\n                                            information\r\n                                            you\r\n                                            submit while on our websites\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h4>Links to Other Websites</h4>\r\n                                    <p>This site may contain links or references to other web sites. Please be aware\r\n                                        that we do not\r\n                                        control other web sites and, except as otherwise noted in the applicable\r\n                                        website, this\r\n                                        Notice\r\n                                        does not apply to those websites and we are not responsible for the security or\r\n                                        privacy of\r\n                                        any\r\n                                        information collected by these third parties.</p>\r\n\r\n                                    <h4>Share; Social Media Features; Email a Friend Functions; Public Forums</h4>\r\n                                    <p>We offers certain “share”, “social media” functionality on some of our websites.\r\n                                        If you\r\n                                        choose\r\n                                        to use these functions, we may and/or the third party social media network may\r\n                                        collect\r\n                                        certain\r\n                                        information about you depending on the function or feature you use. We use this\r\n                                        information\r\n                                        for\r\n                                        the sole purpose of sending this one-time email and we do not retain the\r\n                                        information. With\r\n                                        respect to the social media features (such as allowing you to post information\r\n                                        about your\r\n                                        activities or share your information with others on a social media site), the\r\n                                        collection and\r\n                                        use\r\n                                        of information by and your interactions with the third party social media\r\n                                        network will be\r\n                                        governed by the privacy policy of the company providing those social media\r\n                                        features. We are\r\n                                        not\r\n                                        responsible for the security or privacy of any information collected by these\r\n                                        third\r\n                                        parties.</p>\r\n\r\n                                    <h4>Storage in Marketing and Customer Relationship Software Applications</h4>\r\n                                    <p>Regardless of your consent to be contacted for direct marketing purposes, your\r\n                                        personally\r\n                                        identifiable data will be held in our marketing automation software and customer\r\n                                        relationship\r\n                                        management software for the purposes outlined above, and to properly track\r\n                                        compliance, such\r\n                                        as\r\n                                        previous consent or opt-ins, as well as your company’s relationship history with\r\n                                        us.</p>\r\n\r\n                                    <h4>Security</h4>\r\n                                    <p>We have implemented reasonable technical and organizational measures that are\r\n                                        designed to\r\n                                        prevent unauthorized access, unlawful processing and unauthorized or accidental\r\n                                        loss,\r\n                                        destruction or damage to your personal data on its servers. </p>\r\n\r\n                                    <h4>Access and Correction; Your Rights</h4>\r\n                                    <p> In some jurisdictions, you are entitled to request access to and correction of\r\n                                        your personal\r\n                                        information and, to the extent available under applicable law, you are also\r\n                                        entitled to\r\n                                        request\r\n                                        the deletion of personal data and to restrict or object to processing. Any\r\n                                        requests for\r\n                                        access\r\n                                        to or correction or deletion of your personal data, should be directed to the\r\n                                        contact person\r\n                                        listed under \"Contact Information\" below. Note that we may ask additional\r\n                                        information from\r\n                                        you,\r\n                                        to confirm your identity, as we take the protection of your personal data\r\n                                        seriously. In some\r\n                                        cases, if you have an online account with us, you may be able to log into your\r\n                                        account at\r\n                                        any\r\n                                        time to access and update the information you have provided to us.</p>\r\n                                    <p> Furthermore, you have a right of access to the personal data that you have\r\n                                        provided in a\r\n                                        structured, commonly used and machine-readable format (portability), subject to\r\n                                        a fee\r\n                                        (except\r\n                                        where it is not permissible under applicable law).</p>\r\n                                    <p>You have the ability and the right to limit the information you share with us and\r\n                                        the\r\n                                        communications we send to you. When you opt-in to receive communications from\r\n                                        us, you are\r\n                                        giving\r\n                                        your consent for your information to be used for us to contact you by email,\r\n                                        direct mail and\r\n                                        telephone, and to deliver personalized website experiences, to share information\r\n                                        about\r\n                                        relevant\r\n                                        products, services, best practice information, industry news and events. You can\r\n                                        amend your\r\n                                        communication preferences, or opt-out completely.</p>\r\n\r\n\r\n                                    <h4>International Data Transfers</h4>\r\n                                    <p>We store and process your personal data in various countries worldwide including\r\n                                        the United\r\n                                        States. We may transfer and access such information from around the world,\r\n                                        including the\r\n                                        United\r\n                                        States and other countries in which we have operations or in which our hosted\r\n                                        service\r\n                                        providers’\r\n                                        cloud servers are located. By providing us with your personal data, you consent\r\n                                        to this\r\n                                        transfer. Your data shall be protected in accordance with this Notice regardless\r\n                                        of where it\r\n                                        is\r\n                                        processed or stored.</p>\r\n\r\n                                    <p>The following applies to data transfers outside the European Economic Area\r\n                                        (“EEA): While\r\n                                        using\r\n                                        or otherwise processing your personal data for the purposes set out in this\r\n                                        Notice, we may\r\n                                        transfer your personal data to countries outside of the EEA. Whenever such\r\n                                        transfer occurs,\r\n                                        it\r\n                                        will be based on the Standard Contractual Clauses (according to EU Commission\r\n                                        Decision\r\n                                        87/2010/EC or any future replacement) signed by the recipient of such personal\r\n                                        data in\r\n                                        accordance with applicable law.</p>\r\n\r\n                                    <h4>Changes to This Privacy Policy</h4>\r\n                                    <p>We may revise this Notice. You agree to be bound by any such revisions and should\r\n                                        therefore\r\n                                        periodically visit this page to determine the current terms to which you are\r\n                                        bound. This\r\n                                        Notice\r\n                                        has been amended for the last time on May 11th 2020.</p>\r\n\r\n                                    <h4>Contact Information</h4>\r\n                                    <p>If you have any questions, comments or concerns about this Policy, you may\r\n                                        contact us at by\r\n                                        phone at (302) 467-3700 between 9am and 4pm ET or via email to\r\n                                        privacy@unitedagentservices.com.</p>\r\n                                    <h4>Disclosures</h4>\r\n                                    <p>If we are required by law or legal process, we will disclose or provide access to\r\n                                        your PII or\r\n                                        Business Information to such government or judicial authority as specified by\r\n                                        such law or\r\n                                        legal\r\n                                        process.</p>\r\n                                    <h4>Options</h4>\r\n                                    <p>Upon request we will provide customers with access to their own records.\r\n                                        Customers can access\r\n                                        and correct their PII or Business Information by emailing us Monday – Friday 9am\r\n                                        to 4pm ET\r\n                                        at\r\n                                        privacy@unitedagentservices.com, using the username and phone number provided\r\n                                        during\r\n                                        ordering.</p>\r\n\r\n                                    <h4>California Privacy Rights</h4>\r\n                                    <p>California Civil Code Section 1798.83 permits customers of United Agent Services,\r\n                                        LLC who are\r\n                                        California residents to request certain information regarding the disclosure of\r\n                                        any personal\r\n                                        information, including PII and Business Information, to third parties for their\r\n                                        direct\r\n                                        marketing\r\n                                        purposes. To make such a request, please send an email at\r\n                                        privacy@unitedagentservices.com</p>\r\n\r\n                                    <h4>Additional Information for California Residents</h4>\r\n                                    <p>In addition to the information provided in this privacy policy, additional\r\n                                        information for\r\n                                        California residents can be found below.</p>\r\n\r\n                                    <p>Pursuant to California law, we are providing additional information to California\r\n                                        residents.\r\n                                        Under California law, certain organizations need to disclose whether the\r\n                                        following\r\n                                        categories of\r\n                                        “personal information” are collected or disclosed for an organization’s\r\n                                        “business purpose”\r\n                                        as\r\n                                        those terms are defined under California law. Below please find the categories\r\n                                        of personal\r\n                                        information about California residents that we collect or disclose to third\r\n                                        parties or\r\n                                        service\r\n                                        providers. Note that while a category may be marked that does not necessarily\r\n                                        mean that we\r\n                                        have\r\n                                        information in that category about you. For example, while we collect credit\r\n                                        card numbers\r\n                                        for\r\n                                        customers who purchase our products, we do not collect or transfer credit card\r\n                                        numbers of\r\n                                        individuals that submit questions on our website’s “contact us” page. We do not\r\n                                        sell\r\n                                        personal\r\n                                        information.</p>\r\n\r\n                                    <h4>Personal Information</h4>\r\n                                    <p>Information is Collected By Us and Disclosed for Business Purposes</p>\r\n                                    <ul>\r\n                                        <li>Audio, electronic, visual, thermal, olfactory, physical characteristics or\r\n                                            similar\r\n                                        </li>\r\n                                        <li>Credit or debit card number, bank account number or other financial\r\n                                            information\r\n                                        </li>\r\n                                        <li>Commercial or transactional information (e.g., products or services\r\n                                            purchased, or\r\n                                            other purchasing or consuming histories or tendencies)\r\n                                        </li>\r\n\r\n                                        <li>Electronic network activity (e.g., browsing history)</li>\r\n                                        <li>Contact information (e.g., name or alias, postal address, email address,\r\n                                            telephone\r\n                                            number,\r\n                                            signature)\r\n                                        </li>\r\n                                        <li>Online identifier (e.g. IP address)</li>\r\n                                    </ul>\r\n                                    <h4>Information is Collected By Us but Not Disclosed for Business Purposes</h4>\r\n                                    <ul>\r\n                                        <li> Social Security Number, Driver’s License Number, State ID, Passport Number,\r\n                                            Insurance Policy\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h5>Number or Signature</h5>\r\n                                    <p>Information is Not Collected By Us and Information is Not Disclosed for Business\r\n                                        Purposes</p>\r\n                                    <ul>\r\n                                        <li>Biometric information</li>\r\n                                        <li>Characteristics of protected classifications (e.g., age, sex, race,\r\n                                            ethnicity,\r\n                                            physical or\r\n                                            mental handicap, etc.)\r\n                                        </li>\r\n                                        <li>Professional, employment, employment history or education information\r\n                                            • Geolocation data\r\n                                        </li>\r\n                                        <li>Medical or health information not covered by HIPAA or health insurance\r\n                                            information\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p><strong>We and our third-party service providers may collect the above categories\r\n                                        of\r\n                                        personal\r\n                                        information from the following sources:</strong></p>\r\n                                    <ul>\r\n                                        <li>Direct Interactions, such as, when you register for our services or make a\r\n                                            purchase\r\n                                        </li>\r\n                                        <li>Data from Third Parties, such as, information on third-party websites or\r\n                                            other\r\n                                            information you\r\n                                            may have made publicly available or information provided by third-party\r\n                                            sources,\r\n                                            including but\r\n                                            not limited to government entities and data resellers\r\n                                        </li>\r\n                                        <li> Automated Tracking Technologies, such as, information automatically\r\n                                            collected\r\n                                            about\r\n                                            your\r\n                                            interaction with our services and websites using various technologies such\r\n                                            as\r\n                                            cookies,\r\n                                            web logs\r\n                                            and beacons and internet tags.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p>Depending on how you interact with us and our services, we may use and disclose\r\n                                        the\r\n                                        above\r\n                                        categories of personal information for the following purposes:</p>\r\n                                    <ul>\r\n                                        <li>Administering our relationship with you and our business, such as, providing\r\n                                            and\r\n                                            managing your\r\n                                            access to and use of our services.\r\n                                        </li>\r\n                                        <li>Improving our Services, such as inviting you to participate in surveys or to\r\n                                            personalize your\r\n                                            experience with our services.\r\n                                        </li>\r\n                                        <li>Marketing, such as registering your opt-in to receive marketing\r\n                                            communications\r\n                                            when\r\n                                            applicable.\r\n                                        </li>\r\n                                        <li>Other general business support purposes, including but not limited to,\r\n                                            procurement,\r\n                                            financial\r\n                                            and fiscal management, risk and compliance management, and external\r\n                                            reporting.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p><strong>We may share the above categories of personal information to the\r\n                                        following third\r\n                                        parties:</strong></p>\r\n                                    <ul>\r\n                                        <li>other United Agent Services affiliates or subsidiaries, e.g. for providing\r\n                                            underpinning\r\n                                            technology to support the services we deliver;\r\n                                        </li>\r\n                                        <li>our service providers, e.g. for managing or hosting services and/or\r\n                                            underpinning\r\n                                            technology\r\n                                            for the services we provide;\r\n                                        </li>\r\n                                        <li>our business partners, to the extent you have purchased or expressed\r\n                                            interest in, a\r\n                                            product or\r\n                                            service of such business partner, interacted with them or otherwise\r\n                                            authorized the\r\n                                            sharing of\r\n                                            your personal information with such business partner;\r\n                                        </li>\r\n                                        <li>subscribing, accrediting or professional organizations, e.g. for providing\r\n                                            utilization\r\n                                            information to organizations that provide you with access to our services\r\n                                            and/or sharing\r\n                                            tracking and redeeming credits for professional accreditation;\r\n                                        </li>\r\n                                        <li>organizations involved in business transfers, e.g.to a purchaser or\r\n                                            successor entity\r\n                                            in the\r\n                                            event of a sale or any other corporate transaction involving some or all of\r\n                                            our\r\n                                            business;\r\n                                        </li>\r\n                                        <li>other parties, e.g. as needed for external audit, compliance, risk\r\n                                            management,\r\n                                            corporate\r\n                                            development and/or corporate governance related matters; or\r\n                                        </li>\r\n                                        <li>governmental authorities and regulators, as required under applicable law.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h4>Exercising Rights to Request Access and Request Deletion</h4>\r\n                                    <p>Subject to certain exceptions, California residents have the right to request\r\n                                        access,\r\n                                        deletion\r\n                                        and portability of their personal information as further described in the\r\n                                        Privacy & Cookie\r\n                                        Notice. If you would like to submit a request or have additional questions about\r\n                                        the\r\n                                        personal\r\n                                        information that we have about you, please contact us by contacting us at\r\n                                        privacy@unitedagentservices.com.</p>\r\n\r\n                                    <p>When you submit your request, we will take steps to attempt to verify your\r\n                                        identity. We will\r\n                                        seek to match the information in your request to the personal information we\r\n                                        maintain about\r\n                                        you.\r\n                                        As part of our verification process, we may ask you to submit additional\r\n                                        information, use\r\n                                        identity verification services to assist us, or if you have set up an account on\r\n                                        our\r\n                                        website, we\r\n                                        may ask you to sign in to your account as part of our identity verification\r\n                                        process. Please\r\n                                        understand that, depending on the type of request you submit, to protect the\r\n                                        privacy and\r\n                                        security of your personal information, we will only complete your request when\r\n                                        we are\r\n                                        satisfied\r\n                                        that we have verified your identity to a reasonable degree of certainty.</p>\r\n\r\n                                    <p>We do not discriminate against individuals who exercise their rights under\r\n                                        applicable law.\r\n                                        If we receive a request from an authorized agent, we have the right to verify\r\n                                        with the data\r\n                                        subject that the data subject indeed wants to take the action requested by the\r\n                                        agent and\r\n                                        will do\r\n                                        so by contacting the data subject directly.</p>\r\n\r\n\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box>\r\n                        <div className=\"privacy-policy-footer\">\r\n                            <Footer/>\r\n                        </div>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n\r\n        </>);\r\n}\r\n\r\nexport default Privacy;\r\n\r\n\r\n","import { Grid, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nlet direction = \"ltr\";\r\n// direction = 'rtl';\r\nconst theme = createMuiTheme({\r\n    direction: direction,\r\n    palette: {\r\n        type: \"light\",\r\n    },\r\n});\r\n\r\nconst bigData = [];\r\nfor (let i = 0; i < 1; i++) {\r\n    const d = {\r\n        id: i + 1,\r\n        name: \"Name\" + i,\r\n        surname: \"Surname\" + Math.round(i / 10),\r\n        isMarried: i % 2 ? true : false,\r\n        birthDate: new Date(1987, 1, 1),\r\n        birthCity: 0,\r\n        sex: i % 2 ? \"Male\" : \"Female\",\r\n        type: \"adult\",\r\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n        time: new Date(1900, 1, 1, 14, 23, 35),\r\n    };\r\n    bigData.push(d);\r\n}\r\n\r\nclass ExampleTable extends Component {\r\n    tableRef = React.createRef();\r\n\r\n    colRenderCount = 0;\r\n\r\n    state = {\r\n        text: \"text\",\r\n        selecteds: 0,\r\n        data: [\r\n            {\r\n                id: 1,\r\n                name: \"A1\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 0,\r\n                sex: \"Male\",\r\n                type: \"adult\",\r\n                insertDateTime: \"1994-11-23T08:15:30-05:00\",\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"A2\",\r\n                surname: \"B\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"adult\",\r\n                insertDateTime: \"1994-11-05T13:15:30Z\",\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"A3\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 4,\r\n                name: \"A4\",\r\n                surname: \"Dede Dede Dede Dede Dede Dede Dede Dede\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 3,\r\n            },\r\n            {\r\n                id: 5,\r\n                name: \"A5\",\r\n                surname: \"C\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 6,\r\n                name: \"A6\",\r\n                surname: \"C\",\r\n                isMarried: true,\r\n                birthDate: new Date(1989, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 5,\r\n            },\r\n            {\r\n                id: 11,\r\n                name: \"A1\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 0,\r\n                sex: \"Male\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 21,\r\n                name: \"A2\",\r\n                surname: \"B\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 31,\r\n                name: \"A3\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 41,\r\n                name: \"A4\",\r\n                surname: \"Dede\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 3,\r\n            },\r\n            {\r\n                id: 51,\r\n                name: \"A5\",\r\n                surname: \"C\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 61,\r\n                name: \"A6\",\r\n                surname: \"C\",\r\n                isMarried: true,\r\n                birthDate: new Date(1989, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 5,\r\n            },\r\n            {\r\n                id: 12,\r\n                name: \"A1\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 0,\r\n                sex: \"Male\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 22,\r\n                name: \"A2\",\r\n                surname: \"B\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 32,\r\n                name: \"A3\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 42,\r\n                name: \"A4\",\r\n                surname: \"Dede\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 3,\r\n            },\r\n            {\r\n                id: 52,\r\n                name: \"A5\",\r\n                surname: \"C\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 62,\r\n                name: \"A6\",\r\n                surname: \"C\",\r\n                isMarried: true,\r\n                birthDate: new Date(1989, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 5,\r\n            },\r\n            {\r\n                id: 13,\r\n                name: \"A1\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 0,\r\n                sex: \"Male\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 23,\r\n                name: \"A2\",\r\n                surname: \"B\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 33,\r\n                name: \"A3\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 43,\r\n                name: \"A4\",\r\n                surname: \"Dede\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 3,\r\n            },\r\n            {\r\n                id: 53,\r\n                name: \"A5\",\r\n                surname: \"C\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 63,\r\n                name: \"A6\",\r\n                surname: \"C\",\r\n                isMarried: true,\r\n                birthDate: new Date(1989, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 5,\r\n            },\r\n            {\r\n                id: 14,\r\n                name: \"A1\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 0,\r\n                sex: \"Male\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 24,\r\n                name: \"A2\",\r\n                surname: \"B\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"adult\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 34,\r\n                name: \"A3\",\r\n                surname: \"B\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 1,\r\n            },\r\n            {\r\n                id: 44,\r\n                name: \"A4\",\r\n                surname: \"Dede\",\r\n                isMarried: true,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 3,\r\n            },\r\n            {\r\n                id: 54,\r\n                name: \"A5\",\r\n                surname: \"C\",\r\n                isMarried: false,\r\n                birthDate: new Date(1987, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n            },\r\n            {\r\n                id: 64,\r\n                name: \"A6\",\r\n                surname: \"C\",\r\n                isMarried: true,\r\n                birthDate: new Date(1989, 1, 1),\r\n                birthCity: 34,\r\n                sex: \"Female\",\r\n                type: \"child\",\r\n                insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\r\n                time: new Date(1900, 1, 1, 14, 23, 35),\r\n                parentId: 5,\r\n            },\r\n        ],\r\n        columns: [\r\n            {\r\n                title: \"Adı\",\r\n                field: \"name\",\r\n                filterPlaceholder: \"Adı filter\",\r\n                tooltip: \"This is tooltip text\",\r\n                editPlaceholder: \"This is placeholder\",\r\n                maxWidth: 50,\r\n            },\r\n            {\r\n                title: \"Soyadı\",\r\n                field: \"surname\",\r\n                initialEditValue: \"test\",\r\n                tooltip: \"This is tooltip text\",\r\n                editable: \"never\",\r\n                resizable: false,\r\n            },\r\n            { title: \"Evli\", field: \"isMarried\" },\r\n            {\r\n                title: \"Cinsiyet\",\r\n                field: \"sex\",\r\n                disableClick: true,\r\n                editable: \"onAdd\",\r\n            },\r\n            { title: \"Tipi\", field: \"type\", removable: false, editable: \"never\" },\r\n            { title: \"Doğum Yılı\", field: \"birthDate\", type: \"date\" },\r\n            {\r\n                title: \"Doğum Yeri\",\r\n                field: \"birthCity\",\r\n                lookup: { 34: \"İstanbul\", 0: \"Şanlıurfa\" },\r\n            },\r\n            { title: \"Kayıt Tarihi\", field: \"insertDateTime\", type: \"datetime\" },\r\n            { title: \"Zaman\", field: \"time\", type: \"time\" },\r\n        ],\r\n        remoteColumns: [\r\n            {\r\n                title: \"Avatar\",\r\n                field: \"avatar\",\r\n                render: (rowData) => (\r\n                    <img\r\n                        style={{ height: 36, borderRadius: \"50%\" }}\r\n                        src={rowData.avatar}\r\n                    />\r\n                ),\r\n                tooltip: \"delakjdslkjdaskljklsdaj\",\r\n            },\r\n            { title: \"Id\", field: \"id\" },\r\n            { title: \"First Name\", field: \"first_name\", defaultFilter: \"De\" },\r\n            { title: \"Last Name\", field: \"last_name\" },\r\n        ],\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <div style={{ maxWidth: \"100%\", direction }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                {this.state.selectedRows && this.state.selectedRows.length}\r\n                                <MaterialTable\r\n                                    tableRef={this.tableRef}\r\n                                    columns={this.state.columns}\r\n                                    data={this.state.data}\r\n                                    title=\"Demo Title\"\r\n                                    onFilterChange={(appliedFilter) => {\r\n                                        console.log(\"selected Filters : \", appliedFilter);\r\n                                    }}\r\n                                    // parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n\r\n                                    // cellEditable={{\r\n                                    //   cellStyle: {},\r\n                                    //   onCellEditApproved: (\r\n                                    //     newValue,\r\n                                    //     oldValue,\r\n                                    //     rowData,\r\n                                    //     columnDef\r\n                                    //   ) => {\r\n                                    //     return new Promise((resolve, reject) => {\r\n                                    //       console.log(\"newValue: \" + newValue);\r\n                                    //       setTimeout(resolve, 4000);\r\n                                    //     });\r\n                                    //   },\r\n                                    // }}\r\n                                    options={{\r\n                                        tableLayout: \"fixed\",\r\n                                        columnResizable: true,\r\n                                        headerSelectionProps: {\r\n                                            color: \"primary\",\r\n                                        },\r\n                                        selection: false,\r\n                                        selectionProps: (rowData) => {\r\n                                            rowData.tableData.disabled = rowData.name === \"A1\";\r\n\r\n                                            return {\r\n                                                disabled: rowData.name === \"A1\",\r\n                                                color: \"primary\",\r\n                                            };\r\n                                        },\r\n                                    }}\r\n                                    // editable={{\r\n                                    //   onBulkUpdate: (changedRows) =>\r\n                                    //     new Promise((resolve, reject) => {\r\n                                    //       console.log(changedRows);\r\n                                    //       setTimeout(() => {\r\n                                    //         {\r\n                                    //           /* const data = this.state.data;\r\n                                    //           data.push(newData);\r\n                                    //           this.setState({ data }, () => resolve()); */\r\n                                    //         }\r\n                                    //         resolve();\r\n                                    //       }, 1000);\r\n                                    //     }),\r\n                                    //   onRowAdd: (newData) =>\r\n                                    //     new Promise((resolve, reject) => {\r\n                                    //       setTimeout(() => {\r\n                                    //         {\r\n                                    //           /* const data = this.state.data;\r\n                                    //           data.push(newData);\r\n                                    //           this.setState({ data }, () => resolve()); */\r\n                                    //         }\r\n                                    //         resolve();\r\n                                    //       }, 1000);\r\n                                    //     }),\r\n                                    //   onRowUpdate: (newData, oldData) =>\r\n                                    //     new Promise((resolve, reject) => {\r\n                                    //       setTimeout(() => {\r\n                                    //         {\r\n                                    //           /* const data = this.state.data;\r\n                                    //           const index = data.indexOf(oldData);\r\n                                    //           data[index] = newData;\r\n                                    //           this.setState({ data }, () => resolve()); */\r\n                                    //         }\r\n                                    //         resolve();\r\n                                    //       }, 1000);\r\n                                    //     }),\r\n                                    //   onRowDelete: (oldData) =>\r\n                                    //     new Promise((resolve, reject) => {\r\n                                    //       setTimeout(() => {\r\n                                    //         {\r\n                                    //           /* let data = this.state.data;\r\n                                    //           const index = data.indexOf(oldData);\r\n                                    //           data.splice(index, 1);\r\n                                    //           this.setState({ data }, () => resolve()); */\r\n                                    //         }\r\n                                    //         resolve();\r\n                                    //       }, 1000);\r\n                                    //     }),\r\n                                    // }}\r\n                                    localization={{\r\n                                        body: {\r\n                                            emptyDataSourceMessage: \"No records to display\",\r\n                                            filterRow: {\r\n                                                filterTooltip: \"Filter\",\r\n                                                filterPlaceHolder: \"Filtaaer\",\r\n                                            },\r\n                                        },\r\n                                    }}\r\n                                    onSearchChange={(e) => console.log(\"search changed: \" + e)}\r\n                                    onColumnDragged={(oldPos, newPos) =>\r\n                                        console.log(\r\n                                            \"Dropped column from \" + oldPos + \" to position \" + newPos\r\n                                        )\r\n                                    }\r\n                                    // parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {this.state.text}\r\n                        <button\r\n                            onClick={() => this.tableRef.current.onAllSelected(true)}\r\n                            style={{ margin: 10 }}\r\n                        >\r\n                            Select\r\n                        </button>\r\n                        {/* <MaterialTable\r\n              title={\r\n                <Typography variant=\"h6\" color=\"primary\">\r\n                  Remote Data Preview\r\n                </Typography>\r\n              }\r\n              columns={[\r\n                {\r\n                  title: \"Avatar\",\r\n                  field: \"avatar\",\r\n                  render: (rowData) => (\r\n                    <img\r\n                      style={{ height: 36, borderRadius: \"50%\" }}\r\n                      src={rowData.avatar}\r\n                    />\r\n                  ),\r\n                },\r\n                {\r\n                  title: \"Id\",\r\n                  field: \"id\",\r\n                  filterOnItemSelect: true,\r\n                  filterPlaceholder: \"placeholder\",\r\n                  lookup: {\r\n                    1: \"1\",\r\n                    2: \"2\",\r\n                    3: \"3\",\r\n                    4: \"4\",\r\n                    5: \"5\",\r\n                    6: \"6\",\r\n                    7: \"7\",\r\n                    8: \"8\",\r\n                    9: \"9\",\r\n                    10: \"10\",\r\n                    11: \"11\",\r\n                    12: \"12\",\r\n                  },\r\n                },\r\n                { title: \"First Name\", field: \"first_name\" },\r\n                { title: \"Last Name\", field: \"last_name\" },\r\n              ]}\r\n              options={{\r\n                filtering: true,\r\n                grouping: true,\r\n                groupTitle: (group) => group.data.length,\r\n                searchFieldVariant: \"outlined\",\r\n              }}\r\n              localization={{\r\n                toolbar: {\r\n                  searchPlaceholder: \"Outlined Search Field\",\r\n                },\r\n              }}\r\n              data={(query) =>\r\n                new Promise((resolve, reject) => {\r\n                  let url = \"https://reqres.in/api/users?\";\r\n                  url += \"per_page=\" + query.pageSize;\r\n                  url += \"&page=\" + (query.page + 1);\r\n                  console.log(query);\r\n                  fetch(url)\r\n                    .then((response) => response.json())\r\n                    .then((result) => {\r\n                      resolve({\r\n                        data: result.data,\r\n                        page: result.page - 1,\r\n                        totalCount: result.total,\r\n                      });\r\n                    });\r\n                })\r\n              }\r\n            /> */}\r\n                    </div>\r\n                </MuiThemeProvider>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ExampleTable;\r\n","import React, {Component} from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {Security, SecureRoute, LoginCallback} from '@okta/okta-react';\r\nimport Home from '../okta/Home';\r\nimport Login from '../okta/Login';\r\nimport AddEntity from \"../entity/AddEntity\";\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport UserContextProvider from '../context/UserContext';\r\nimport EntityDetailedPage from '../entity/EntityDetailedPage';\r\nimport SelfDetailedPage from '../entity/SelfDetailedPage';\r\nimport AddContactForm from \"../contact/AddContactForm\";\r\nimport Attachments from \"../attachment/Attachments\";\r\nimport Contacts from \"../contact/Contacts\";\r\nimport AddAttachmentForm from \"../attachment/AddAttachmentForm\";\r\nimport Privacy from \"../privacy/Privacy\";\r\nimport ExampleTable from \"../entity/ExampleTable\";\r\nexport default withRouter(class AppWithRouterAccess extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onAuthRequired = this.onAuthRequired.bind(this);\r\n    }\r\n\r\n    onAuthRequired() {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Security\r\n                issuer={process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default'}\r\n                clientId={process.env.REACT_APP_OKTA_CLIENT_ID}\r\n                redirectUri={window.location.origin + '/implicit/callback/'}\r\n                onAuthRequired={this.onAuthRequired}\r\n                pkce={true}>\r\n                <UserContextProvider>\r\n                    <SecureRoute exact={true} path='/' component={Dashboard}/>\r\n                    <SecureRoute exact={true} path='/home' component={Home}/>\r\n                    <SecureRoute exact={true} path='/entity' component={SelfDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/:id' component={EntityDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/new/add' component={AddEntity}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add' component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add/:id'\r\n                                 component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/attachments' component={Attachments}/>\r\n                    <SecureRoute exact={true} path='/contacts' component={Contacts}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add\" component={AddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add/:id\" component={AddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/table\" component={ExampleTable}/>\r\n                </UserContextProvider>\r\n                <Route exact={true} path='/login'\r\n                       render={() => <Login baseUrl={process.env.REACT_APP_OKTA_BASE_URL}/>}/>\r\n                <Route exact={true} path='/implicit/callback' component={LoginCallback}/>\r\n                <Route exact={true} path='/privacy-policy' component={Privacy}/>\r\n            </Security>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppWithRouterAccess from './components/routes/AppWithRouterAccess';\nimport './App.css'\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AppWithRouterAccess/>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}