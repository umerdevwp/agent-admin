{"version":3,"sources":["components/routes/listItems.js","components/routes/ChildListItems.js","components/routes/ParentListItems.js","components/layout/Footer.js","components/api/OKTA.js","components/api/enitity.crud.js","components/context/UserContext.js","components/layout/Layout.js","components/okta/Home.js","components/okta/OktaSignInWidget.js","components/okta/Login.js","components/entity/TestAutocomplete.js","components/entity/AddEntity.js","components/api/attachment.js","components/entity/ComplianceTaskList.js","components/entity/ContactList.js","components/entity/ChildDetailedPage.js","components/dashboard/Dashboard.js","components/entity/EntityDetailedPage.js","components/entity/SelfDetailedPage.js","components/api/contact.crud.js","components/contact/AddContactForm.js","components/attachment/Attachments.js","components/contact/Contacts.js","components/attachment/AddAttachmentForm.js","components/routes/AppWithRouterAccess.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","link","color","textDecoration","MainListItems","classes","className","to","ListItem","button","ListItemIcon","ListItemText","primary","ChildListItems","ParentListItems","Footer","Typography","variant","align","Link","href","Date","getFullYear","fetchUserProfile","sub","a","fetch","process","headers","Accept","Authorization","response","Promise","resolve","json","ENTITY","entityList","token","JSON","parse","localStorage","getItem","checkRole","eid","bit","tokenOKTA","okta","accessToken","entityDetail","entity","selfEntityDetail","ContactTypeList","email","EntitytypesList","StateRegionList","createEntity","data","method","body","lorexFileUpload","UserContext","createContext","drawerState","role","title","profile","attributes","loading","errorList","currentEntity","Consumer","withOktaAuth","props","useOktaAuth","authState","authService","useState","setTitle","setDrawerState","setToken","setProfile","setAttributes","appLoader","setAppLoader","setErrorList","setCurrentEntity","setRole","React","useEffect","undefined","initialUtliz","length","map","value","index","setTimeout","removeError","removeItem","getToken","console","log","isAuthenticated","getUserProfile","result_profile","getUserAttributes","result_attributes","getUserRole","setInterval","tokenResult","getUser","UserData","AllAttributes","organization_parent","toLowerCase","organization","get_role","status","setItem","addError","message","array","splice","Provider","addTitle","changeDrawer","updateCurrentEntity","children","theme","root","display","toolbar","paddingRight","backgroundColor","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","chevronLeftIcon","flexGrow","textTransform","fontSize","drawerPaper","position","whiteSpace","breakpoints","up","flexShrink","drawerPaperClose","overflowX","spacing","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","listColor","useContext","matches","useMediaQuery","maxWidth","isPending","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","openMenu","Boolean","maxSnack","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","event","currentTarget","name","anchorOrigin","vertical","horizontal","id","keepMounted","open","onClose","TransitionComponent","Fade","getContentAnchorEl","MenuItem","logout","Drawer","ModalProps","Divider","List","Container","Box","pt","size","login","bind","this","Component","OktaSignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","features","showPasswordToggleOnSignInPage","clientId","redirectUri","authScheme","logo","authParams","issuer","responseType","scopes","authorizeUrl","renderEl","onSuccess","onError","remove","Copyright","paperContainer","marginTop","avatar","margin","palette","secondary","main","form","submit","Login","res","redirect","sessionToken","session","err","pathname","style","mt","withStyles","smartyStreetsSharedCredentials","SmartyStreetsSDK","SharedCredentials","autoCompleteClient","ClientBuilder","buildUsAutocompleteClient","IntegrationDownshift","left","right","chip","inputRoot","flexWrap","inputInput","divider","suggestions","setSuggestions","setValue","getFinal","setGetFinal","sendDatatoParent","resetState","reset","addressObject","smartyHandler","Lookup","target","lookup","send","then","add","result","selectedItem","onStateChange","changes","hasOwnProperty","newObject","find","text","inputValue","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","isOpen","clearSelection","getRootProps","onInputValueChange","placeholder","onBlur","onFocus","inputProps","disabled","error","required","helperText","InputProps","ref","other","TextField","onChange","inputRef","input","renderInput","fullWidth","label","InputLabelProps","shrink","Paper","square","showEmpty","deburr","trim","inputLength","count","filter","suggestion","keep","slice","getSuggestions","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","selected","key","fontWeight","renderSuggestion","item","client","buildUsStreetApiClient","useStylesFacebook","top","bottom","animationDuration","backButton","instructions","marginBottom","adjustment","companyinfo","listStyle","minHeight","listItem","textField","textFieldOther","textFieldCity","textFieldtwofield","selectField","dense","checkbox","fileUpapiLoading","submitButton","float","restButton","loader","success","green","fileError","dark","info","warning","amber","icon","iconVariant","opacity","paddingLeft","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","MySnackbarContentWrapper","Icon","SnackbarContent","elevation","aria-describedby","action","setOpen","userAgree","setUserAgree","setAddressObject","addressValue","setAddressValue","addressReset","setAddressReset","setIsValidAddress","apiLoading","setApiLoading","setError","setContactType","FillingStructureData","setFillingStructureData","StateRegion","setStateRegion","successMessage","setSuccessMessage","fiscal","inputName","setInputName","inputComplianceOnly","setInputComplianceOnly","inputFillingState","setInputFillingState","inputFillingStructure","setInputFillingStructure","inputFormationDate","setInputFormationDate","inputFiscalDate","setInputFiscalDate","inputNotificationEmail","setInputNotificationEmail","inputNotificationPhone","setInputNotificationPhone","inputNotificationAddress","setInputNotificationAddress","inputEIN","setInputEIN","inputNotificationCity","setInputNotificationCity","inputNotificationState","setInputNotificationState","inputNotificationZip","setInputNotificationZip","inputFiling","setInputFiling","inputBusinessPurpose","setInputBusinessPurpose","inputForeign","setInputForeign","inputFileName","setInputFileName","inputFileSize","setInputFileSize","handleClose","iAgree","handleOnSubmit","FacebookProgress","CircularProgress","thickness","disableShrink","city","state","fetchDataforDropdownsContactTypeList","fetchDataforDropdownsFillingStructureData","fetchDataforDropdownsStateRegion","ContactTypeListLocal","stringify","EntitytypesListLocal","StateRegionListLocal","fileChange","e","files","formData","FormData","append","filename","record_id","file_size","file","resetForm","addressCheck","lookup1","street","streetLine","zipCode","valid","utils","isValid","lookups","createEntitysubmit","userResponse","preventDefault","formsubmit","parseInt","toString","zip","field_error","Object","keys","forEach","window","scrollTo","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Grid","onSubmit","noValidate","autoComplete","FormGroup","row","FormControlLabel","checked","control","Checkbox","labelPlacement","FormControl","InputLabel","htmlFor","Select","anObjectMapped","code","FormHelperText","format","type","CustomFileInput","File","invalid","AttachmentsList","zoho_id","attachFiles","taskUpdate","table","minWidth","ComplianceTaskList","setLoading","setStatus","taskID","setTaskID","taskUpdateController","update","xs","isLoading","actions","tooltip","rowData","options","selection","actionsColumnIndex","columns","withRouter","history","useHistory","isFreeAction","push","url","errorMessage","breadcrumbsDiv","breadcrumbsInner","baseColor","entitydetail","setEntitydetail","contactList","setContactList","attachmentList","setAttachmentList","taskList","setTaskList","compliance","setComplainace","componentLoading","setComponentLoading","fetchDetailedProfile","detailedView","reject","contacts","attachments","tasks","errors","detail","updateComplianceTable","contactData","field","taskData","attachmentData","editable","render","file_id","sm","Card","CardHeader","Avatar","gutterBottom","CardContent","formationDate","expirationDate","Skeleton","subheader","registerAgent","fileAs","address","address2","zipcode","shippingStreet","shippingCity","shippingState","shippingCode","textAlign","entitydata","setEntityData","asyncDataFetch","fetchData","results","location","reload","settingData","parentChildData","rows","parentId","defaultExpanded","entity_id","match","params","Breadcrumbs","goBack","createContact","fileUploading","contactType","inputContactFirstName","setInputContactFirstName","inputContactLastName","setInputLastName","inputContactEmail","inputContactPhone","inputContactStreet","inputContactType","setInputNotificationContactType","inputContactCity","inputContactState","inputContactZipcode","isValidAddress","setErrorMessage","addressValueChangeHandler","contactsCreate","updateStates","native","fetchAttachmentData","documents","dummyData","listcontacts","setListcontacts","dummyDataa","formStyle","onAuthRequired","origin","pkce","exact","path","Dashboard","Home","SelfDetailedPage","EntityDetailedPage","AddEntity","AddContactForm","Attachments","Contacts","AddAttachmentForm","LoginCallback","App","hostname","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d3ca4608.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function MainListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ChildListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            {/*<Link className={classes.link} to='/entity/new/add'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <PeopleIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Add entity\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            {/*<Link className={classes.link} to='/contacts'>*/}\n            {/*    <ListItem button>*/}\n            {/*        <ListItemIcon>*/}\n            {/*            <ContactPhoneOutlinedIcon color=\"primary\"/>*/}\n            {/*        </ListItemIcon>*/}\n            {/*        <ListItemText primary=\"Contacts\"/>*/}\n            {/*    </ListItem>*/}\n            {/*</Link>*/}\n\n        </div>)\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function ParentListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n","export const fetchUserProfile = async (sub) => {\r\n\r\n    const response = await fetch(process.env.REACT_APP_OKTA_BASE_URL + `api/v1/users/${sub}`, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            Accept: 'application/json',\r\n            Authorization: `SSWS ${process.env.REACT_APP_OKTA_API_TOKEN}`,\r\n        }\r\n    });\r\n    return Promise.resolve(response.json());\r\n\r\n\r\n}\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\nconst LOREX_TOKEN = process.env.REACT_APP_LOREX_TOKEN;\r\nconst LOREX_API_HOST = process.env.REACT_APP_LOREX_API_HOST;\r\n\r\n\r\n\r\n// const LOREX_TOKEN = '3cJe5YXiSBGUAqYd0uFC2cKYvgfBIUswmXTudN3HQfvzIGvddfVYjPmakGOkGVM9g5YRKJR2FF9iYuZQ0GsbGw';\r\n// const LOREX_API_HOST = 'https://lorax-api-sandbox.filemystuff.com';\r\nexport const LOGIN_URL = \"api/auth/login\";\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ENTITY = HOST;\r\n\r\n\r\n\r\nexport const ME_URL = \"api/me\";\r\n\r\nexport const entityList = async (token) => {\r\n\r\n\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Entity/getChildAccount`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const checkRole = async (eid,bit, tokenOKTA) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    var response = '';\r\n    if(okta) {\r\n        if(bit === 1) {\r\n           response = await fetch(`${ENTITY}/entity/role?eid=${eid}&bit=${bit}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': tokenOKTA,\r\n\r\n                }\r\n            });\r\n        }\r\n        if(bit === 0) {\r\n         response = await fetch(`${ENTITY}/entity/role?eid=${eid}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkAdmin = async (zoho_id, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/admin_api/checkadmin/?zoho_id=${zoho_id}&email=${email}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const entityDetail = async (entity) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview/?eid=${entity}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const selfEntityDetail = async () => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const ContactTypeList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/ContactTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const EntitytypesList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/EntityTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization':okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const StateRegionList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/States/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createEntity = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const lorexFileUpload = async (data) => {\r\n\r\n\r\n    // console.log('LOREX_TOKEN',LOREX_TOKEN);\r\n    // console.log('LOREX_URL',`${LOREX_API_HOST}/api/v1/upload`);\r\n    // console.log('LOREX_URL',HOST);\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${LOREX_API_HOST}/api/v1/upload`, {\r\n            method: 'post',\r\n            headers: {\r\n                'authorization': LOREX_TOKEN,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const testcall = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch('https://apidev.youragentservices.com/api/entity/add', {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {createContext, useState} from 'react'\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport {fetchUserProfile} from \"../api/OKTA\";\r\nimport {checkRole} from '../api/enitity.crud';\r\n\r\n\r\nexport const UserContext = createContext(\r\n    {\r\n        drawerState: true,\r\n        role: '',\r\n        title: '',\r\n        token: '',\r\n        profile: '',\r\n        attributes: [],\r\n        loading: false,\r\n        errorList:[],\r\n        currentEntity:[]\r\n    }\r\n);\r\n\r\nexport const UserConsumer = UserContext.Consumer;\r\n\r\nfunction UserContextProvider(props) {\r\n    const {authState, authService} = useOktaAuth();\r\n    const [title, setTitle] = useState('');\r\n    const [drawerState, setDrawerState] = useState(true);\r\n    const [token, setToken] = useState('');\r\n    const [profile, setProfile] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    const [appLoader, setAppLoader] = useState({loading: false});\r\n    const [errorList, setErrorList] = useState([]);\r\n    const [currentEntity, setCurrentEntity] = useState([]);\r\n    const [role, setRole] = useState({});\r\n    React.useEffect(() => {\r\n        const okta = localStorage.getItem('okta-token-storage');\r\n        if (okta !== '{}' && okta !== null && okta !== undefined) {\r\n\r\n            initialUtliz();\r\n        }\r\n    }, []);\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if (errorList !== undefined || errorList.length !== 0) {\r\n            errorList.map((value, index) => {\r\n               setTimeout(()=>{\r\n                   removeError(index);\r\n               }, 6000)\r\n            })\r\n        }\r\n\r\n    },[errorList])\r\n\r\n\r\n    const initialUtliz = async () => {\r\n        localStorage.removeItem('role');\r\n        const tokenOKTA = await getToken();\r\n        console.log('Auth in Context',authState.isAuthenticated);\r\n        // if(tokenOKTA === null){\r\n        //  authService.logout('/');\r\n        // }\r\n        const result_profile = await getUserProfile();\r\n        const result_attributes = await getUserAttributes(result_profile);\r\n        if (result_attributes) {\r\n            await getUserRole(result_attributes.profile, tokenOKTA);\r\n        }\r\n\r\n        setInterval(()=>{\r\n            setAppLoader({...appLoader, loading: true});\r\n        },4000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const getToken = async () => {\r\n        const tokenResult = await authState.accessToken;\r\n        setToken(tokenResult);\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserProfile = async () => {\r\n\r\n        const tokenResult = await authService.getUser();\r\n        if (tokenResult) {\r\n            await setProfile({...profile, profile: tokenResult});\r\n        }\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserAttributes = async (UserData) => {\r\n        if (UserData) {\r\n            const AllAttributes = await fetchUserProfile(UserData.sub);\r\n            if (AllAttributes) {\r\n                await setAttributes({...attributes, attributes: AllAttributes.profile})\r\n            }\r\n            return Promise.resolve(AllAttributes);\r\n        }\r\n    }\r\n\r\n    const getUserRole = async (profile, tokenOKTA) => {\r\n        var organization_parent = '';\r\n        if (profile.organization_parent) {\r\n            const bit = profile.organization_parent.toLowerCase();\r\n            if (bit === 'yes') {\r\n                organization_parent = 1;\r\n            }\r\n        }\r\n        try {\r\n            const get_role = await checkRole(profile.organization, organization_parent ? organization_parent : 0, tokenOKTA);\r\n\r\n            if (get_role) {\r\n                if (get_role.status === true) {\r\n                    await localStorage.setItem('role', get_role.data.role);\r\n                    return Promise.resolve(setRole({...role, role: get_role.data.role}));\r\n                }\r\n                if (get_role.status === false) {\r\n                    return Promise.resolve(addError(get_role.message));\r\n                }\r\n            }\r\n\r\n\r\n            if (get_role.message) {\r\n                addError(get_role.message)\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addError = (data) => {\r\n        setErrorList(errorList => [...errorList, data])\r\n    }\r\n\r\n    const addTitle = (data) => {\r\n        setTitle(data);\r\n    }\r\n\r\n    const updateCurrentEntity = (data) => {\r\n         setCurrentEntity(data)\r\n    }\r\n\r\n\r\n    const removeError = (index) => {\r\n        var array = [...errorList]; // make a separate copy of the array\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            setErrorList(array)\r\n        }\r\n\r\n    }\r\n\r\n    const changeDrawer = (data) => {\r\n        setDrawerState(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                ...token,\r\n                ...profile,\r\n                ...attributes,\r\n                ...appLoader,\r\n                ...role,\r\n                title,\r\n                errorList,\r\n                addError,\r\n                addTitle,\r\n                drawerState,\r\n                changeDrawer,\r\n                removeError,\r\n                updateCurrentEntity,\r\n                currentEntity\r\n            }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(UserContextProvider);\r\n","import React, {useContext} from 'react';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MainListItems from '../routes/listItems';\r\nimport ChildListItems from '../routes/ChildListItems';\r\nimport ParentListItems from '../routes/ParentListItems';\r\nimport Footer from './Footer';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport {SnackbarProvider} from 'notistack';\r\n// import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {useOktaAuth, withOktaAuth} from \"@okta/okta-react\";\r\n\r\nimport {SemipolarLoading} from 'react-loadingg';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        backgroundColor: '#1e1e2d'\r\n    },\r\n    toolbarIcon: {\r\n        // color: '#434d6b',\r\n        // backgroundColor: '#434d6b',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: '#ffffff',\r\n        // backgroundColor: '#ffffff',\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n\r\n    chevronLeftIcon: {\r\n        color: '#ffffff'\r\n    },\r\n\r\n    title: {\r\n        marginLeft: 10,\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n\r\n    button: {\r\n        textTransform: \"none\",\r\n        fontSize: 14\r\n    },\r\n    drawerPaper: {\r\n\r\n        backgroundColor: '#1e1e2d',\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        backgroundColor: '#f0f0f6'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n    listColor: {\r\n        color: \"#ffffff\"\r\n    }\r\n\r\n\r\n}));\r\n\r\nexport default withOktaAuth(function Layout(props) {\r\n    const {authState} = useOktaAuth();\r\n    const {role, title, drawerState, changeDrawer, profile} = useContext(UserContext);\r\n\r\n    // const theme = useTheme();\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery({maxWidth: 767});\r\n    // const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n\r\n    React.useEffect(() => {\r\n        console.log('Auth', authState.isAuthenticated);\r\n        console.log('isPending', authState.isPending)\r\n        if (!matches) {\r\n            changeDrawer(true);\r\n        }\r\n        if (matches) {\r\n            changeDrawer(false);\r\n        }\r\n    }, [matches])\r\n    const handleDrawerOpen = () => {\r\n        changeDrawer(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        changeDrawer(false);\r\n    };\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {role ?\r\n                <SnackbarProvider maxSnack={3}>\r\n                    <div className={classes.root}>\r\n                        <CssBaseline/>\r\n                        <AppBar position=\"absolute\"\r\n                                className={clsx(classes.appBar, drawerState && classes.appBarShift)}>\r\n\r\n                            <Toolbar className={classes.toolbar}>\r\n                                <IconButton\r\n                                    edge=\"start\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={handleDrawerOpen}\r\n                                    className={clsx(classes.menuButton, drawerState && classes.menuButtonHidden)}\r\n                                >\r\n\r\n                                    <MenuIcon/>\r\n                                </IconButton>\r\n                                <Typography component=\"h1\" variant=\"h6\" noWrap className={classes.title}>\r\n                                    {title}\r\n                                </Typography>\r\n                                {/*<IconButton color=\"inherit\">*/}\r\n                                {/*    <Badge badgeContent={4} color=\"secondary\">*/}\r\n                                {/*        <NotificationsIcon/>*/}\r\n                                {/*    </Badge>*/}\r\n                                {/*</IconButton>*/}\r\n\r\n                                <IconButton color=\"inherit\" onClick={handleClick}>\r\n                                    <Typography variant=\"h5\" className={clsx(classes.title, classes.button)}>\r\n                                        Hi, {profile.name ? profile.name : ''}\r\n                                    </Typography>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    anchorOrigin={{\r\n                                        vertical: \"bottom\",\r\n                                        horizontal: \"right\"\r\n                                    }}\r\n                                    id=\"menu-list-grow\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={openMenu}\r\n                                    onClose={handleClose}\r\n                                    TransitionComponent={Fade}\r\n                                    getContentAnchorEl={null}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        props.authService.logout('/');\r\n                                    }}>Logout</MenuItem>\r\n                                </Menu>\r\n\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <Drawer\r\n                            variant=\"permanent\"\r\n                            classes={{\r\n                                paper: clsx(classes.drawerPaper, !drawerState && classes.drawerPaperClose),\r\n                            }}\r\n                            open={drawerState}\r\n                            onClose={handleDrawerToggle}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            <div className={classes.toolbarIcon}>\r\n                                <Typography component=\"h3\" variant=\"h6\" color=\"inherit\" noWrap\r\n                                            className={classes.title}>\r\n                                    AgentAdmin\r\n                                </Typography>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    <ChevronLeftIcon className={classes.chevronLeftIcon}/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider/>\r\n                            {role === 'Administrator' ?\r\n                                <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                            {role === 'Child Entity' ?\r\n                                <List className={classes.listColor}><ChildListItems/></List> : ''}\r\n\r\n                            {role === 'Parent Organization' ?\r\n                                <List className={classes.listColor}><ParentListItems/></List> : ''}\r\n\r\n                        </Drawer>\r\n                        <main className={classes.content}>\r\n                            <div className={classes.appBarSpacer}/>\r\n                            <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n                                {props.children}\r\n\r\n                                <Box pt={4}>\r\n                                    <Footer/>\r\n                                </Box>\r\n                            </Container>\r\n                        </main>\r\n                    </div>\r\n                </SnackbarProvider>\r\n                : <SemipolarLoading className={'Test'} size={'large'} color={'#1e1e2d'}/>}\r\n\r\n        </>\r\n\r\n    );\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport Layout from \"../layout/Layout\";\r\n\r\nexport default withOktaAuth(class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    async login() {\r\n        this.props.authService.login();\r\n    }\r\n\r\n    async logout() {\r\n        this.props.authService.logout('/');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.authState.isPending) return null;\r\n\r\n        const button = this.props.authState.isAuthenticated ?\r\n            <button onClick={this.logout}>Logout</button> :\r\n            <button onClick={this.login}>Login</button>;\r\n\r\n        return (\r\n            <Layout>\r\n            <div>\r\n                <Link to='/'>Home</Link><br/>\r\n                <Link to='/protected'>Protected</Link><br/>\r\n                <Link to='/dashboard'>Dashboard</Link><br/>\r\n                {button}\r\n            </div>\r\n            </Layout>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nexport default class OktaSignInWidget extends Component {\r\n    componentDidMount() {\r\n        const el = ReactDOM.findDOMNode(this);\r\n        this.widget = new OktaSignIn({\r\n            baseUrl: process.env.REACT_APP_OKTA_BASE_URL,\r\n            features: {\r\n                // idpDiscovery: true,\r\n                showPasswordToggleOnSignInPage: true\r\n            },\r\n            // idps: [\r\n            //     {type: process.env.REACT_APP_OKTA_IDPS_TYPE, id: process.env.REACT_APP_OKTA_IDPS_ID},\r\n            // ],\r\n            clientId: process.env.REACT_APP_OKTA_CLIENT_ID,\r\n            redirectUri: process.env.REACT_APP_OKTA_REDIRECT_URI,\r\n            authScheme: 'OAUTH2',\r\n            logo: '/media/agentadmin/logo/aa_full.png',\r\n            authParams: {\r\n                issuer: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default',\r\n                display: 'page',\r\n                responseType: ['id_token', 'token'],\r\n                scopes: ['openid', 'email', 'profile', 'address', 'phone'],\r\n                authorizeUrl: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default/v1/authorize',\r\n            },\r\n\r\n        });\r\n        this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.widget.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div/>;\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography className={'copyright'} variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paperContainer: {\r\n        backgroundColor: '#000000'\r\n    },\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    onSuccess(res) {\r\n        if (res.status === 'SUCCESS') {\r\n            return this.props.authService.redirect({\r\n                sessionToken: res.session.token\r\n            });\r\n        } else {\r\n            // The user can be in another authentication state that requires further action.\r\n            // For more information about these states, see:\r\n            //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n        }\r\n    }\r\n\r\n    onError(err) {\r\n        console.log('error logging in', err);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        if (this.props.authState.isPending && this.props.authState.isAuthenticated) return null;\r\n        return this.props.authState.isAuthenticated ?\r\n            <Redirect to={{pathname: '/'}}/> :\r\n\r\n            <div className={'paperContainer'}>\r\n                <Particles   style={{\r\n                    width: '100%',\r\n                    position:'absolute'\r\n                }} className={'particles'} />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Box className={'okta-custom'} mt={3}>\r\n                            <OktaSignInWidget\r\n                                baseUrl={this.props.baseUrl}\r\n                                onSuccess={this.onSuccess}\r\n                                onError={this.onError}/>\r\n                        </Box>\r\n                    </div>\r\n                    <Box>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(useStyles)(withOktaAuth(Login));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport deburr from 'lodash.deburr';\r\nimport Downshift from 'downshift';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst autoCompleteClientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nconst autoCompleteClient = autoCompleteClientBuilder.buildUsAutocompleteClient();\r\n\r\n\r\n\r\n\r\nexport default function IntegrationDownshift(props) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        container: {\r\n            flexGrow: 1,\r\n            position: 'relative',\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n            marginTop: theme.spacing(1),\r\n            left: 0,\r\n            right: 0,\r\n            width: props.width ?? props.width,\r\n        },\r\n        chip: {\r\n            margin: theme.spacing(0.5, 0.25),\r\n        },\r\n        inputRoot: {\r\n            flexWrap: 'wrap',\r\n        },\r\n        inputInput: {\r\n            width: 'auto',\r\n            flexGrow: 1,\r\n        },\r\n        divider: {\r\n            height: theme.spacing(2),\r\n        },\r\n    }));\r\n    const [suggestions, setSuggestions] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [getFinal, setGetFinal] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        sendDatatoParent();\r\n    },[getFinal,value])\r\n\r\n    React.useEffect(() => {\r\n        resetState();\r\n    },[props.reset])\r\n\r\n    const resetState = () => {\r\n        if(props.reset === 'reset') {\r\n            setValue('');\r\n            setGetFinal([]);\r\n        }\r\n    }\r\n\r\n    const sendDatatoParent = () => {\r\n        // if(props.reset == 'reset') {\r\n        //     setSuggestions([]);\r\n        //     setValue('');\r\n        //     setGetFinal([]);\r\n        // }\r\n        // const [addressobject, addressvalue] = props;\r\n        if(getFinal !== undefined && getFinal.length !== 0) {\r\n            props.addressObject(getFinal)\r\n        } else {\r\n            props.addressObject(value)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleStateChange = changes => {\r\n        if (changes.hasOwnProperty('selectedItem')) {\r\n            setValue(changes.selectedItem);\r\n            const value = changes.selectedItem;\r\n            const newObject = suggestions.find((value) => value.text === changes.selectedItem);\r\n            setGetFinal(newObject);\r\n        } else if (changes.hasOwnProperty('inputValue')) {\r\n            setGetFinal([]);\r\n            setValue(changes.inputValue);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const smartyHandler = async (event) => {\r\n        const lookup = await new SmartyStreetsSDK.usAutocomplete.Lookup(event.target.value);\r\n        autoCompleteClient.send(lookup)\r\n            .then(response => {\r\n                const add = response.result\r\n                setSuggestions(add);\r\n            })\r\n    }\r\n\r\n\r\n    function renderInput(inputProps) {\r\n        const {disabled, required, error, className, helperText} = props\r\n        const {InputProps, classes, ref, ...other} = inputProps;\r\n        return (\r\n            <TextField\r\n\r\n                className={className}\r\n                disabled={disabled}\r\n                required\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={(event) => smartyHandler(event)}\r\n                InputProps={{\r\n                    inputRef: ref,\r\n                    classes: {\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    },\r\n                    ...InputProps,\r\n                }}\r\n                {...other}\r\n            />\r\n        );\r\n    }\r\n\r\n    function renderSuggestion(suggestionProps) {\r\n\r\n        const {suggestion, index, itemProps, highlightedIndex, selectedItem} = suggestionProps;\r\n        const isHighlighted = highlightedIndex === index;\r\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n        return (\r\n            <MenuItem\r\n\r\n                {...itemProps}\r\n                selected={isHighlighted}\r\n                key={suggestion.text}\r\n                component=\"div\"\r\n                style={{fontWeight: isSelected ? 500 : 400,}}>\r\n                {suggestion.text}\r\n            </MenuItem>\r\n        );\r\n    }\r\n\r\n    function getSuggestions(value, {showEmpty = false} = {}) {\r\n        const inputValue = deburr(value.trim()).toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        let count = 0;\r\n\r\n        return inputLength === 0 && !showEmpty\r\n            ? inputValue\r\n            : suggestions.filter(suggestion => {\r\n                const keep =\r\n                    count < 5 && suggestion.text.slice(0, inputLength).toLowerCase() === inputValue;\r\n                if (keep) {\r\n                    count += 1;\r\n                }\r\n                return keep;\r\n            });\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div   className={classes.root}>\r\n            <Downshift selectedItem={value} onStateChange={handleStateChange} id=\"downshift-simple\">\r\n                {({\r\n                      getInputProps,\r\n                      getItemProps,\r\n                      getLabelProps,\r\n                      getMenuProps,\r\n                      highlightedIndex,\r\n                      inputValue,\r\n                      isOpen,\r\n                      selectedItem,\r\n                      clearSelection,\r\n                      getRootProps,\r\n                      onInputValueChange,\r\n                  }) => {\r\n                    const {onBlur, onFocus, ...inputProps} = getInputProps({\r\n                        placeholder: 'Address',\r\n                    });\r\n                    return (\r\n                        <div className={classes.container}>\r\n                            {renderInput({\r\n                                fullWidth: true,\r\n                                classes,\r\n                                label: 'Address',\r\n                                InputLabelProps: getLabelProps({shrink: true}),\r\n                                InputProps: {onBlur, onFocus},\r\n                                inputProps,\r\n                            })}\r\n\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square>\r\n                                        {inputValue !== '' ? getSuggestions(inputValue)?.map((suggestion, index) =>\r\n                                            renderSuggestion({\r\n                                                suggestion,\r\n                                                index,\r\n                                                itemProps: getItemProps({item: suggestion.text, index}),\r\n                                                highlightedIndex,\r\n                                                selectedItem,\r\n\r\n                                            }),\r\n                                        ) : null}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Downshift>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Layout from \"../layout/Layout\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {\r\n    ContactTypeList,\r\n    EntitytypesList,\r\n    StateRegionList,\r\n    createEntity,\r\n    lorexFileUpload\r\n} from \"../api/enitity.crud\";\r\n\r\nimport utils from \"smartystreets-javascript-sdk-utils\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport {UserContext} from '../context/UserContext';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n\r\n    label: {\r\n        fontSize: 14\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUpapiLoading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\nfunction AddEntity() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes,addTitle, loading } = useContext(UserContext);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [apiLoading, setApiLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [FillingStructureData, setFillingStructureData] = React.useState([])\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    const [successMessage, setSuccessMessage] = React.useState(false);\r\n    var d = new Date();\r\n    const fiscal = d.getFullYear() + '-12-31'\r\n\r\n    //form state\r\n    const [inputName, setInputName] = React.useState({value: '', error: ' ',});\r\n    const [inputComplianceOnly, setInputComplianceOnly] = React.useState({value: false, error: ' '});\r\n    const [inputFillingState, setInputFillingState] = React.useState({value: '', error: ' '});\r\n    const [inputFillingStructure, setInputFillingStructure] = React.useState({value: '', error: ' '});\r\n    const [inputFormationDate, setInputFormationDate] = React.useState({value: '', error: ' '});\r\n    const [inputFiscalDate, setInputFiscalDate] = React.useState({value: fiscal, error: ' '});\r\n\r\n\r\n    const [inputNotificationEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationAddress, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputEIN, setInputEIN] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationZip, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputBusinessPurpose, setInputBusinessPurpose] = React.useState({value: '', error: ' '});\r\n    const [inputForeign, setInputForeign] = React.useState({value: false, error: ' '});\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setApiLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true)\r\n\r\n    };\r\n\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                console.log('City', addressObject.city);\r\n                console.log('State', addressObject.state);\r\n                setInputNotificationCity({...inputNotificationCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputNotificationState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(loading === true) {\r\n            addTitle('Add New Entity');\r\n            fetchDataforDropdownsContactTypeList()\r\n            fetchDataforDropdownsFillingStructureData();\r\n            fetchDataforDropdownsStateRegion();\r\n        }\r\n    }, [loading]);\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await ContactTypeList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n                setContactType(response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fetchDataforDropdownsFillingStructureData = async () => {\r\n\r\n        var EntitytypesListLocal = await JSON.parse(localStorage.getItem(\"EntitytypesList\"));\r\n        if (EntitytypesListLocal) {\r\n            setFillingStructureData(EntitytypesListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await EntitytypesList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"EntitytypesList\", JSON.stringify(response.data));\r\n                setFillingStructureData(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await StateRegionList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n                setStateRegion(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = (value) => {\r\n        setAddressValue(value);\r\n    }\r\n\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setApiLoading(true);\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n                setInputFileSize({...inputFileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setInputFileName({...inputFileName, value: filename});\r\n                    setApiLoading(false);\r\n                }\r\n            } else {\r\n                setInputFiling({...inputFiling, error: response.message.file[0]});\r\n                setApiLoading(false);\r\n            }\r\n        } else {\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n\r\n                setInputComplianceOnly({value: false, error: ' '})\r\n                setInputFillingState({value: '', error: ' '});\r\n                setInputFillingStructure({value: '', error: ' '});\r\n                setInputFormationDate({value: '', error: ' '});\r\n                setInputFiscalDate({value: fiscal, error: ' '});\r\n                setInputName({value: '', error: ' '});\r\n                setInputNotificationEmail({value: '', error: ' '});\r\n                setInputNotificationPhone({value: '', error: ' '});\r\n                setInputNotificationAddress({value: '', error: ' '});\r\n                setInputNotificationCity({value: '', error: ' '});\r\n                setInputNotificationState({value: '', error: ' '});\r\n                setInputNotificationZip({value: '', error: ' '});\r\n                setInputEIN({value: '', error: ' ', success: ' '});\r\n                setInputFiling({value: '', error: ' ', success: ' '})\r\n                setInputBusinessPurpose({value: '', error: ' '})\r\n                setInputForeign({value: false, error: ' '});\r\n                setInputFileName({value: '', error: ' ', success: ' '});\r\n                setInputFileSize({value: '', error: ' ', success: ' '});\r\n\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const addressCheck = async (event) => {\r\n\r\n\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputNotificationCity.value;\r\n        lookup1.state = inputNotificationState.value;\r\n        lookup1.zipCode = inputNotificationZip.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                createEntitysubmit(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n        event.preventDefault();\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        var formsubmit = true;\r\n        if (inputEIN.value) {\r\n            var value = parseInt(inputEIN.value)\r\n            if (typeof value === 'number') {\r\n                if (value.toString().length === 9) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (inputNotificationZip.value) {\r\n            var zip = parseInt(inputNotificationZip.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setApiLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setApiLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputNotificationCity.value && inputNotificationState.value && inputNotificationZip.value !== '') {\r\n                    formsubmit = false;\r\n                    const response = addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            createEntitysubmit(event, userResponse);\r\n        }\r\n    }\r\n\r\n\r\n    const createEntitysubmit = async (event) => {\r\n\r\n        setApiLoading(true);\r\n        setAddressReset('');\r\n        setInputFiling({...inputFiling, value: '', success: ' ', error: ' '});\r\n        setInputFileSize({...inputFileSize, value: ''});\r\n        setInputFileName({...inputFileName, value: ''});\r\n        setInputName({...inputName, error: ' '})\r\n        setInputComplianceOnly({...inputComplianceOnly, error: ' '})\r\n        setInputFillingState({...inputFillingState, error: ' '})\r\n        // setInputFirstName({...inputFirstName, error: ' '})\r\n        // setInputLastName({...inputLastName, error: ' '})\r\n        setInputFillingStructure({...inputFillingStructure, error: ' '})\r\n        setInputFormationDate({...inputFormationDate, error: ' '})\r\n        setInputFiscalDate({...inputFiscalDate, error: ' '})\r\n        setInputNotificationEmail({...inputNotificationEmail, error: ' '})\r\n        setInputNotificationPhone({...inputNotificationPhone, error: ' '})\r\n        setInputNotificationAddress({...inputNotificationAddress, error: ' '})\r\n        setInputNotificationCity({...inputNotificationCity, error: ' '})\r\n        setInputNotificationState({...inputNotificationState, error: ' '})\r\n        setInputNotificationZip({...inputNotificationZip, error: ' '})\r\n        setInputBusinessPurpose({...inputBusinessPurpose, error: ' '})\r\n        setInputEIN({...inputEIN, error: ' '})\r\n        setInputForeign({...inputForeign, error: ' '});\r\n        setInputFileSize({...inputFileSize, error: ' '})\r\n        let formData = new FormData();\r\n\r\n        formData.append('inputName', inputName.value)\r\n        formData.append('inputComplianceOnly', inputComplianceOnly.value)\r\n        formData.append('inputForeign', inputForeign.value)\r\n        formData.append('inputFillingState', inputFillingState.value)\r\n        formData.append('inputFillingStructure', inputFillingStructure.value)\r\n        formData.append('inputFormationDate', inputFormationDate.value)\r\n        formData.append('inputFiscalDate', inputFiscalDate.value)\r\n        // formData.append('inputFirstName', inputFirstName.value)\r\n        // formData.append('inputLastName', inputLastName.value)\r\n        formData.append('inputNotificationEmail', inputNotificationEmail.value)\r\n        formData.append('inputNotificationPhone', inputNotificationPhone.value)\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputNotificationAddress', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputNotificationAddress', addressObject)\r\n        }\r\n        formData.append('inputEIN', inputEIN.value)\r\n\r\n        if (inputNotificationCity.value) {\r\n            formData.append('inputNotificationCity', inputNotificationCity.value);\r\n        } else {\r\n            formData.append('inputNotificationCity', '');\r\n        }\r\n        if (inputNotificationState.value) {\r\n            formData.append('inputNotificationState', inputNotificationState.value);\r\n        } else {\r\n            formData.append('inputNotificationState', '');\r\n        }\r\n        formData.append('inputNotificationZip', inputNotificationZip.value);\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputBusinessPurpose', inputBusinessPurpose.value)\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n\r\n        const response = await createEntity(formData);\r\n        if (response.field_error) {\r\n            setApiLoading(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n                if (key === 'inputName') {\r\n                    setInputName({...inputName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputComplianceOnly') {\r\n                    setInputComplianceOnly({...inputComplianceOnly, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFillingState') {\r\n                    setInputFillingState({...inputFillingState, error: response.field_error[key]})\r\n                }\r\n\r\n                // if (key === 'inputFirstName') {\r\n                //     setInputFirstName({...inputFirstName, error: response.field_error[key]})\r\n                // }\r\n                //\r\n                // if (key === 'inputLastName') {\r\n                //     setInputLastName({...inputLastName, error: response.field_error[key]})\r\n                // }\r\n                if (key === 'inputFillingStructure') {\r\n                    setInputFillingStructure({...inputFillingStructure, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputFormationDate') {\r\n                    setInputFormationDate({...inputFormationDate, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationEmail') {\r\n                    setInputNotificationEmail({...inputNotificationEmail, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationPhone') {\r\n                    setInputNotificationPhone({...inputNotificationPhone, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationAddress') {\r\n                    setInputNotificationAddress({...inputNotificationAddress, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationCity') {\r\n                    setInputNotificationCity({...inputNotificationCity, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationState') {\r\n                    setInputNotificationState({...inputNotificationState, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationZip') {\r\n                    setInputNotificationZip({...inputNotificationZip, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputBusinessPurpose') {\r\n                    setInputBusinessPurpose({...inputBusinessPurpose, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n                if (key === 'inputEIN') {\r\n                    setInputEIN({...inputEIN, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFiscalDate') {\r\n                    // setInputFiscalDate(inputFiscalDate => ...inputFiscalDate, error:response.field_error[key])\r\n                    setInputFiscalDate({...inputFiscalDate, value: fiscal, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n        if (response) {\r\n            if (response.status) {\r\n                await resetForm();\r\n                setApiLoading(false);\r\n                setSuccessMessage(true);\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n\r\n\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(false);\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setError(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Paper className={classes.paper} elevation={3} >\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Please make sure that you have entered it correctly.\r\n                            If you proceed and we are unable to validate your address it may cause delays\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                            Accept\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {error ? (<MySnackbarContentWrapper\r\n                    onClose={()=>{removeErrorMessage()}}\r\n                    variant=\"error\"\r\n                    message=\"Something went wrong\"\r\n                />) : ''}\r\n\r\n                {successMessage ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeSuccess()}}\r\n                        variant=\"success\"\r\n                        message=\"Entity has been added\"\r\n                    />\r\n                ) : ''}\r\n\r\n                <Grid container spacing={0}>\r\n\r\n\r\n                    <form className={classes.container} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    value={inputName.value}\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputName.error !== ' '}\r\n                                    onChange={e => setInputName({...inputName, value: e.target.value})}\r\n                                    id=\"inputName\"\r\n                                    label=\"Entity Name\"\r\n                                    className={clsx(classes.textField, classes.dense, classes.label)}\r\n                                    margin=\"dense\"\r\n                                    helperText={inputName.error}\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputForeign.error !== ' ' ? \"true\" : \"false\"}\r\n                                    onChange={e => setInputForeign({\r\n                                        ...inputForeign,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputForeign.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Foreign Qualified\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={apiLoading}\r\n                                    error={inputComplianceOnly.error !== ' ' ?  \"true\" : \"false\"}\r\n                                    onChange={e => setInputComplianceOnly({\r\n                                        ...inputComplianceOnly,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputComplianceOnly.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Compliance Only\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingState.error !== ' ' }>\r\n                                    <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Entity\r\n                                        State</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingState.error !== ' '}\r\n                                        value={inputFillingState.value}\r\n\r\n                                        onChange={e => setInputFillingState({\r\n                                            ...inputFillingState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingState',\r\n                                            id: 'inputFillingState',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)\r\n\r\n                                        }\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingStructure.error !== ' '}>\r\n                                    <InputLabel htmlFor=\"age-native-simple\">Entity Structure</InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        error={inputFillingStructure.error !== ' '}\r\n                                        value={inputFillingStructure.value}\r\n                                        onChange={e => setInputFillingStructure({\r\n                                            ...inputFillingStructure,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingStructure',\r\n                                            id: 'inputFillingStructure',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {FillingStructureData?.map((anObjectMapped, index) => <option\r\n                                            key={index}\r\n                                            value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingStructure.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Formation Date\"\r\n                                    format={'Y-M-d'}\r\n                                    error={inputFormationDate.error !== ' '}\r\n                                    value={inputFormationDate.value}\r\n                                    onChange={e => setInputFormationDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    label=\"Fiscal Date\"\r\n                                    error={inputFiscalDate.error !== ' '}\r\n                                    value={inputFiscalDate.value}\r\n                                    onChange={e => setInputFiscalDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFiscalDate',\r\n                                        id: 'inputFiscalDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n\r\n                                    type=\"email\"\r\n                                    value={inputNotificationEmail.value}\r\n                                    onChange={e => setInputNotificationEmail({\r\n                                        ...inputNotificationEmail,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationEmail',\r\n                                        id: 'inputNotificationEmail',\r\n                                    }}\r\n                                    error={inputNotificationEmail.error !== ' '}\r\n                                    helperText={inputNotificationEmail.error}\r\n                                    label=\"Notification Email\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    value={inputNotificationPhone.value}\r\n                                    onChange={e => setInputNotificationPhone({\r\n                                        ...inputNotificationPhone,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationPhone',\r\n                                        id: 'inputNotificationPhone',\r\n                                    }}\r\n                                    error={inputNotificationPhone.error !== ' '}\r\n                                    helperText={inputNotificationPhone.error}\r\n                                    label=\"Notification Phone\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <Autocomplete\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    width={''}\r\n                                    addressObject={addressObjectChangeHandler}\r\n                                    addressValue={addressValueChangeHandler}\r\n                                    reset={addressReset}\r\n                                    onChange={e => setAddressValue({\r\n                                        ...addressValue,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationAddress',\r\n                                        id: 'inputNotificationAddress',\r\n                                    }}\r\n                                    error={inputNotificationAddress.error !== ' '}\r\n                                    helperText={inputNotificationAddress.error}\r\n                                    className={clsx(classes.dense)}\r\n                                />\r\n                            </div>\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    value={inputEIN.value}\r\n                                    onChange={e => setInputEIN({\r\n                                        ...inputEIN,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputEIN',\r\n                                        id: 'inputEIN',\r\n                                    }}\r\n                                    error={inputEIN.error !== ' '}\r\n                                    helperText={inputEIN.error}\r\n                                    label=\"EIN\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    error={inputNotificationCity.error !== ' '}\r\n                                    helperText={inputNotificationCity.error}\r\n                                    value={inputNotificationCity.value || ''}\r\n                                    onChange={e => setInputNotificationCity({\r\n                                        ...inputNotificationCity,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationCity',\r\n                                        id: 'inputNotificationCity',\r\n                                    }}\r\n                                    label=\"City\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-4'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputNotificationState.error !== ' '}>\r\n                                    <InputLabel>\r\n                                        State/Region/Province\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        disabled={apiLoading}\r\n                                        required\r\n                                        // renderValue={inputNotificationState.value || ''}\r\n                                        value={inputNotificationState.value || ''}\r\n                                        onChange={e => setInputNotificationState({\r\n                                            ...inputNotificationState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputNotificationState',\r\n                                            id: 'inputNotificationState',\r\n                                        }}\r\n                                        error={inputNotificationState.error !== ' '}\r\n                                        // helperText={inputNotificationState.error}\r\n                                    >\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputNotificationState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    value={inputNotificationZip.value}\r\n                                    onChange={e => setInputNotificationZip({\r\n                                        ...inputNotificationZip,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationZip',\r\n                                        id: 'inputNotificationZip',\r\n                                    }}\r\n                                    error={inputNotificationZip.error !== ' '}\r\n                                    helperText={inputNotificationZip.error}\r\n                                    label=\"Postal / Zip Code\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={apiLoading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUpapiLoading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                {inputFiling.success !== ' ' ? (<span>{inputFiling.success}</span>) : ' '}\r\n                                {inputFiling.error !== ' ' ? (\r\n                                    <span className={clsx(classes.fileError)}>{inputFiling.error}</span>) : ' '}\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    disabled={apiLoading}\r\n                                    placeholder=\"Business Purpose\"\r\n                                    value={inputBusinessPurpose.value}\r\n                                    error={inputBusinessPurpose.error !== ' '}\r\n                                    helperText={inputBusinessPurpose.error}\r\n                                    onChange={e => setInputBusinessPurpose({\r\n                                        ...inputBusinessPurpose,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'inputBusinessPurpose',\r\n                                        id: 'inputBusinessPurpose',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {apiLoading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n                                    {/*<input disabled={apiLoading}*/}\r\n                                    {/*       className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                    {/*       type=\"reset\"  value=\"Reset\"/>*/}\r\n\r\n                                    <input disabled={apiLoading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Create New Entity\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddEntity);\r\n","const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\n\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const AttachmentsList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Documents/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const attachFiles = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/documents/attachment`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if (okta) {\r\n\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n// import {useHistory} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {taskUpdate} from '../api/attachment';\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ComplianceTaskList(props) {\r\n    localStorage.setItem('task', 'false');\r\n    const {addError} = useContext(UserContext);\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    // const [userAgree, setUserAgree] = React.useState(false);\r\n    const [status, setStatus] = React.useState('');\r\n    const [taskID, setTaskID] = React.useState()\r\n    // const [eid, setEid] = React.useState('');\r\n    // const [data, setData] = React.useState(props.data)\r\n    // const history = useHistory();\r\n    // const classes = useStyles();\r\n\r\n\r\n    // const data = [{id: \"4071993000002295199\", subject: \"Dissolve LLC FQ\", dueDate: \"2019-12-12\", status: \"Not Started\"}]\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setLoading(false);\r\n        return null;\r\n    };\r\n    const taskUpdateController = () => {\r\n        console.log('task',localStorage.getItem('task'))\r\n        if(localStorage.getItem('task') === 'false'){\r\n            setOpen(true);\r\n        }\r\n\r\n\r\n        if(localStorage.getItem('task') === 'true') {\r\n            setOpen(false);\r\n\r\n            let formData = new FormData();\r\n            formData.append('status', status);\r\n            formData.append('eid', props.eid);\r\n            taskUpdate(taskID, formData).then(response => {\r\n                if (response.message) {\r\n                    localStorage.setItem('task', 'false');\r\n                    props.update();\r\n                    setLoading(false);\r\n                }\r\n\r\n                if (response.type === 'error') {\r\n                    addError(response.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const iAgree = async (event) => {\r\n\r\n        localStorage.setItem('task', 'true');\r\n        taskUpdateController();\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Compliance Task\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure, you want to mark this task as \"{localStorage.getItem('userMessage') ? localStorage.getItem('userMessage') : ''}\"\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={[\r\n                    {\r\n                        icon: 'check',\r\n                        tooltip: 'Mark this task as complete',\r\n                        position: 'row',\r\n                        onClick: (event, rowData) => {\r\n                            setLoading(true);\r\n                            if(rowData.status === 'Completed') {\r\n                                Promise.resolve(setStatus(0));\r\n                                localStorage.setItem('userMessage', 'Incomplete');\r\n                            } else {\r\n                                Promise.resolve(setStatus(1));\r\n                                localStorage.setItem('userMessage', 'Complete');\r\n                            }\r\n                            Promise.resolve(setTaskID(rowData.id));\r\n                            setOpen(true);\r\n\r\n\r\n                        }\r\n                    }\r\n\r\n                ]}\r\n                title={props.title !== '' ? props.title : ''}\r\n                options={{\r\n                    selection: props.selection ? props.selection : false,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ComplianceTaskList;\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ContactList(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={  props.action ? [\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ] : ''}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(ContactList);\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst ChildDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n\r\n        if(checkRole === 'Child Entity'){\r\n             detailedView = await entityDetail(attributes.organization);\r\n        }\r\n        if (detailedView.result) {\r\n            addTitle('Dashboard ' +' - '+ detailedView.result.entity.name);\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks);\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError('Status '+ detailedView.errors.status +' '+ detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(attributes.organization);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}/download/${rowData.file_id}?token=${rowData.token}&name=${rowData.name}`}>\r\n\r\n                    <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'added'},\r\n            {title: 'Size', field: 'file_size'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n                <Grid container spacing={2}>\r\n\r\n                    {errorList?.map((value, index) => (\r\n                        <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                                  message={value} onClose={()=> removeError(index)}/>\r\n                    ))}\r\n\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(ChildDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from 'react';\nimport MaterialTable from \"material-table\";\nimport Layout from \"../layout/Layout\";\nimport {entityList} from \"../api/enitity.crud\";\nimport {UserContext} from '../context/UserContext';\nimport {withOktaAuth} from '@okta/okta-react';\nimport {useHistory} from \"react-router-dom\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Link from '@material-ui/core/Link';\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {amber, green} from \"@material-ui/core/colors\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ChildDetailedPage from '../entity/ChildDetailedPage';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n\n    adjustment: {\n        marginRight: '5px',\n    },\n\n    companyinfo: {\n        listStyle: 'none',\n        padding: '0px',\n        minHeight: '100px'\n\n    },\n    listItem: {\n        marginBottom: '5px'\n    },\n\n    errorMessage: {\n        marginBottom: '5px'\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles();\n    const {className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            elevation={6}\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n}\n\n\nfunction Dashboard(props) {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\n    const checkRole = role ? role : localStorage.getItem('role');\n    const [entitydata, setEntityData] = React.useState([]);\n    const [componentLoading, setComponentLoading] = React.useState(true);\n    useEffect(() => {\n            if(loading === true) {\n                addTitle('Dashboard');\n                if(role === 'Parent Organization' || role === 'Administrator' ) {\n                    asyncDataFetch();\n                }\n            }\n\n    }, [loading])\n\n    const asyncDataFetch = async () => {\n        const tokenResult = await props.authState.accessToken;;\n\n        try {\n            await fetchData(tokenResult);\n        } catch (e){\n            addError('Something when wrong!!');\n        }\n    }\n\n\n    const fetchData = async (token) => {\n        try {\n            await entityList(token).then(response => {\n                if (response.data) {\n                    setEntityData(response.data.results);\n                    setComponentLoading(false);\n                }\n\n                if (response.error) {\n                    addError(response.error.message);\n                }\n\n                if(response.type === 'error'){\n                    window.location.reload();\n                }\n\n                if(response.status === 401){\n                    window.location.reload();\n                }\n\n\n            });\n        } catch (e) {\n            addError(e);\n        }\n    }\n\n    const settingData = {\n        columns: [\n\n            {title: 'Name', field: 'name'},\n            {title: 'Entity Structure', field: 'entityStructure'},\n            {title: 'Filing State', field: 'filingState'},\n            {title: 'Formation Date', field: 'formationDate'},\n            {\n                render: rowData => <Link\n                    component=\"button\"\n                    variant=\"body2\"\n                    onClick={() => {\n                        if (rowData.id !== attributes.organization) {\n                            history.push(`/entity/${rowData.id}`);\n                        } else {\n                            history.push(`/entity`);\n                        }\n                    }}>\n                    <VisibilityIcon/>\n                </Link>\n            },\n        ],\n        data: entitydata,\n    };\n\n    return (\n        <>\n\n            <Layout>\n\n                {errorList?.map((value, index) => (\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\n                                              message={value} onClose={()=>{removeError(index)}}/>\n                ))}\n                { checkRole === 'Parent Organization' ?\n                    <div style={{maxWidth: \"100%\"}}>\n                        <MaterialTable\n                            parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                            isLoading={componentLoading}\n                            title={'Entities'}\n                            columns={settingData.columns}\n                            data={settingData.data}\n                            options={{\n                                defaultExpanded: false,\n                            }}\n                        />\n                    </div> : '' }\n\n                {\n                    checkRole === 'Child Entity' ?\n                        <ChildDetailedPage /> : ''\n                }\n\n\n\n                {\n                    checkRole === 'Administrator' ?\n                        <div style={{maxWidth: \"100%\"}}>\n                            <MaterialTable\n                                parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                                isLoading={componentLoading}\n                                title={'Entities'}\n                                columns={settingData.columns}\n                                data={settingData.data}\n                                options={{\n                                    defaultExpanded: false,\n                                }}\n                            />\n                        </div> : ''\n\n                }\n\n            </Layout>\n\n        </>\n\n    )\n}\n\n\nexport default withOktaAuth(Dashboard);\n","import React, {useEffect, useMemo, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst EntityDetailedPage = (props) => {\r\n\r\n    const entity_id = props.match.params.id;\r\n\r\n\r\n    const {loading, attributes, addError, errorList, role, addTitle, profile} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ');\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n        var detailedView = '';\r\n        if (checkRole === 'Parent Organization' || checkRole === 'Administrator' ) {\r\n            detailedView = await entityDetail(entity_id);\r\n            if(detailedView.result) {\r\n                addTitle('Entity - ' + detailedView.result.entity.name);\r\n            }\r\n        }\r\n\r\n        if (checkRole === 'Child Entity') {\r\n            detailedView = await selfEntityDetail();\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            addTitle('Entity - '+ detailedView.result.entity.name);\r\n            setEntitydetail(detailedView.result)\r\n            setContactList(detailedView.result.contacts);\r\n            setAttachmentList(detailedView.result.attachments)\r\n            setTaskList(detailedView.result.tasks)\r\n            setComponentLoading(false);\r\n\r\n        }\r\n\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n        if(detailedView.status === 401){\r\n            window.location.reload();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await entityDetail(entity_id);\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n\r\n\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}/download/${rowData.file_id}?token=${rowData.token}&name=${rowData.name}`}>\r\n\r\n                <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'added'},\r\n            {title: 'Size', field: 'file_size'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={2}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </> :\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                {entitydetail ?\r\n                                    <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                        <Skeleton />\r\n                                    </>\r\n\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={entity_id}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${entity_id}`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${entity_id}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(EntityDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6}\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst SelfDetailedPage = (props) => {\r\n\r\n\r\n\r\n\r\n    const {attributes, loading, addError, errorList, role, addTitle, profile, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n    const [compliance, setComplainace] = React.useState(0);\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ' + profile.name)\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const UpdateComplainceState = () => {\r\n        setComplainace(compliance + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(compliance !== 0) {\r\n            updateComplianceTable()\r\n        }\r\n    },[compliance]);\r\n\r\n    const updateComplianceTable = async() => {\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setTaskList(detailedView.result.tasks)\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n                setComponentLoading(false);\r\n            }\r\n        }\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks)\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}/download/${rowData.file_id}?token=${rowData.token}&name=${rowData.name}`}>\r\n\r\n                    <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'added'},\r\n            {title: 'Size', field: 'file_size'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper key={index} className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={()=> removeError(index)}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList update={UpdateComplainceState} loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'} eid={attributes ? attributes.organization : ''}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${attributes ? attributes.organization : ''}`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${attributes ? attributes.organization : ''}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(SelfDetailedPage);\r\n\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const contactList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const createContact = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ContactTypeList, StateRegionList} from \"../api/enitity.crud\";\r\nimport {createContact} from \"../api/contact.crud\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport utils from 'smartystreets-javascript-sdk-utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\n\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddContactForm = (props) => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes, addTitle} = useContext(UserContext);\r\n    addTitle('Add New Contact');\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    //form state\r\n\r\n\r\n    const [inputContactFirstName, setInputContactFirstName] = React.useState({value: '', error: ' '});\r\n    const [inputContactLastName, setInputLastName] = React.useState({value: '', error: ' '});\r\n    const [inputContactEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputContactPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputContactStreet, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputContactType, setInputNotificationContactType] = React.useState({value: '', error: ' '});\r\n    const [inputContactCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputContactState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputContactZipcode, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true);\r\n\r\n    };\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                setInputNotificationCity({...inputContactCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputContactState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        fetchDataforDropdownsContactTypeList();\r\n        fetchDataforDropdownsStateRegion();\r\n        localStorage.setItem('iAgree', false);\r\n    }, [])\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            const response = await ContactTypeList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n            setContactType(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            const response = await StateRegionList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n            setStateRegion(response.data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = async (value) => {\r\n        return Promise.resolve(setAddressValue(value));\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setInputContactFirstName({error: ' ', value: ''})\r\n                setInputLastName({error: ' ', value: ''})\r\n                setInputNotificationEmail({error: ' ', value: ''})\r\n                setInputNotificationPhone({error: ' ', value: ''})\r\n                setInputNotificationAddress({error: ' ', value: ''})\r\n                setInputNotificationContactType({error: ' ', value: ''})\r\n                setInputNotificationCity({error: ' ', value: ''})\r\n                setInputNotificationState({error: ' ', value: ''})\r\n                setInputNotificationZip({error: ' ', value: ''});\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setAddressReset('');\r\n        // if (userResponse === 'false') {\r\n        //     await addressCheck();\r\n        // }\r\n\r\n\r\n        var formsubmit = true;\r\n        if (inputContactZipcode.value) {\r\n            var zip = parseInt(inputContactZipcode.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputContactCity.value && inputContactState.value && inputContactZipcode.value !== '') {\r\n                    formsubmit = false;\r\n                    await addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            contactsCreate(event, userResponse);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactsCreate = async (event, valid = null) => {\r\n\r\n\r\n        let formData = new FormData();\r\n        setInputContactFirstName({...inputContactFirstName, error: ' '})\r\n        setInputLastName({...inputContactLastName, error: ' '})\r\n        setInputNotificationEmail({...inputContactEmail, error: ' '})\r\n        setInputNotificationPhone({...inputContactPhone, error: ' '})\r\n        setInputNotificationAddress({...inputContactStreet, error: ' '})\r\n        setInputNotificationContactType({...inputContactType, error: ' '})\r\n        setInputNotificationCity({...inputContactCity, error: ' '})\r\n        setInputNotificationState({...inputContactState, error: ' '})\r\n        setInputNotificationZip({...inputContactZipcode, error: ' '})\r\n\r\n\r\n        formData.append('entityId', props.match.params.id ? props.match.params.id : '' );\r\n        formData.append('inputContactFirstName', inputContactFirstName.value);\r\n        formData.append('inputContactLastName', inputContactLastName.value);\r\n        formData.append('inputContactEmail', inputContactEmail.value);\r\n        formData.append('inputContactPhone', inputContactPhone.value);\r\n        formData.append('inputContactStreet', addressObject.streetLine);\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputContactStreet', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputContactStreet', addressObject)\r\n        }\r\n        formData.append('inputContactType', inputContactType.value)\r\n\r\n        if (inputContactCity.value) {\r\n            formData.append('inputContactCity', inputContactCity.value);\r\n        } else {\r\n            formData.append('inputContactCity', '');\r\n        }\r\n        if (inputContactState.value) {\r\n            formData.append('inputContactState', inputContactState.value);\r\n        } else {\r\n            formData.append('inputContactState', '');\r\n        }\r\n\r\n        formData.append('inputContactZipcode', inputContactZipcode.value)\r\n\r\n\r\n        formData.append('inputAddressIsValid', valid ? valid : isValidAddress)\r\n        formData.append('acceptInvalidAddress', userAgree)\r\n\r\n        const response = await createContact(formData);\r\n        if (response.field_error) {\r\n\r\n            setLoading(false);\r\n            setIsValidAddress(false);\r\n            setUserAgree(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n\r\n                if (key === 'inputContactFirstName') {\r\n                    setInputContactFirstName({...inputContactFirstName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactLastName') {\r\n                    setInputLastName({...inputContactLastName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactEmail') {\r\n                    setInputNotificationEmail({...inputContactEmail, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactPhone') {\r\n                    setInputNotificationPhone({...inputContactPhone, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactStreet') {\r\n                    setInputNotificationAddress({...inputContactStreet, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactType') {\r\n                    setInputNotificationContactType({...inputContactType, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactCity') {\r\n                    setInputNotificationCity({...inputContactCity, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactState') {\r\n                    setInputNotificationState({...inputContactState, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactZipcode') {\r\n                    setInputNotificationZip({...inputContactZipcode, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n        if (response.data) {\r\n            if (response.data.type === 'ok') {\r\n\r\n                new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve();\r\n                        setUserAgree(false);\r\n                        setLoading(false);\r\n                        setSuccessMessage(response.data.results);\r\n                        resetForm();\r\n                        window.scrollTo(0, 0)\r\n                    }, 600);\r\n                });\r\n\r\n            }\r\n\r\n            if (response.data) {\r\n                if (response.data.type === 'error') {\r\n                    await updateStates(response.data.results);\r\n\r\n                    // console.log(addressObject);\r\n                }\r\n            }\r\n        }\r\n\r\n        //\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n        //\r\n        // setTimeout(() => {\r\n        //     setLoading(false);\r\n        //     history.goBack();\r\n        // }, 4000)\r\n        // setLoading(true);\r\n\r\n\r\n    }\r\n\r\n\r\n    const updateStates = async (data) => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setUserAgree(false);\r\n                setLoading(false);\r\n                setErrorMessage(data);\r\n                window.scrollTo(0, 0)\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const addressCheck = async (event) => {\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputContactCity.value;\r\n        lookup1.state = inputContactState.value;\r\n        lookup1.zipCode = inputContactZipcode.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                contactsCreate(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const disableSuccessMessage = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n\r\n    const disableErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Contact</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Please make sure that you have entered it correctly.\r\n                        If you proceed and we are unable to validate your address it may cause delays\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                            {successMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableSuccessMessage()}}\r\n                                    variant=\"success\"\r\n                                    message={successMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n\r\n                            {errorMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    onClose={()=>{disableErrorMessage()}}\r\n                                    variant=\"error\"\r\n                                    message={errorMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n                            <Grid container spacing={0}>\r\n                                <form id={\"create-course-form\"} className={classes.container} onSubmit={handleOnSubmit}\r\n                                      noValidate\r\n                                      autoComplete=\"off\">\r\n                                    <FormGroup row>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                error={inputContactFirstName.error !== ' '}\r\n                                                label=\"First Name\"\r\n                                                value={inputContactFirstName.value}\r\n                                                onChange={e => setInputContactFirstName({\r\n                                                    ...inputContactFirstName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactFirstName',\r\n                                                    id: 'inputContactFirstName',\r\n                                                }}\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactFirstName.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                value={inputContactLastName.value}\r\n                                                onChange={e => setInputLastName({\r\n                                                    ...inputContactLastName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactLastName',\r\n                                                    id: 'inputContactLastName',\r\n                                                }}\r\n                                                error={inputContactLastName.error !== ' '}\r\n                                                label=\"Last Name\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactLastName.error}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n\r\n                                                type=\"email\"\r\n                                                value={inputContactEmail.value}\r\n                                                onChange={e => setInputNotificationEmail({\r\n                                                    ...inputContactEmail,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactEmail',\r\n                                                    id: 'inputContactEmail',\r\n                                                }}\r\n                                                error={inputContactEmail.error !== ' '}\r\n                                                helperText={inputContactEmail.error}\r\n                                                label=\"Email\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                value={inputContactPhone.value}\r\n                                                onChange={e => setInputNotificationPhone({\r\n                                                    ...inputContactPhone,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactPhone',\r\n                                                    id: 'inputContactPhone',\r\n                                                }}\r\n                                                error={inputContactPhone.error !== ' '}\r\n                                                helperText={inputContactPhone.error}\r\n                                                label=\"Phone\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-12'}>\r\n                                            <Autocomplete\r\n                                                disabled={loading}\r\n                                                required\r\n                                                width={''}\r\n                                                addressObject={addressObjectChangeHandler}\r\n                                                addressValue={addressValueChangeHandler}\r\n                                                reset={addressReset}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactStreet',\r\n                                                    id: 'inputContactStreet',\r\n                                                }}\r\n                                                error={inputContactStreet.error !== ' '}\r\n                                                helperText={inputContactStreet.error}\r\n                                                className={clsx(classes.dense)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactType.error !== ' '}>\r\n                                                <InputLabel htmlFor=\"age-native-simple\">Contact Type</InputLabel>\r\n                                                <Select\r\n                                                    disabled={loading}\r\n                                                    native\r\n                                                    value={inputContactType.value}\r\n                                                    onChange={e => setInputNotificationContactType({\r\n                                                        ...inputContactType,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactType',\r\n                                                        id: 'inputContactType',\r\n                                                    }}\r\n                                                    error={inputContactType.error !== ' '}\r\n                                                    helperText={inputContactType.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {contactType?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactType.error}</FormHelperText>\r\n\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                            <TextField\r\n                                                id=\"standard-basic\"\r\n                                                disabled={loading}\r\n                                                required\r\n                                                error={inputContactCity.error !== ' '}\r\n                                                helperText={inputContactCity.error}\r\n                                                value={inputContactCity.value || ''}\r\n                                                onChange={e => setInputNotificationCity({\r\n                                                    ...inputContactCity,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactCity',\r\n                                                    id: 'inputContactCity',\r\n                                                }}\r\n                                                label=\"City\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactState.error !== ' '}>\r\n                                                <InputLabel>\r\n                                                    State/Region/Province\r\n                                                </InputLabel>\r\n                                                <Select\r\n                                                    disabled={loading}\r\n                                                    required\r\n                                                    native\r\n                                                    value={inputContactState.value || ''}\r\n                                                    onChange={e => setInputNotificationState({\r\n                                                        ...inputContactState,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactState',\r\n                                                        id: 'inputContactState',\r\n                                                    }}\r\n                                                    error={inputContactState.error !== ' '}\r\n                                                    helperText={inputContactState.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactState.error}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                type=\"text\"\r\n                                                value={inputContactZipcode.value}\r\n                                                onChange={e => setInputNotificationZip({\r\n                                                    ...inputContactZipcode,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactZipcode',\r\n                                                    id: 'inputContactZipcode',\r\n                                                }}\r\n                                                error={inputContactZipcode.error !== ' '}\r\n                                                helperText={inputContactZipcode.error}\r\n                                                label=\"Postal / Zip Code\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-12'}>\r\n                                            <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                                {loading ? (\r\n                                                        <div className={clsx(classes.loader)}>\r\n                                                            <FacebookProgress/>\r\n                                                        </div>)\r\n                                                    : null}\r\n                                                {/*<input className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                                {/*       type=\"reset\" onClick={(e) => {resetForm()}} value=\"Reset\"/>*/}\r\n\r\n                                                <input disabled={loading}\r\n                                                       className={clsx('btn btn-primary', classes.restButton)}\r\n                                                       type=\"submit\" value=\"Add new Contact\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </form>\r\n                            </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddContactForm);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {AttachmentsList} from \"../api/attachment\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Attachments = () => {\r\n    const {loading, attributes, addError, errorList, addTitle} = useContext(UserContext);\r\n\r\n    // const history = useHistory();\r\n    const classes = useStyles();\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Attachments');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await AttachmentsList(attributes.organization);\r\n            await setAttachmentList(response.data.documents);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Attachment API.');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dummyData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}download/${rowData.file_id}?token=${rowData.token}&name=${rowData.name}`}>\r\n                    <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Attachment'} data={dummyData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Attachments);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {contactList} from \"../api/contact.crud\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Contacts = () => {\r\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [listcontacts, setListcontacts] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Contacts');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await contactList(attributes.organization);\r\n            await setListcontacts(response.data.contacts);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Contact API.');\r\n        }\r\n    }\r\n\r\n    const dummyDataa = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Phone', field: 'phone'},\r\n        ],\r\n        data: listcontacts,\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={(e) => removeError(index)}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Contacts'} data={dummyDataa}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Contacts);\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport {attachFiles} from \"../api/attachment\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n        width: '100%',\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    formStyle: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                        {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddAttachmentForm = (props) => {\r\n\r\n    const {addTitle, addError} = useContext(UserContext);\r\n    addTitle('Add New Attachment');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    // const [error, setError] = React.useState(false);\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // const handleClose = (event, reason) => {\r\n    //     setError(false);\r\n    // }\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n\r\n// console.log(inputFormationDate.value);\r\n\r\n// Display the key/value pairs\r\n\r\n        formData.append('entityId', props.match.params.id)\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        try {\r\n            const response = await attachFiles(formData);\r\n            if (response) {\r\n                if (response.status === true) {\r\n                    setSuccessMessage(response.message);\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            addError('Something went wrong with Attchemnt API.');\r\n            setErrorMessage('Something went wrong with Attchemnt API.');\r\n        }\r\n\r\n        // if(response.status == true) {\r\n        //     setTimeout(() => {\r\n        //         history.goBack();\r\n        //     }, 4000)\r\n        // }\r\n\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const filename = e.target.files[0].name;\r\n        const response = await lorexFileUpload(formData);\r\n        if (response.error === false) {\r\n            setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n            setInputFileSize({...inputFileSize, value: response.file_size})\r\n            if (filename) {\r\n                setInputFileName({...inputFileName, value: filename});\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const removeSuccess = () => {\r\n        setSuccessMessage(' ');\r\n    }\r\n\r\n    const removeErrorMessage = () => {\r\n        setErrorMessage(' ');\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Layout>\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Attachment</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n                {successMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeSuccess()}}\r\n                        variant=\"success\"\r\n                        message={successMessage}\r\n                    />\r\n                ) : ''}\r\n\r\n\r\n                {errorMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        onClose={()=>{removeErrorMessage()}}\r\n                        variant=\"error\"\r\n                        message={errorMessage}\r\n                    />\r\n                ) : ''}\r\n                <div className=\"row\">\r\n                    <form className={classes.formStyle} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={loading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUploading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                <span>{inputFiling.success !== ' ' ? inputFiling.success : ' '}</span>\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {loading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n\r\n                                    <input disabled={loading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Add attachment\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </div>\r\n\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default withOktaAuth(AddAttachmentForm);\r\n","import React, {Component} from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {Security, SecureRoute, LoginCallback} from '@okta/okta-react';\r\nimport Home from '../okta/Home';\r\nimport Login from '../okta/Login';\r\nimport AddEntity from \"../entity/AddEntity\";\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport UserContextProvider from '../context/UserContext';\r\nimport EntityDetailedPage from '../entity/EntityDetailedPage';\r\nimport SelfDetailedPage from '../entity/SelfDetailedPage';\r\nimport AddContactForm from \"../contact/AddContactForm\";\r\nimport Attachments from \"../attachment/Attachments\";\r\nimport Contacts from \"../contact/Contacts\";\r\nimport AddAttachmentForm from \"../attachment/AddAttachmentForm\";\r\n\r\nexport default withRouter(class AppWithRouterAccess extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onAuthRequired = this.onAuthRequired.bind(this);\r\n    }\r\n\r\n    onAuthRequired() {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Security\r\n                issuer={process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default'}\r\n                clientId={process.env.REACT_APP_OKTA_CLIENT_ID}\r\n                redirectUri={window.location.origin + '/implicit/callback/'}\r\n                onAuthRequired={this.onAuthRequired}\r\n                pkce={true}>\r\n                <UserContextProvider>\r\n                    <SecureRoute exact={true} path='/' component={Dashboard}/>\r\n                    <SecureRoute exact={true} path='/home' component={Home}/>\r\n                    <SecureRoute exact={true} path='/entity' component={SelfDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/:id' component={EntityDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/new/add' component={AddEntity}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add' component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add/:id'\r\n                                 component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/attachments' component={Attachments}/>\r\n                    <SecureRoute exact={true} path='/contacts' component={Contacts}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add\" component={AddAttachmentForm}/>\r\n                    <SecureRoute exact={true} path=\"/attachment/form/add/:id\" component={AddAttachmentForm}/>\r\n                </UserContextProvider>\r\n                <Route exact={true} path='/login'\r\n                       render={() => <Login baseUrl={process.env.REACT_APP_OKTA_BASE_URL}/>}/>\r\n                <Route exact={true} path='/implicit/callback' component={LoginCallback}/>\r\n            </Security>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppWithRouterAccess from './components/routes/AppWithRouterAccess';\nimport './App.css'\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AppWithRouterAccess/>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}