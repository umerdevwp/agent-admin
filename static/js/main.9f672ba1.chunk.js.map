{"version":3,"sources":["components/routes/listItems.js","components/layout/Footer.js","components/api/OKTA.js","components/api/enitity.crud.js","components/context/UserContext.js","components/layout/Layout.js","components/okta/Home.js","components/okta/OktaSignInWidget.js","components/okta/Login.js","components/entity/TestAutocomplete.js","components/entity/AddEntity.js","components/entity/ComplianceTaskList.js","components/entity/ContactList.js","components/entity/ChildDetailedPage.js","components/dashboard/Dashboard.js","components/entity/EntityDetailedPage.js","components/entity/SelfDetailedPage.js","components/api/contact.crud.js","components/contact/AddContactForm.js","components/api/attachment.js","components/attachment/Attachments.js","components/contact/Contacts.js","components/attachment/AddAttachmentForm.js","components/routes/AppWithRouterAccess.js","App.js","serviceWorker.js","index.js","../node_modules/jspdf/dist sync"],"names":["useStyles","makeStyles","link","color","textDecoration","MainListItems","classes","className","to","ListItem","button","ListItemIcon","ListItemText","primary","Footer","Typography","variant","align","Link","href","Date","getFullYear","fetchUserProfile","sub","a","fetch","process","headers","Accept","Authorization","response","Promise","resolve","json","ENTITY","entityList","JSON","parse","localStorage","getItem","okta","accessToken","checkRole","eid","bit","tokenOKTA","entityDetail","entity","selfEntityDetail","ContactTypeList","email","EntitytypesList","StateRegionList","createEntity","data","method","body","lorexFileUpload","UserContext","createContext","drawerState","role","title","token","profile","attributes","loading","errorList","Consumer","withOktaAuth","props","useOktaAuth","authState","authService","useState","setTitle","setDrawerState","setToken","setProfile","setAttributes","appLoader","setAppLoader","setErrorList","setRole","React","useEffect","undefined","initialUtliz","removeItem","getToken","console","log","getUserProfile","result_profile","getUserAttributes","result_attributes","getUserRole","setInterval","tokenResult","getUser","UserData","AllAttributes","organization_parent","toLowerCase","organization","get_role","status","setItem","addError","message","Provider","value","addTitle","changeDrawer","removeError","index","array","splice","children","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","theme","root","display","toolbar","paddingRight","backgroundColor","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","chevronLeftIcon","flexGrow","textTransform","fontSize","drawerPaper","position","whiteSpace","breakpoints","up","flexShrink","drawerPaperClose","overflowX","spacing","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","listColor","useContext","matches","useMediaQuery","maxWidth","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","openMenu","Boolean","maxSnack","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","event","currentTarget","name","anchorOrigin","vertical","horizontal","id","keepMounted","open","onClose","TransitionComponent","Fade","getContentAnchorEl","MenuItem","logout","Drawer","ModalProps","Divider","List","Container","Box","pt","size","login","bind","this","isPending","isAuthenticated","Component","OktaSignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","features","showPasswordToggleOnSignInPage","clientId","redirectUri","authScheme","logo","authParams","issuer","responseType","scopes","authorizeUrl","renderEl","onSuccess","onError","remove","Copyright","paperContainer","marginTop","avatar","margin","palette","secondary","main","form","submit","Login","res","redirect","sessionToken","session","err","pathname","style","mt","withStyles","smartyStreetsSharedCredentials","SmartyStreetsSDK","SharedCredentials","autoCompleteClient","ClientBuilder","buildUsAutocompleteClient","IntegrationDownshift","left","right","chip","inputRoot","flexWrap","inputInput","divider","suggestions","setSuggestions","setValue","getFinal","setGetFinal","sendDatatoParent","resetState","reset","length","addressObject","smartyHandler","Lookup","target","lookup","send","then","add","result","selectedItem","onStateChange","changes","hasOwnProperty","newObject","find","text","inputValue","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","isOpen","clearSelection","getRootProps","onInputValueChange","placeholder","onBlur","onFocus","inputProps","disabled","error","required","helperText","InputProps","ref","other","TextField","onChange","inputRef","input","renderInput","fullWidth","label","InputLabelProps","shrink","Paper","square","showEmpty","deburr","trim","inputLength","count","filter","suggestion","keep","slice","getSuggestions","map","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","selected","key","fontWeight","renderSuggestion","item","client","buildUsStreetApiClient","useStylesFacebook","top","bottom","animationDuration","backButton","instructions","marginBottom","adjustment","companyinfo","listStyle","minHeight","listItem","textField","textFieldOther","textFieldCity","textFieldtwofield","selectField","dense","checkbox","fileUploading","submitButton","float","restButton","loader","success","green","fileError","dark","info","warning","amber","icon","iconVariant","opacity","paddingLeft","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","setOpen","userAgree","setUserAgree","setAddressObject","addressValue","setAddressValue","addressReset","setAddressReset","setIsValidAddress","setLoading","setContactType","FillingStructureData","setFillingStructureData","StateRegion","setStateRegion","setSuccessMessage","fiscal","inputName","setInputName","inputComplianceOnly","setInputComplianceOnly","inputFillingState","setInputFillingState","inputFillingStructure","setInputFillingStructure","inputFormationDate","setInputFormationDate","inputFiscalDate","setInputFiscalDate","inputNotificationEmail","setInputNotificationEmail","inputNotificationPhone","setInputNotificationPhone","inputNotificationAddress","setInputNotificationAddress","inputEIN","setInputEIN","inputNotificationCity","setInputNotificationCity","inputNotificationState","setInputNotificationState","inputNotificationZip","setInputNotificationZip","inputFiling","setInputFiling","inputBusinessPurpose","setInputBusinessPurpose","inputForeign","setInputForeign","inputFileName","setInputFileName","inputFileSize","setInputFileSize","handleClose","iAgree","setTimeout","handleOnSubmit","FacebookProgress","CircularProgress","thickness","disableShrink","city","state","fetchDataforDropdownsContactTypeList","fetchDataforDropdownsFillingStructureData","fetchDataforDropdownsStateRegion","ContactTypeListLocal","stringify","EntitytypesListLocal","StateRegionListLocal","fileChange","e","files","formData","FormData","append","filename","record_id","file_size","file","resetForm","addressCheck","lookup1","street","streetLine","zipCode","valid","utils","isValid","lookups","createEntitysubmit","userResponse","preventDefault","formsubmit","parseInt","toString","zip","field_error","Object","keys","forEach","window","scrollTo","elevation","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Grid","onSubmit","noValidate","autoComplete","FormGroup","row","FormControlLabel","checked","control","Checkbox","labelPlacement","FormControl","InputLabel","htmlFor","Select","native","anObjectMapped","code","FormHelperText","format","type","defaultValue","renderValue","CustomFileInput","File","invalid","table","minWidth","ComplianceTaskList","useHistory","xs","isLoading","actions","tooltip","rowData","options","selection","actionsColumnIndex","columns","withRouter","history","action","isFreeAction","push","url","errorMessage","breadcrumbsDiv","breadcrumbsInner","baseColor","entitydetail","setEntitydetail","contactList","setContactList","attachmentList","setAttachmentList","taskList","setTaskList","componentLoading","setComponentLoading","fetchDetailedProfile","detailedView","reject","contacts","attachments","tasks","errors","detail","contactData","field","taskData","attachmentData","editable","render","fid","sm","Card","CardHeader","Avatar","gutterBottom","CardContent","formationDate","expirationDate","Skeleton","subheader","registerAgent","fileAs","address","address2","zipcode","shippingStreet","shippingCity","shippingState","shippingCode","textAlign","variantIcon","MySnackbarContentWrapper","Icon","SnackbarContent","entitydata","setEntityData","asyncDataFetch","fetchData","results","settingData","parentChildData","rows","parentId","grouping","entity_id","match","params","Breadcrumbs","goBack","zoho_id","createContact","contactType","successMessage","inputContactFirstName","setInputContactFirstName","inputContactLastName","setInputLastName","inputContactEmail","inputContactPhone","inputContactStreet","inputContactType","setInputNotificationContactType","inputContactCity","inputContactState","inputContactZipcode","isValidAddress","setErrorMessage","addressValueChangeHandler","contactsCreate","updateStates","AttachmentsList","attachFiles","fetchAttachmentData","documents","dummyData","listcontacts","setListcontacts","dummyDataa","formStyle","onAuthRequired","location","origin","pkce","exact","path","Dashboard","Home","SelfDetailedPage","EntityDetailedPage","AddEntity","AddContactForm","Attachments","Contacts","AddAttachmentForm","LoginCallback","App","hostname","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","webpackEmptyContext","req","Error","module","exports"],"mappings":"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","file":"static/js/main.9f672ba1.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Attachment from '@material-ui/icons/Attachment';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n\n\n    }\n\n}))\n\nexport default function MainListItems() {\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Link className={classes.link} to='/'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/entity/new/add'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add entity\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/attachments'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Attachment color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Attachments\"/>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/contacts'>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ContactPhoneOutlinedIcon color=\"primary\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Contacts\"/>\n                </ListItem>\n            </Link>\n\n        </div>)\n};\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n","export const fetchUserProfile = async (sub) => {\r\n\r\n    const response = await fetch(process.env.REACT_APP_OKTA_BASE_URL + `api/v1/users/${sub}`, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            Accept: 'application/json',\r\n            Authorization: `SSWS ${process.env.REACT_APP_OKTA_API_TOKEN}`,\r\n        }\r\n    });\r\n    return Promise.resolve(response.json());\r\n\r\n\r\n}\r\n","\r\n\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\nconst LOREX_TOKEN = process.env.REACT_APP_LOREX_TOKEN;\r\nconst LOREX_API_HOST = process.env.REACT_APP_LOREX_API_HOST;\r\n\r\n\r\n\r\n// const LOREX_TOKEN = '3cJe5YXiSBGUAqYd0uFC2cKYvgfBIUswmXTudN3HQfvzIGvddfVYjPmakGOkGVM9g5YRKJR2FF9iYuZQ0GsbGw';\r\n// const LOREX_API_HOST = 'https://lorax-api-sandbox.filemystuff.com';\r\nexport const LOGIN_URL = \"api/auth/login\";\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ENTITY = HOST;\r\n\r\n\r\n\r\nexport const ME_URL = \"api/me\";\r\n\r\nexport const entityList = async () => {\r\n\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Entity/getChildAccount`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const checkRole = async (eid,bit, tokenOKTA) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    var response = '';\r\n    if(okta) {\r\n        if(bit === 1) {\r\n           response = await fetch(`${ENTITY}/entity/role?eid=${eid}&bit=${bit}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': tokenOKTA,\r\n\r\n                }\r\n            });\r\n        }\r\n        if(bit === 0) {\r\n         response = await fetch(`${ENTITY}/entity/role?eid=${eid}`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': okta.accessToken.accessToken,\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkAdmin = async (zoho_id, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/admin_api/checkadmin/?zoho_id=${zoho_id}&email=${email}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const taskUpdate = async (eid, data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Tasks/completeTaskInZoho/${eid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            },\r\n            body: data\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const entityDetail = async (entity) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview/?eid=${entity}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const selfEntityDetail = async () => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/entityview`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const ContactTypeList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/ContactTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const EntitytypesList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/EntityTypes/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization':okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const StateRegionList = async (eid, email) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/States/list?eid=${eid}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createEntity = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/entity/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\nexport const lorexFileUpload = async (data) => {\r\n\r\n\r\n    // console.log('LOREX_TOKEN',LOREX_TOKEN);\r\n    // console.log('LOREX_URL',`${LOREX_API_HOST}/api/v1/upload`);\r\n    // console.log('LOREX_URL',HOST);\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${LOREX_API_HOST}/api/v1/upload`, {\r\n            method: 'post',\r\n            headers: {\r\n                'authorization': LOREX_TOKEN,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const testcall = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch('https://apidev.youragentservices.com/api/entity/add', {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {createContext, useState} from 'react'\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport {fetchUserProfile} from \"../api/OKTA\";\r\nimport {checkRole} from '../api/enitity.crud';\r\n\r\nexport const UserContext = createContext(\r\n    {\r\n        drawerState: true,\r\n        role: '',\r\n        title: '',\r\n        token: '',\r\n        profile: '',\r\n        attributes: [],\r\n        loading: false,\r\n        errorList:[]\r\n    }\r\n);\r\n\r\nexport const UserConsumer = UserContext.Consumer;\r\n\r\nfunction UserContextProvider(props) {\r\n    const {authState, authService} = useOktaAuth();\r\n    const [title, setTitle] = useState('');\r\n    const [drawerState, setDrawerState] = useState(true);\r\n    const [token, setToken] = useState('');\r\n    const [profile, setProfile] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    const [appLoader, setAppLoader] = useState({loading: false});\r\n    const [errorList, setErrorList] = useState([]);\r\n    const [role, setRole] = useState({});\r\n    React.useEffect(() => {\r\n        const okta = localStorage.getItem('okta-token-storage');\r\n        if (okta !== '{}' && okta !== null && okta !== undefined) {\r\n\r\n            initialUtliz();\r\n        }\r\n    }, []);\r\n\r\n\r\n    const initialUtliz = async () => {\r\n        localStorage.removeItem('role');\r\n        const tokenOKTA = await getToken();\r\n        console.log(tokenOKTA);\r\n        // if(tokenOKTA === null){\r\n        //  authService.logout('/');\r\n        // }\r\n        const result_profile = await getUserProfile();\r\n        const result_attributes = await getUserAttributes(result_profile);\r\n        if (result_attributes) {\r\n            await getUserRole(result_attributes.profile, tokenOKTA);\r\n        }\r\n\r\n        setInterval(()=>{\r\n            setAppLoader({...appLoader, loading: true});\r\n        },4000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const getToken = async () => {\r\n        const tokenResult = await authState.accessToken;\r\n        setToken(tokenResult);\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserProfile = async () => {\r\n\r\n        const tokenResult = await authService.getUser();\r\n        if (tokenResult) {\r\n            await setProfile({...profile, profile: tokenResult});\r\n        }\r\n        return Promise.resolve(tokenResult);\r\n    }\r\n\r\n\r\n    const getUserAttributes = async (UserData) => {\r\n        if (UserData) {\r\n            const AllAttributes = await fetchUserProfile(UserData.sub);\r\n            if (AllAttributes) {\r\n                await setAttributes({...attributes, attributes: AllAttributes.profile})\r\n            }\r\n            return Promise.resolve(AllAttributes);\r\n        }\r\n    }\r\n\r\n    const getUserRole = async (profile, tokenOKTA) => {\r\n        var organization_parent = '';\r\n        if (profile.organization_parent) {\r\n            const bit = profile.organization_parent.toLowerCase();\r\n            if (bit === 'yes') {\r\n                organization_parent = 1;\r\n            }\r\n        }\r\n        try {\r\n            const get_role = await checkRole(profile.organization, organization_parent ? organization_parent : 0, tokenOKTA);\r\n\r\n            if (get_role) {\r\n                if (get_role.status === true) {\r\n                    await localStorage.setItem('role', get_role.data.role);\r\n                    return Promise.resolve(setRole({...role, role: get_role.data.role}));\r\n                }\r\n                if (get_role.status === false) {\r\n                    return Promise.resolve(addError(get_role.message));\r\n                }\r\n            }\r\n\r\n\r\n            if (get_role.message) {\r\n                addError(get_role.message)\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addError = (data) => {\r\n        setErrorList(errorList => [...errorList, data])\r\n    }\r\n\r\n    const addTitle = (data) => {\r\n        setTitle(data);\r\n    }\r\n\r\n\r\n    const removeError = (index) => {\r\n        var array = [...errorList]; // make a separate copy of the array\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            setErrorList(array)\r\n        }\r\n    }\r\n\r\n    const changeDrawer = (data) => {\r\n        setDrawerState(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                ...token,\r\n                ...profile,\r\n                ...attributes,\r\n                ...appLoader,\r\n                ...role,\r\n                title,\r\n                errorList,\r\n                addError,\r\n                addTitle,\r\n                drawerState,\r\n                changeDrawer,\r\n                removeError\r\n            }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(UserContextProvider);\r\n","import React, {useContext} from 'react';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MainListItems from '../routes/listItems';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Footer from './Footer';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loader from 'react-loader';\r\nimport {SnackbarProvider} from 'notistack';\r\n// import Loader from 'react-loader-spinner'\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {withOktaAuth} from \"@okta/okta-react\";\r\n\r\nimport {SemipolarLoading} from 'react-loadingg';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: 'Poppins, sans-serif',\r\n    },\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                '@font-face': 'Poppins, sans-serif',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        backgroundColor: '#1e1e2d'\r\n    },\r\n    toolbarIcon: {\r\n        // color: '#434d6b',\r\n        // backgroundColor: '#434d6b',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: '#ffffff',\r\n        // backgroundColor: '#ffffff',\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n\r\n    chevronLeftIcon: {\r\n        color: '#ffffff'\r\n    },\r\n\r\n    title: {\r\n        marginLeft: 10,\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n\r\n    button: {\r\n        textTransform: \"none\",\r\n        fontSize: 14\r\n    },\r\n    drawerPaper: {\r\n\r\n        backgroundColor: '#1e1e2d',\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        backgroundColor: '#f0f0f6'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n\r\n    listColor: {\r\n        color: \"#ffffff\"\r\n    }\r\n\r\n\r\n}));\r\n\r\nexport default withOktaAuth(function Layout(props) {\r\n\r\n    const {loading, attributes, role, title, drawerState, changeDrawer, profile, errorList} = useContext(UserContext);\r\n    const checkRole = '';\r\n    // const theme = useTheme();\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery({maxWidth: 767});\r\n    // const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (role) {\r\n            console.log(errorList);\r\n        }\r\n    }, [role])\r\n\r\n    React.useEffect(() => {\r\n        if (!matches) {\r\n            changeDrawer(true);\r\n        }\r\n        if (matches) {\r\n            changeDrawer(false);\r\n        }\r\n    }, [matches])\r\n    const handleDrawerOpen = () => {\r\n        changeDrawer(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        changeDrawer(false);\r\n    };\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n            {role ?\r\n                <SnackbarProvider maxSnack={3}>\r\n                    <div className={classes.root}>\r\n                        <CssBaseline/>\r\n                        <AppBar position=\"absolute\"\r\n                                className={clsx(classes.appBar, drawerState && classes.appBarShift)}>\r\n\r\n                            <Toolbar className={classes.toolbar}>\r\n                                <IconButton\r\n                                    edge=\"start\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={handleDrawerOpen}\r\n                                    className={clsx(classes.menuButton, drawerState && classes.menuButtonHidden)}\r\n                                >\r\n\r\n                                    <MenuIcon/>\r\n                                </IconButton>\r\n                                <Typography component=\"h1\" variant=\"h6\" noWrap className={classes.title}>\r\n                                    {title}\r\n                                </Typography>\r\n                                {/*<IconButton color=\"inherit\">*/}\r\n                                {/*    <Badge badgeContent={4} color=\"secondary\">*/}\r\n                                {/*        <NotificationsIcon/>*/}\r\n                                {/*    </Badge>*/}\r\n                                {/*</IconButton>*/}\r\n\r\n                                <IconButton color=\"inherit\" onClick={handleClick}>\r\n                                    <Typography variant=\"h5\" className={clsx(classes.title, classes.button)}>\r\n                                        Hi, {profile.name ? profile.name : ''}\r\n                                    </Typography>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    anchorOrigin={{\r\n                                        vertical: \"bottom\",\r\n                                        horizontal: \"right\"\r\n                                    }}\r\n                                    id=\"menu-list-grow\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={openMenu}\r\n                                    onClose={handleClose}\r\n                                    TransitionComponent={Fade}\r\n                                    getContentAnchorEl={null}\r\n                                >\r\n\r\n\r\n                                    <MenuItem onClick={() => {\r\n                                        props.authService.logout('/')\r\n                                    }}>Logout</MenuItem>\r\n                                </Menu>\r\n\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <Drawer\r\n                            variant=\"permanent\"\r\n                            classes={{\r\n                                paper: clsx(classes.drawerPaper, !drawerState && classes.drawerPaperClose),\r\n                            }}\r\n                            open={drawerState}\r\n                            onClose={handleDrawerToggle}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            <div className={classes.toolbarIcon}>\r\n                                <Typography component=\"h3\" variant=\"h6\" color=\"inherit\" noWrap\r\n                                            className={classes.title}>\r\n                                    AgentAdmin\r\n                                </Typography>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    <ChevronLeftIcon className={classes.chevronLeftIcon}/>\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider/>\r\n                            {role === 'Administrator' ?\r\n                                <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                            {role === 'Child Entity' ?\r\n                                <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                            {role === 'Parent Organization' ?\r\n                                <List className={classes.listColor}><MainListItems/></List> : ''}\r\n\r\n                        </Drawer>\r\n                        <main className={classes.content}>\r\n                            <div className={classes.appBarSpacer}/>\r\n                            <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n                                {props.children}\r\n\r\n                                <Box pt={4}>\r\n                                    <Footer/>\r\n                                </Box>\r\n                            </Container>\r\n                        </main>\r\n                    </div>\r\n                </SnackbarProvider>\r\n                : <SemipolarLoading className={'Test'} size={'large'} color={'#1e1e2d'}/>}\r\n\r\n        </>\r\n\r\n    );\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport Layout from \"../layout/Layout\";\r\n\r\nexport default withOktaAuth(class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    async login() {\r\n        this.props.authService.login();\r\n    }\r\n\r\n    async logout() {\r\n        this.props.authService.logout('/');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.authState.isPending) return null;\r\n\r\n        const button = this.props.authState.isAuthenticated ?\r\n            <button onClick={this.logout}>Logout</button> :\r\n            <button onClick={this.login}>Login</button>;\r\n\r\n        return (\r\n            <Layout>\r\n            <div>\r\n                <Link to='/'>Home</Link><br/>\r\n                <Link to='/protected'>Protected</Link><br/>\r\n                <Link to='/dashboard'>Dashboard</Link><br/>\r\n                {button}\r\n            </div>\r\n            </Layout>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nexport default class OktaSignInWidget extends Component {\r\n    componentDidMount() {\r\n        const el = ReactDOM.findDOMNode(this);\r\n        this.widget = new OktaSignIn({\r\n            baseUrl: process.env.REACT_APP_OKTA_BASE_URL,\r\n            features: {\r\n                // idpDiscovery: true,\r\n                showPasswordToggleOnSignInPage: true\r\n            },\r\n            // idps: [\r\n            //     {type: process.env.REACT_APP_OKTA_IDPS_TYPE, id: process.env.REACT_APP_OKTA_IDPS_ID},\r\n            // ],\r\n            clientId: process.env.REACT_APP_OKTA_CLIENT_ID,\r\n            redirectUri: process.env.REACT_APP_OKTA_REDIRECT_URI,\r\n            authScheme: 'OAUTH2',\r\n            logo: '/media/agentadmin/logo/aa_full.png',\r\n            authParams: {\r\n                issuer: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default',\r\n                display: 'page',\r\n                responseType: ['id_token', 'token'],\r\n                scopes: ['openid', 'email', 'profile', 'address', 'phone'],\r\n                authorizeUrl: process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default/v1/authorize',\r\n            },\r\n\r\n        });\r\n        this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.widget.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div/>;\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography className={'copyright'} variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                AgentAdmin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paperContainer: {\r\n        backgroundColor: '#000000'\r\n    },\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    onSuccess(res) {\r\n        if (res.status === 'SUCCESS') {\r\n            return this.props.authService.redirect({\r\n                sessionToken: res.session.token\r\n            });\r\n        } else {\r\n            // The user can be in another authentication state that requires further action.\r\n            // For more information about these states, see:\r\n            //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n        }\r\n    }\r\n\r\n    onError(err) {\r\n        console.log('error logging in', err);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        if (this.props.authState.isPending && this.props.authState.isAuthenticated) return null;\r\n        return this.props.authState.isAuthenticated ?\r\n            <Redirect to={{pathname: '/'}}/> :\r\n\r\n            <div className={'paperContainer'}>\r\n                <Particles   style={{\r\n                    width: '100%',\r\n                    position:'absolute'\r\n                }} className={'particles'} />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Box className={'okta-custom'} mt={3}>\r\n                            <OktaSignInWidget\r\n                                baseUrl={this.props.baseUrl}\r\n                                onSuccess={this.onSuccess}\r\n                                onError={this.onError}/>\r\n                        </Box>\r\n                    </div>\r\n                    <Box>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(useStyles)(withOktaAuth(Login));\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport deburr from 'lodash.deburr';\r\nimport Downshift from 'downshift';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst autoCompleteClientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nconst autoCompleteClient = autoCompleteClientBuilder.buildUsAutocompleteClient();\r\n\r\n\r\n\r\n\r\nexport default function IntegrationDownshift(props) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        container: {\r\n            flexGrow: 1,\r\n            position: 'relative',\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n            marginTop: theme.spacing(1),\r\n            left: 0,\r\n            right: 0,\r\n            width: props.width ?? props.width,\r\n        },\r\n        chip: {\r\n            margin: theme.spacing(0.5, 0.25),\r\n        },\r\n        inputRoot: {\r\n            flexWrap: 'wrap',\r\n        },\r\n        inputInput: {\r\n            width: 'auto',\r\n            flexGrow: 1,\r\n        },\r\n        divider: {\r\n            height: theme.spacing(2),\r\n        },\r\n    }));\r\n    const [suggestions, setSuggestions] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [getFinal, setGetFinal] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        sendDatatoParent();\r\n    },[getFinal,value])\r\n\r\n    React.useEffect(() => {\r\n        resetState();\r\n    },[props.reset])\r\n\r\n    const resetState = () => {\r\n        if(props.reset === 'reset') {\r\n            setValue('');\r\n            setGetFinal([]);\r\n        }\r\n    }\r\n\r\n    const sendDatatoParent = () => {\r\n        // if(props.reset == 'reset') {\r\n        //     setSuggestions([]);\r\n        //     setValue('');\r\n        //     setGetFinal([]);\r\n        // }\r\n        // const [addressobject, addressvalue] = props;\r\n        if(getFinal !== undefined && getFinal.length !== 0) {\r\n            props.addressObject(getFinal)\r\n        } else {\r\n            props.addressObject(value)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleStateChange = changes => {\r\n        if (changes.hasOwnProperty('selectedItem')) {\r\n            setValue(changes.selectedItem);\r\n            const value = changes.selectedItem;\r\n            const newObject = suggestions.find((value) => value.text === changes.selectedItem);\r\n            setGetFinal(newObject);\r\n        } else if (changes.hasOwnProperty('inputValue')) {\r\n            setGetFinal([]);\r\n            setValue(changes.inputValue);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const smartyHandler = async (event) => {\r\n        const lookup = await new SmartyStreetsSDK.usAutocomplete.Lookup(event.target.value);\r\n        autoCompleteClient.send(lookup)\r\n            .then(response => {\r\n                const add = response.result\r\n                setSuggestions(add);\r\n            })\r\n    }\r\n\r\n\r\n    function renderInput(inputProps) {\r\n        const {disabled, required, error, className, helperText} = props\r\n        const {InputProps, classes, ref, ...other} = inputProps;\r\n        return (\r\n            <TextField\r\n\r\n                className={className}\r\n                disabled={disabled}\r\n                required\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={(event) => smartyHandler(event)}\r\n                InputProps={{\r\n                    inputRef: ref,\r\n                    classes: {\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    },\r\n                    ...InputProps,\r\n                }}\r\n                {...other}\r\n            />\r\n        );\r\n    }\r\n\r\n    function renderSuggestion(suggestionProps) {\r\n\r\n        const {suggestion, index, itemProps, highlightedIndex, selectedItem} = suggestionProps;\r\n        const isHighlighted = highlightedIndex === index;\r\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n        return (\r\n            <MenuItem\r\n\r\n                {...itemProps}\r\n                selected={isHighlighted}\r\n                key={suggestion.text}\r\n                component=\"div\"\r\n                style={{fontWeight: isSelected ? 500 : 400,}}>\r\n                {suggestion.text}\r\n            </MenuItem>\r\n        );\r\n    }\r\n\r\n    function getSuggestions(value, {showEmpty = false} = {}) {\r\n        const inputValue = deburr(value.trim()).toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        let count = 0;\r\n\r\n        return inputLength === 0 && !showEmpty\r\n            ? inputValue\r\n            : suggestions.filter(suggestion => {\r\n                const keep =\r\n                    count < 5 && suggestion.text.slice(0, inputLength).toLowerCase() === inputValue;\r\n                if (keep) {\r\n                    count += 1;\r\n                }\r\n                return keep;\r\n            });\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div   className={classes.root}>\r\n            <Downshift selectedItem={value} onStateChange={handleStateChange} id=\"downshift-simple\">\r\n                {({\r\n                      getInputProps,\r\n                      getItemProps,\r\n                      getLabelProps,\r\n                      getMenuProps,\r\n                      highlightedIndex,\r\n                      inputValue,\r\n                      isOpen,\r\n                      selectedItem,\r\n                      clearSelection,\r\n                      getRootProps,\r\n                      onInputValueChange,\r\n                  }) => {\r\n                    const {onBlur, onFocus, ...inputProps} = getInputProps({\r\n                        placeholder: 'Address',\r\n                    });\r\n                    return (\r\n                        <div className={classes.container}>\r\n                            {renderInput({\r\n                                fullWidth: true,\r\n                                classes,\r\n                                label: 'Address',\r\n                                InputLabelProps: getLabelProps({shrink: true}),\r\n                                InputProps: {onBlur, onFocus},\r\n                                inputProps,\r\n                            })}\r\n\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square>\r\n                                        {inputValue !== '' ? getSuggestions(inputValue)?.map((suggestion, index) =>\r\n                                            renderSuggestion({\r\n                                                suggestion,\r\n                                                index,\r\n                                                itemProps: getItemProps({item: suggestion.text, index}),\r\n                                                highlightedIndex,\r\n                                                selectedItem,\r\n\r\n                                            }),\r\n                                        ) : null}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Downshift>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Layout from \"../layout/Layout\";\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {\r\n    ContactTypeList,\r\n    EntitytypesList,\r\n    StateRegionList,\r\n    createEntity,\r\n    lorexFileUpload\r\n} from \"../api/enitity.crud\";\r\n\r\nimport utils from \"smartystreets-javascript-sdk-utils\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport {UserContext} from '../context/UserContext';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n\r\n    label: {\r\n        fontSize: 14\r\n    },\r\n\r\n    dense: {\r\n        marginTop: 16,\r\n        fontSize: 14\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n\r\n    fileError: {\r\n        color: '#fd397a'\r\n    },\r\n\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\nfunction AddEntity() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes,addTitle } = useContext(UserContext);\r\n    addTitle('Add New Entity');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [FillingStructureData, setFillingStructureData] = React.useState([])\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    const [successMessage, setSuccessMessage] = React.useState(false);\r\n    var d = new Date();\r\n    const fiscal = d.getFullYear() + '-12-31'\r\n\r\n    //form state\r\n    const [inputName, setInputName] = React.useState({value: '', error: ' ',});\r\n    const [inputComplianceOnly, setInputComplianceOnly] = React.useState({value: false, error: ' '});\r\n    const [inputFillingState, setInputFillingState] = React.useState({value: '', error: ' '});\r\n    const [inputFillingStructure, setInputFillingStructure] = React.useState({value: '', error: ' '});\r\n    const [inputFormationDate, setInputFormationDate] = React.useState({value: '', error: ' '});\r\n    const [inputFiscalDate, setInputFiscalDate] = React.useState({value: fiscal, error: ' '});\r\n\r\n    const [inputFirstName, setInputFirstName] = React.useState({value: '', error: ' '});\r\n    const [inputLastName, setInputLastName] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationAddress, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputEIN, setInputEIN] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputNotificationZip, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputBusinessPurpose, setInputBusinessPurpose] = React.useState({value: '', error: ' '});\r\n    const [inputForeign, setInputForeign] = React.useState({value: false, error: ' '});\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true)\r\n\r\n    };\r\n\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                console.log('City', addressObject.city);\r\n                console.log('State', addressObject.state);\r\n                setInputNotificationCity({...inputNotificationCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputNotificationState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        fetchDataforDropdownsContactTypeList()\r\n        fetchDataforDropdownsFillingStructureData();\r\n        fetchDataforDropdownsStateRegion();\r\n    }, [])\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await ContactTypeList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n                setContactType(response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fetchDataforDropdownsFillingStructureData = async () => {\r\n\r\n        var EntitytypesListLocal = await JSON.parse(localStorage.getItem(\"EntitytypesList\"));\r\n        if (EntitytypesListLocal) {\r\n            setFillingStructureData(EntitytypesListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await EntitytypesList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"EntitytypesList\", JSON.stringify(response.data));\r\n                setFillingStructureData(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            if (attributes) {\r\n                const response = await StateRegionList(attributes.organization, attributes.email);\r\n                localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n                setStateRegion(response.data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = (value) => {\r\n        setAddressValue(value);\r\n    }\r\n\r\n\r\n    const fileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            setLoading(true);\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n            let formData = new FormData();\r\n            formData.append('file', e.target.files[0]);\r\n            const filename = e.target.files[0].name;\r\n            const response = await lorexFileUpload(formData);\r\n            if (response.error === false) {\r\n                setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n                setInputFileSize({...inputFileSize, value: response.file_size});\r\n\r\n                if (filename) {\r\n                    setInputFileName({...inputFileName, value: filename});\r\n                    setLoading(false);\r\n                }\r\n            } else {\r\n                setInputFiling({...inputFiling, error: response.message.file[0]});\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setInputFiling({...inputFiling, value: '', success: ' '});\r\n            setInputFileSize({...inputFileSize, value: ''});\r\n            setInputFileName({...inputFileName, value: ''});\r\n        }\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n\r\n                setInputComplianceOnly({value: false, error: ' '})\r\n                setInputFillingState({value: '', error: ' '});\r\n                setInputFillingStructure({value: '', error: ' '});\r\n                setInputFormationDate({value: '', error: ' '});\r\n                setInputFiscalDate({value: fiscal, error: ' '});\r\n                setInputName({value: '', error: ' '});\r\n                setInputNotificationEmail({value: '', error: ' '});\r\n                setInputNotificationPhone({value: '', error: ' '});\r\n                setInputNotificationAddress({value: '', error: ' '});\r\n                setInputNotificationCity({value: '', error: ' '});\r\n                setInputNotificationState({value: '', error: ' '});\r\n                setInputNotificationZip({value: '', error: ' '});\r\n                setInputEIN({value: '', error: ' ', success: ' '});\r\n                setInputFiling({value: '', error: ' ', success: ' '})\r\n                setInputBusinessPurpose({value: '', error: ' '})\r\n                setInputForeign({value: false, error: ' '});\r\n                setInputFileName({value: '', error: ' ', success: ' '});\r\n                setInputFileSize({value: '', error: ' ', success: ' '});\r\n\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const addressCheck = async (event) => {\r\n\r\n\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputNotificationCity.value;\r\n        lookup1.state = inputNotificationState.value;\r\n        lookup1.zipCode = inputNotificationZip.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                createEntitysubmit(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setAddressReset('');\r\n        var formsubmit = true;\r\n        if (inputEIN.value) {\r\n            var value = parseInt(inputEIN.value)\r\n            if (typeof value === 'number') {\r\n                if (value.toString().length == 9) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setLoading(false);\r\n                    formsubmit = false;\r\n                    setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n                }\r\n            } else {\r\n                setLoading(false);\r\n                formsubmit = false;\r\n                setInputEIN({...inputEIN, error: \"Please enter 9 digits number\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (inputNotificationZip.value) {\r\n            var zip = parseInt(inputNotificationZip.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length == 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputNotificationZip, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputNotificationCity.value && inputNotificationState.value && inputNotificationZip.value !== '') {\r\n                    formsubmit = false;\r\n                    const response = addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            createEntitysubmit(event, userResponse);\r\n        }\r\n    }\r\n\r\n\r\n    const createEntitysubmit = async (event) => {\r\n\r\n        setLoading(true);\r\n        setAddressReset('');\r\n        setInputFiling({...inputFiling, value: '', success: ' ', error: ' '});\r\n        setInputFileSize({...inputFileSize, value: ''});\r\n        setInputFileName({...inputFileName, value: ''});\r\n        setInputName({...inputName, error: ' '})\r\n        setInputComplianceOnly({...inputComplianceOnly, error: ' '})\r\n        setInputFillingState({...inputFillingState, error: ' '})\r\n        // setInputFirstName({...inputFirstName, error: ' '})\r\n        // setInputLastName({...inputLastName, error: ' '})\r\n        setInputFillingStructure({...inputFillingStructure, error: ' '})\r\n        setInputFormationDate({...inputFormationDate, error: ' '})\r\n        setInputFiscalDate({...inputFiscalDate, error: ' '})\r\n        setInputNotificationEmail({...inputNotificationEmail, error: ' '})\r\n        setInputNotificationPhone({...inputNotificationPhone, error: ' '})\r\n        setInputNotificationAddress({...inputNotificationAddress, error: ' '})\r\n        setInputNotificationCity({...inputNotificationCity, error: ' '})\r\n        setInputNotificationState({...inputNotificationState, error: ' '})\r\n        setInputNotificationZip({...inputNotificationZip, error: ' '})\r\n        setInputBusinessPurpose({...inputBusinessPurpose, error: ' '})\r\n        setInputEIN({...inputEIN, error: ' '})\r\n        setInputForeign({...inputForeign, error: ' '});\r\n        setInputFileSize({...inputFileSize, error: ' '})\r\n        let formData = new FormData();\r\n\r\n        formData.append('inputName', inputName.value)\r\n        formData.append('inputComplianceOnly', inputComplianceOnly.value)\r\n        formData.append('inputForeign', inputForeign.value)\r\n        formData.append('inputFillingState', inputFillingState.value)\r\n        formData.append('inputFillingStructure', inputFillingStructure.value)\r\n        formData.append('inputFormationDate', inputFormationDate.value)\r\n        formData.append('inputFiscalDate', inputFiscalDate.value)\r\n        // formData.append('inputFirstName', inputFirstName.value)\r\n        // formData.append('inputLastName', inputLastName.value)\r\n        formData.append('inputNotificationEmail', inputNotificationEmail.value)\r\n        formData.append('inputNotificationPhone', inputNotificationPhone.value)\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputNotificationAddress', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputNotificationAddress', addressObject)\r\n        }\r\n        formData.append('inputEIN', inputEIN.value)\r\n\r\n        if (inputNotificationCity.value) {\r\n            formData.append('inputNotificationCity', inputNotificationCity.value);\r\n        } else {\r\n            formData.append('inputNotificationCity', '');\r\n        }\r\n        if (inputNotificationState.value) {\r\n            formData.append('inputNotificationState', inputNotificationState.value);\r\n        } else {\r\n            formData.append('inputNotificationState', '');\r\n        }\r\n        formData.append('inputNotificationZip', inputNotificationZip.value);\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputBusinessPurpose', inputBusinessPurpose.value)\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n\r\n        const response = await createEntity(formData);\r\n        if (response.field_error) {\r\n            setLoading(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n                if (key === 'inputName') {\r\n                    setInputName({...inputName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputComplianceOnly') {\r\n                    setInputComplianceOnly({...inputComplianceOnly, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFillingState') {\r\n                    setInputFillingState({...inputFillingState, error: response.field_error[key]})\r\n                }\r\n\r\n                // if (key === 'inputFirstName') {\r\n                //     setInputFirstName({...inputFirstName, error: response.field_error[key]})\r\n                // }\r\n                //\r\n                // if (key === 'inputLastName') {\r\n                //     setInputLastName({...inputLastName, error: response.field_error[key]})\r\n                // }\r\n                if (key === 'inputFillingStructure') {\r\n                    setInputFillingStructure({...inputFillingStructure, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputFormationDate') {\r\n                    setInputFormationDate({...inputFormationDate, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationEmail') {\r\n                    setInputNotificationEmail({...inputNotificationEmail, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationPhone') {\r\n                    setInputNotificationPhone({...inputNotificationPhone, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationAddress') {\r\n                    setInputNotificationAddress({...inputNotificationAddress, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputNotificationCity') {\r\n                    setInputNotificationCity({...inputNotificationCity, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationState') {\r\n                    setInputNotificationState({...inputNotificationState, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputNotificationZip') {\r\n                    setInputNotificationZip({...inputNotificationZip, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputBusinessPurpose') {\r\n                    setInputBusinessPurpose({...inputBusinessPurpose, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n                if (key === 'inputEIN') {\r\n                    setInputEIN({...inputEIN, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputFiscalDate') {\r\n                    // setInputFiscalDate(inputFiscalDate => ...inputFiscalDate, error:response.field_error[key])\r\n                    setInputFiscalDate({...inputFiscalDate, value: fiscal, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n        if (response) {\r\n            if (response.status) {\r\n                await resetForm();\r\n                setLoading(false);\r\n                setSuccessMessage(true);\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n\r\n\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n    }\r\n    return (\r\n        <Layout>\r\n            <Paper className={classes.paper} elevation={3} >\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Please make sure that you have entered it correctly.\r\n                            If you proceed and we are unable to validate your address it may cause delays\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                            Accept\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Grid container spacing={0}>\r\n                    <form className={classes.container} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    value={inputName.value}\r\n                                    disabled={loading}\r\n                                    required\r\n                                    error={inputName.error !== ' '}\r\n                                    onChange={e => setInputName({...inputName, value: e.target.value})}\r\n                                    id=\"inputName\"\r\n                                    label=\"Entity Name\"\r\n                                    className={clsx(classes.textField, classes.dense, classes.label)}\r\n                                    margin=\"dense\"\r\n                                    helperText={inputName.error}\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={loading}\r\n                                    error={inputForeign.error !== ' '}\r\n                                    onChange={e => setInputForeign({\r\n                                        ...inputForeign,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputForeign.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Foreign Qualified\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-3'}>\r\n                                <FormControlLabel\r\n                                    disabled={loading}\r\n                                    error={inputComplianceOnly.error !== ' '}\r\n                                    onChange={e => setInputComplianceOnly({\r\n                                        ...inputComplianceOnly,\r\n                                        value: e.target.checked\r\n                                    })}\r\n                                    checked={inputComplianceOnly.value}\r\n                                    control={<Checkbox color=\"primary\"/>}\r\n                                    label=\"Compliance Only\"\r\n                                    className={clsx(classes.textField, classes.checkbox)}\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingState.error !== ' '}>\r\n                                    <InputLabel className={clsx(classes.label)} htmlFor=\"age-native-simple\">Entity\r\n                                        State</InputLabel>\r\n                                    <Select\r\n                                        disabled={loading}\r\n                                        required\r\n                                        native\r\n                                        error={inputFillingState.error !== ' '}\r\n                                        value={inputFillingState.value}\r\n\r\n                                        onChange={e => setInputFillingState({\r\n                                            ...inputFillingState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingState',\r\n                                            id: 'inputFillingState',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)\r\n\r\n                                        }\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputFillingStructure.error !== ' '}>\r\n                                    <InputLabel htmlFor=\"age-native-simple\">Entity Structure</InputLabel>\r\n                                    <Select\r\n                                        disabled={loading}\r\n                                        required\r\n                                        native\r\n                                        error={inputFillingStructure.error !== ' '}\r\n                                        value={inputFillingStructure.value}\r\n                                        onChange={e => setInputFillingStructure({\r\n                                            ...inputFillingStructure,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputFillingStructure',\r\n                                            id: 'inputFillingStructure',\r\n                                        }}>\r\n                                        <option value=\"\"/>\r\n                                        {FillingStructureData?.map((anObjectMapped, index) => <option\r\n                                            key={index}\r\n                                            value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputFillingStructure.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    required\r\n                                    label=\"Formation Date\"\r\n                                    format={'Y-M-d'}\r\n                                    error={inputFormationDate.error !== ' '}\r\n                                    value={inputFormationDate.value}\r\n                                    onChange={e => setInputFormationDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFormationDate',\r\n                                        id: 'inputFormationDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    required\r\n                                    label=\"Fiscal Date\"\r\n                                    defaultValue={inputFiscalDate.value}\r\n                                    error={inputFiscalDate.error !== ' '}\r\n                                    value={inputFiscalDate.value}\r\n                                    onChange={e => setInputFiscalDate({\r\n                                        ...inputFormationDate,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputFiscalDate',\r\n                                        id: 'inputFiscalDate',\r\n                                    }}\r\n\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.textFieldOther, classes.dense)}\r\n\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    required\r\n\r\n                                    type=\"email\"\r\n                                    value={inputNotificationEmail.value}\r\n                                    onChange={e => setInputNotificationEmail({\r\n                                        ...inputNotificationEmail,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationEmail',\r\n                                        id: 'inputNotificationEmail',\r\n                                    }}\r\n                                    error={inputNotificationEmail.error !== ' '}\r\n                                    helperText={inputNotificationEmail.error}\r\n                                    label=\"Notification Email\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    required\r\n                                    value={inputNotificationPhone.value}\r\n                                    onChange={e => setInputNotificationPhone({\r\n                                        ...inputNotificationPhone,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationPhone',\r\n                                        id: 'inputNotificationPhone',\r\n                                    }}\r\n                                    error={inputNotificationPhone.error !== ' '}\r\n                                    helperText={inputNotificationPhone.error}\r\n                                    label=\"Notification Phone\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <Autocomplete\r\n                                    disabled={loading}\r\n                                    required\r\n                                    width={''}\r\n                                    addressObject={addressObjectChangeHandler}\r\n                                    addressValue={addressValueChangeHandler}\r\n                                    reset={addressReset}\r\n                                    onChange={e => setAddressValue({\r\n                                        ...addressValue,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationAddress',\r\n                                        id: 'inputNotificationAddress',\r\n                                    }}\r\n                                    error={inputNotificationAddress.error !== ' '}\r\n                                    helperText={inputNotificationAddress.error}\r\n                                    className={clsx(classes.dense)}\r\n                                />\r\n                            </div>\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    value={inputEIN.value}\r\n                                    onChange={e => setInputEIN({\r\n                                        ...inputEIN,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputEIN',\r\n                                        id: 'inputEIN',\r\n                                    }}\r\n                                    error={inputEIN.error !== ' '}\r\n                                    helperText={inputEIN.error}\r\n                                    label=\"EIN\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    disabled={loading}\r\n                                    required\r\n                                    native\r\n                                    error={inputNotificationCity.error !== ' '}\r\n                                    helperText={inputNotificationCity.error}\r\n                                    value={inputNotificationCity.value || ''}\r\n                                    onChange={e => setInputNotificationCity({\r\n                                        ...inputNotificationCity,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationCity',\r\n                                        id: 'inputNotificationCity',\r\n                                    }}\r\n                                    renderValue={inputNotificationCity.value}\r\n                                    label=\"City\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-4'}>\r\n                                <FormControl className={clsx(classes.selectField)}\r\n                                             error={inputNotificationState.error !== ' '}>\r\n                                    <InputLabel>\r\n                                        State/Region/Province\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        disabled={loading}\r\n                                        required\r\n                                        native\r\n                                        // renderValue={inputNotificationState.value || ''}\r\n                                        value={inputNotificationState.value || ''}\r\n                                        onChange={e => setInputNotificationState({\r\n                                            ...inputNotificationState,\r\n                                            value: e.target.value\r\n                                        })}\r\n                                        inputProps={{\r\n                                            name: 'inputNotificationState',\r\n                                            id: 'inputNotificationState',\r\n                                        }}\r\n                                        error={inputNotificationState.error !== ' '}\r\n                                        helperText={inputNotificationState.error}\r\n                                    >\r\n                                        <option value=\"\"/>\r\n                                        {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                             value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                    </Select>\r\n                                    <FormHelperText>{inputNotificationState.error}</FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <TextField\r\n                                    disabled={loading}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    value={inputNotificationZip.value}\r\n                                    onChange={e => setInputNotificationZip({\r\n                                        ...inputNotificationZip,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    inputProps={{\r\n                                        name: 'inputNotificationZip',\r\n                                        id: 'inputNotificationZip',\r\n                                    }}\r\n                                    error={inputNotificationZip.error !== ' '}\r\n                                    helperText={inputNotificationZip.error}\r\n                                    label=\"Postal / Zip Code\"\r\n                                    className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                />\r\n                            </div>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={loading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUploading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                {inputFiling.success !== ' ' ? (<span>{inputFiling.success}</span>) : ' '}\r\n                                {inputFiling.error !== ' ' ? (\r\n                                    <span className={clsx(classes.fileError)}>{inputFiling.error}</span>) : ' '}\r\n                            </div>\r\n                            <div className={'col-md-12'}>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    disabled={loading}\r\n                                    placeholder=\"Business Purpose\"\r\n                                    value={inputBusinessPurpose.value}\r\n                                    error={inputBusinessPurpose.error !== ' '}\r\n                                    helperText={inputBusinessPurpose.error}\r\n                                    onChange={e => setInputBusinessPurpose({\r\n                                        ...inputBusinessPurpose,\r\n                                        value: e.target.value\r\n                                    })}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'inputBusinessPurpose',\r\n                                        id: 'inputBusinessPurpose',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {loading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n                                    {/*<input disabled={loading}*/}\r\n                                    {/*       className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                    {/*       type=\"reset\"  value=\"Reset\"/>*/}\r\n\r\n                                    <input disabled={loading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Create New Entity\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddEntity);\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ComplianceTaskList(props) {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [data, setData] = React.useState(props.data)\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={[\r\n                    {\r\n                        icon: 'check',\r\n                        tooltip: 'Mark this task as complete',\r\n                        position: 'row',\r\n                        onClick: (event, rowData) => {\r\n\r\n\r\n                        }\r\n                    }\r\n\r\n                ]}\r\n                title={props.title !== '' ? props.title : ''}\r\n                options={{\r\n                    selection: props.selection ? props.selection : false,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ComplianceTaskList;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction ContactList(props) {\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n\r\n        <Grid item xs={12}>\r\n            <MaterialTable\r\n                isLoading={loading ? loading : props.loading}\r\n                actions={  props.action ? [\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: props.tooltip ? props.tooltip : 'Add User',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => {\r\n                            if (props.redirect) {\r\n                                history.push(props.url);\r\n                            }\r\n                        }\r\n                    }\r\n                ] : ''}\r\n                title={props.title !== '' ? props.title : ''}\r\n                columns={props.data.columns}\r\n                data={props.data.data}\r\n\r\n            />\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default withRouter(ContactList);\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst ChildDetailedPage = (props) => {\r\n\r\n\r\n\r\n    const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n    const {attributes, loading, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            console.log('here');\r\n            addTitle('Dashboard');\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n\r\n        if(checkRole === 'Child Entity'){\r\n             detailedView = await entityDetail(attributes.organization);\r\n        }\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks);\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError('Status '+ detailedView.errors.status +' '+ detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${HOST}/download/file/${rowData.fid}?name=${rowData.name}`}>\r\n                    <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(ChildDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from 'react';\nimport MaterialTable from \"material-table\";\nimport Layout from \"../layout/Layout\";\nimport {entityList} from \"../api/enitity.crud\";\nimport {UserContext} from '../context/UserContext';\nimport {withOktaAuth} from '@okta/okta-react';\nimport {useHistory} from \"react-router-dom\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Link from '@material-ui/core/Link';\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {amber, green} from \"@material-ui/core/colors\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ChildDetailedPage from '../entity/ChildDetailedPage';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n\n    adjustment: {\n        marginRight: '5px',\n    },\n\n    companyinfo: {\n        listStyle: 'none',\n        padding: '0px',\n        minHeight: '100px'\n\n    },\n    listItem: {\n        marginBottom: '5px'\n    },\n\n    errorMessage: {\n        marginBottom: '5px'\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n\n}));\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles();\n    const {className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n\n            elevation={6} variant=\"filled\"\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n}\n\n\nfunction Dashboard(props) {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\n    const checkRole = role ? role : localStorage.getItem('role');\n    const [open, setOpen] = React.useState(true);\n    const [entitydata, setEntityData] = React.useState([]);\n    const [componentLoading, setComponentLoading] = React.useState(true);\n    useEffect(() => {\n\n            if(loading === true) {\n                addTitle('Dashboard');\n                if(role === 'Parent Organization' || role === 'Administrator' ) {\n                    asyncDataFetch();\n                }\n            }\n\n    }, [loading])\n\n    const asyncDataFetch = async () => {\n        try {\n            await fetchData();\n        } catch (e){\n            addError('Something when wrong!!');\n        }\n    }\n\n\n    const fetchData = async () => {\n        try {\n            const data = await entityList().then(response => {\n                if (response.data) {\n                    setEntityData(response.data.results);\n                    setComponentLoading(false);\n                }\n\n                if (response.error) {\n                    addError(response.error.message);\n                }\n\n\n            });\n        } catch (e) {\n            addError(e);\n        }\n    }\n\n    const settingData = {\n        columns: [\n\n            {title: 'Name', field: 'name'},\n            {title: 'Entity Structure', field: 'entityStructure'},\n            {title: 'Filing State', field: 'filingState'},\n            {title: 'Formation Date', field: 'formationDate'},\n            {\n                render: rowData => <Link\n                    component=\"button\"\n                    variant=\"body2\"\n                    onClick={() => {\n                        if (rowData.id !== attributes.organization) {\n                            history.push(`/entity/${rowData.id}`);\n                        } else {\n                            history.push(`/entity`);\n                        }\n                    }}>\n                    <VisibilityIcon/>\n                </Link>\n            },\n        ],\n        data: entitydata,\n    };\n\n    return (\n        <>\n\n            <Layout>\n\n                {errorList?.map((value, index) => (\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\n                                              message={value} onClose={()=>{removeError(index)}}/>\n                ))}\n                { checkRole === 'Parent Organization' ?\n                    <div style={{maxWidth: \"100%\"}}>\n                        <MaterialTable\n                            parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                            isLoading={componentLoading}\n                            title={'Entities'}\n                            columns={settingData.columns}\n                            data={settingData.data}\n                            options={{\n                                grouping: true\n                            }}\n                        />\n                    </div> : '' }\n\n                {\n                    checkRole === 'Child Entity' ?\n                        <ChildDetailedPage /> : ''\n                }\n\n\n\n                {\n                    checkRole === 'Administrator' ?\n                        <div style={{maxWidth: \"100%\"}}>\n                            <MaterialTable\n                                parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                                isLoading={componentLoading}\n                                title={'Entities'}\n                                columns={settingData.columns}\n                                data={settingData.data}\n                                options={{\n                                    // grouping: true\n                                }}\n                            />\n                        </div> : ''\n\n                }\n\n            </Layout>\n\n        </>\n\n    )\n}\n\n\nexport default withOktaAuth(Dashboard);\n","import React, {useEffect, useMemo, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {entityDetail, selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst EntityDetailedPage = (props) => {\r\n\r\n    const entity_id = props.match.params.id;\r\n    const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\n    const {loading, attributes, addError, errorList, role, addTitle, profile} = useContext(UserContext);\r\n    const checkRole = role ? role : localStorage.getItem('role');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ' + profile.name)\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n        var detailedView = '';\r\n        if (checkRole === 'Parent Organization' || checkRole === 'Administrator' ) {\r\n            detailedView = await entityDetail(entity_id);\r\n        }\r\n\r\n        if (checkRole === 'Child Entity') {\r\n            detailedView = await selfEntityDetail();\r\n        }\r\n\r\n        if (detailedView.result) {\r\n            setEntitydetail(detailedView.result)\r\n            setContactList(detailedView.result.contacts);\r\n            setAttachmentList(detailedView.result.attachments)\r\n            setTaskList(detailedView.result.tasks)\r\n            setComponentLoading(false);\r\n\r\n        }\r\n\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const formatBytes = (bytes, decimals = 2) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}download/${rowData.fid}?token=${rowData.token}&name=${rowData.name}`}>\r\n\r\n                <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={2}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                    {entitydetail ?\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> :\r\n\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> -</li>\r\n                                            <li className={classes.listItem}><strong>Formation Date:</strong> -</li>\r\n                                            <li className={classes.listItem}><strong>Expiration Date: </strong> -</li>\r\n                                            <li className={classes.listItem}><strong>Tax ID:</strong> -</li>\r\n                                        </ul>\r\n                                    }\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                    {entitydetail ?\r\n\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul> :\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong> - </strong></li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/> -\r\n                                            </li>\r\n                                            <li className={classes.listItem}><BusinessIcon\r\n                                                className={classes.adjustment}/> -\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> -\r\n                                            </li>\r\n                                        </ul>\r\n                                    }\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                    {entitydetail ?\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul> :\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><RoomIcon className={classes.adjustment}/>\r\n                                                <strong>-</strong></li>\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/>-\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                                    }\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${entity_id}`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/dashboard/contact/form/add/${entity_id}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default withOktaAuth(EntityDetailedPage);\r\n\r\n","import React, {useEffect, useContext} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\nimport {useOktaAuth} from \"@okta/okta-react\";\r\nimport ComplianceTaskList from '../entity/ComplianceTaskList';\r\nimport ContactList from '../entity/ContactList';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {selfEntityDetail} from '../api/enitity.crud';\r\nimport {UserContext} from '../context/UserContext';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        height: 200,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst SelfDetailedPage = (props) => {\r\n\r\n\r\n\r\n    const HOST = process.env.REACT_APP_SERVER_API_URL;\r\n    const {attributes, loading, addError, errorList, role, addTitle, profile, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [entitydetail, setEntitydetail] = React.useState()\r\n    const [contactList, setContactList] = React.useState([])\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [taskList, setTaskList] = React.useState([])\r\n\r\n    // const entity_id = attributes.organization;\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Entity - ' + profile.name)\r\n            fetchDetailedProfile();\r\n        }\r\n    }, [loading])\r\n\r\n\r\n    const fetchDetailedProfile = async () => {\r\n\r\n        var detailedView = '';\r\n        if (role === 'Parent Organization' || role === 'Administrator') {\r\n            try {\r\n                detailedView = await selfEntityDetail();\r\n            } catch (e) {\r\n                addError('Something went wrong with the API.');\r\n            }\r\n        }\r\n        if (detailedView.result) {\r\n            new Promise((resolve, reject) => {\r\n                setEntitydetail(detailedView.result)\r\n                setContactList(detailedView.result.contacts);\r\n                setAttachmentList(detailedView.result.attachments)\r\n                setTaskList(detailedView.result.tasks);\r\n                setComponentLoading(false);\r\n                resolve();\r\n            });\r\n        }\r\n        if (detailedView.errors) {\r\n            addError(detailedView.errors.detail);\r\n        }\r\n    }\r\n\r\n\r\n    const contactData = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'Phone', field: 'phone'},\r\n            {title: 'Contact Type', field: 'contactType'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Street', field: 'mailingStreet'},\r\n            {title: 'City', field: 'mailingCity'},\r\n            {title: 'State', field: 'mailingState'},\r\n            {title: 'Zip', field: 'mailingZip'},\r\n\r\n        ],\r\n        data: contactList,\r\n    };\r\n\r\n\r\n    const taskData = {\r\n        columns: [\r\n            {title: 'id', field: 'id'},\r\n            {title: 'Name', field: 'subject'},\r\n            {title: 'Due Date', field: 'dueDate'},\r\n            {title: 'Status', field: 'status'},\r\n        ],\r\n        data: taskList,\r\n    };\r\n\r\n    const attachmentData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}download/${rowData.fid}?token=${rowData.token}&name=${rowData.name}`}>\r\n\r\n                <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Layout>\r\n                <div className={classes.breadcrumbsDiv}>\r\n                    <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                        <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" onClick={(e) => {\r\n                                history.goBack()\r\n                            }}>\r\n                                <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Breadcrumbs>\r\n                    </Paper>\r\n                </div>\r\n\r\n\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={()=> removeError(index)}/>\r\n                ))}\r\n\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <PermIdentityIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Company Info\r\n                                    </Typography>\r\n                                }\r\n                                subheader=\"\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><strong>State ID:</strong> 0</li>\r\n                                            <li className={classes.listItem}><strong>Formation\r\n                                                Date:</strong> {entitydetail.entity.formationDate ? entitydetail.entity.formationDate : ''}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><strong>Registered Agent Expiration\r\n                                                Date: </strong> {entitydetail.entity.expirationDate}</li>\r\n                                            {/*<li className={classes.listItem}><strong>Tax ID:</strong> 09890890</li>*/}\r\n                                        </ul> </>:\r\n\r\n                                       <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <RoomIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        RA Address\r\n                                    </Typography>\r\n                                }\r\n                                subheader={\r\n                                    entitydetail ? entitydetail.registerAgent.name : ''\r\n                                }\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            <li className={classes.listItem}><PersonIcon\r\n                                                className={classes.adjustment}/>\r\n                                                <strong>{entitydetail.registerAgent.fileAs}</strong></li>\r\n                                            <li className={classes.listItem}><StreetviewIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.address}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><RoomIcon\r\n                                                className={classes.adjustment}/>{entitydetail.registerAgent.address2}\r\n                                            </li>\r\n                                            <li className={classes.listItem}><LocationCityIcon\r\n                                                className={classes.adjustment}/> {entitydetail.registerAgent.city}, {entitydetail.registerAgent.state} {entitydetail.registerAgent.zipcode}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </> :\r\n                                        <>\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                           <Skeleton />\r\n                                       </>\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        <FastForwardIcon/>\r\n                                    </Avatar>\r\n                                }\r\n                                title={\r\n                                    <Typography className={classes.baseColor} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Forwarding Address\r\n                                    </Typography>\r\n                                }\r\n                                // subheader=\"September 14, 2016\"\r\n                            />\r\n\r\n                            <CardContent>\r\n\r\n                                    {entitydetail ?\r\n                                        <>\r\n                                        <ul className={classes.companyinfo}>\r\n                                            {entitydetail.entity.shippingStreet ?\r\n                                                <li className={classes.listItem}><RoomIcon\r\n                                                    className={classes.adjustment}/>\r\n                                                    <strong>{entitydetail.entity.shippingStreet}, {entitydetail.entity.shippingCity}, {entitydetail.entity.shippingState} {entitydetail.entity.shippingCode} </strong>\r\n                                                </li> : ''}\r\n                                            <li className={classes.listItem}><MailIcon\r\n                                                className={classes.adjustment}/> {entitydetail.entity.email}\r\n                                            </li>\r\n                                        </ul>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                            <Skeleton />\r\n                                        </>\r\n\r\n                                    }\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container spacing={5}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ComplianceTaskList loading={componentLoading} tooltip={'Add New Contact'} data={taskData}\r\n                                            title={'Compliance Tasks'}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Attachment'}\r\n                                     redirect={true}\r\n                                     url={`/attachment/form/add/${attributes ? attributes.organization : ''}`} data={attachmentData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList action={true} loading={componentLoading} tooltip={'Add New Contact'}\r\n                                     redirect={true}\r\n                                     url={`/contact/form/add/${attributes ? attributes.organization : ''}`} data={contactData}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(SelfDetailedPage);\r\n\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const contactList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const createContact = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Contacts/create`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport Autocomplete from \"../entity/TestAutocomplete\";\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ContactTypeList, EntitytypesList, StateRegionList} from \"../api/enitity.crud\";\r\nimport {createContact} from \"../api/contact.crud\";\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport * as SmartyStreetsSDK from \"smartystreets-javascript-sdk\";\r\nimport utils from 'smartystreets-javascript-sdk-utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Lookup = SmartyStreetsSDK.usStreet.Lookup;\r\n\r\n\r\nconst smartyStreetsSharedCredentials = new SmartyStreetsSDK.core.SharedCredentials(process.env.REACT_APP_SMARTYSTREET_KEY);\r\nconst clientBuilder = new SmartyStreetsSDK.core.ClientBuilder(smartyStreetsSharedCredentials);\r\nlet client = clientBuilder.buildUsStreetApiClient();\r\n\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddContactForm = (props) => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n\r\n    const {attributes, addTitle} = useContext(UserContext);\r\n    addTitle('Add New Contact');\r\n\r\n    const [addressObject, setAddressObject] = React.useState([]);\r\n    const [addressValue, setAddressValue] = React.useState('');\r\n    const [addressReset, setAddressReset] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [contactType, setContactType] = React.useState([]);\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [StateRegion, setStateRegion] = React.useState([])\r\n    //form state\r\n\r\n\r\n    const [inputContactFirstName, setInputContactFirstName] = React.useState({value: '', error: ' '});\r\n    const [inputContactLastName, setInputLastName] = React.useState({value: '', error: ' '});\r\n    const [inputContactEmail, setInputNotificationEmail] = React.useState({value: '', error: ' '});\r\n    const [inputContactPhone, setInputNotificationPhone] = React.useState({value: '', error: ' '});\r\n    const [inputContactStreet, setInputNotificationAddress] = React.useState({value: '', error: ' '});\r\n    const [inputContactType, setInputNotificationContactType] = React.useState({value: '', error: ' '});\r\n    const [inputContactCity, setInputNotificationCity] = React.useState({value: '', error: ' '});\r\n    const [inputContactState, setInputNotificationState] = React.useState({value: '', error: ' '});\r\n    const [inputContactZipcode, setInputNotificationZip] = React.useState({value: '', error: ' '});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userAgree, setUserAgree] = React.useState(false);\r\n    const [isValidAddress, setIsValidAddress] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setLoading(false);\r\n        setUserAgree(false);\r\n        setOpen(false);\r\n    };\r\n\r\n    const iAgree = async (event) => {\r\n        Promise.resolve(setTimeout(() => {\r\n            setUserAgree(true);\r\n        }, 3000));\r\n        Promise.resolve(setOpen(false));\r\n        handleOnSubmit(event, true)\r\n\r\n    };\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (addressObject) {\r\n            if (typeof addressObject === 'object') {\r\n                setInputNotificationCity({...inputContactCity, error: ' ', value: addressObject.city})\r\n                setInputNotificationState({...inputContactState, error: ' ', value: addressObject.state})\r\n            }\r\n        }\r\n\r\n    }, [addressObject, addressValue])\r\n\r\n\r\n    React.useEffect(() => {\r\n        fetchDataforDropdownsContactTypeList();\r\n        fetchDataforDropdownsStateRegion();\r\n        localStorage.setItem('iAgree', false);\r\n    }, [])\r\n\r\n\r\n    const fetchDataforDropdownsContactTypeList = async () => {\r\n        var ContactTypeListLocal = await JSON.parse(localStorage.getItem(\"ContactTypeList\"));\r\n        if (ContactTypeListLocal) {\r\n            setContactType(ContactTypeListLocal);\r\n        } else {\r\n            const response = await ContactTypeList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"ContactTypeList\", JSON.stringify(response.data));\r\n            setContactType(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchDataforDropdownsStateRegion = async () => {\r\n        var StateRegionListLocal = await JSON.parse(localStorage.getItem(\"StateRegionList\"));\r\n        if (StateRegionListLocal) {\r\n            setStateRegion(StateRegionListLocal);\r\n        } else {\r\n            const response = await StateRegionList(attributes.organization, attributes.email);\r\n            localStorage.setItem(\"StateRegionList\", JSON.stringify(response.data));\r\n            setStateRegion(response.data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const addressObjectChangeHandler = (value) => {\r\n        setAddressObject(value);\r\n    }\r\n\r\n    const addressValueChangeHandler = async (value) => {\r\n        return Promise.resolve(setAddressValue(value));\r\n    }\r\n\r\n\r\n    const resetForm = async () => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setInputContactFirstName({error: ' ', value: ''})\r\n                setInputLastName({error: ' ', value: ''})\r\n                setInputNotificationEmail({error: ' ', value: ''})\r\n                setInputNotificationPhone({error: ' ', value: ''})\r\n                setInputNotificationAddress({error: ' ', value: ''})\r\n                setInputNotificationContactType({error: ' ', value: ''})\r\n                setInputNotificationCity({error: ' ', value: ''})\r\n                setInputNotificationState({error: ' ', value: ''})\r\n                setInputNotificationZip({error: ' ', value: ''});\r\n                setAddressObject('');\r\n                setAddressReset('reset')\r\n                setAddressValue('');\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOnSubmit = async (event, userResponse = false) => {\r\n\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setAddressReset('');\r\n        // if (userResponse === 'false') {\r\n        //     await addressCheck();\r\n        // }\r\n\r\n\r\n        var formsubmit = true;\r\n        if (inputContactZipcode.value) {\r\n            var zip = parseInt(inputContactZipcode.value);\r\n            if (typeof zip === 'number') {\r\n                if (zip.toString().length === 5) {\r\n                    formsubmit = true;\r\n                } else {\r\n                    setLoading(false);\r\n                    formsubmit = false;\r\n                    setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n                }\r\n            } else {\r\n                setLoading(false);\r\n                formsubmit = false;\r\n                setInputNotificationZip({...inputContactZipcode, error: \"Please enter 5 digits zip code\"})\r\n            }\r\n        }\r\n\r\n\r\n        if (formsubmit === true) {\r\n            if (userAgree === false && userResponse === false) {\r\n                if ((addressObject || addressObject.streetLine) && inputContactCity.value && inputContactState.value && inputContactZipcode.value !== '') {\r\n                    formsubmit = false;\r\n                    await addressCheck(event);\r\n\r\n                }\r\n            }\r\n        }\r\n        if (formsubmit === true) {\r\n            contactsCreate(event, userResponse);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const contactsCreate = async (event, valid = null) => {\r\n\r\n\r\n        let formData = new FormData();\r\n        setInputContactFirstName({...inputContactFirstName, error: ' '})\r\n        setInputLastName({...inputContactLastName, error: ' '})\r\n        setInputNotificationEmail({...inputContactEmail, error: ' '})\r\n        setInputNotificationPhone({...inputContactPhone, error: ' '})\r\n        setInputNotificationAddress({...inputContactStreet, error: ' '})\r\n        setInputNotificationContactType({...inputContactType, error: ' '})\r\n        setInputNotificationCity({...inputContactCity, error: ' '})\r\n        setInputNotificationState({...inputContactState, error: ' '})\r\n        setInputNotificationZip({...inputContactZipcode, error: ' '})\r\n\r\n\r\n        formData.append('entityId', props.match.params.id)\r\n        formData.append('inputContactFirstName', inputContactFirstName.value)\r\n        formData.append('inputContactLastName', inputContactLastName.value)\r\n        formData.append('inputContactEmail', inputContactEmail.value)\r\n        formData.append('inputContactPhone', inputContactPhone.value)\r\n        formData.append('inputContactStreet', addressObject.streetLine)\r\n        if (addressObject.streetLine) {\r\n            formData.append('inputContactStreet', addressObject.streetLine)\r\n        } else {\r\n            formData.append('inputContactStreet', addressObject)\r\n        }\r\n        formData.append('inputContactType', inputContactType.value)\r\n\r\n        if (inputContactCity.value) {\r\n            formData.append('inputContactCity', inputContactCity.value);\r\n        } else {\r\n            formData.append('inputContactCity', '');\r\n        }\r\n        if (inputContactState.value) {\r\n            formData.append('inputContactState', inputContactState.value);\r\n        } else {\r\n            formData.append('inputContactState', '');\r\n        }\r\n\r\n        formData.append('inputContactZipcode', inputContactZipcode.value)\r\n\r\n\r\n        formData.append('inputAddressIsValid', valid ? valid : isValidAddress)\r\n        formData.append('acceptInvalidAddress', userAgree)\r\n\r\n        const response = await createContact(formData);\r\n        if (response.field_error) {\r\n\r\n            setLoading(false);\r\n            setIsValidAddress(false);\r\n            setUserAgree(false);\r\n            Object.keys(response.field_error).forEach((key, index) => {\r\n\r\n                if (key === 'inputContactFirstName') {\r\n                    setInputContactFirstName({...inputContactFirstName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactLastName') {\r\n                    setInputLastName({...inputContactLastName, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactEmail') {\r\n                    setInputNotificationEmail({...inputContactEmail, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactPhone') {\r\n                    setInputNotificationPhone({...inputContactPhone, error: response.field_error[key]})\r\n                }\r\n\r\n                if (key === 'inputContactStreet') {\r\n                    setInputNotificationAddress({...inputContactStreet, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactType') {\r\n                    setInputNotificationContactType({...inputContactType, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactCity') {\r\n                    setInputNotificationCity({...inputContactCity, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactState') {\r\n                    setInputNotificationState({...inputContactState, error: response.field_error[key]})\r\n                }\r\n                if (key === 'inputContactZipcode') {\r\n                    setInputNotificationZip({...inputContactZipcode, error: response.field_error[key]})\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n        if (response.data) {\r\n            if (response.data.type === 'ok') {\r\n\r\n                new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve();\r\n                        setUserAgree(false);\r\n                        setLoading(false);\r\n                        setSuccessMessage(response.data.results);\r\n                        resetForm();\r\n                        window.scrollTo(0, 0)\r\n                    }, 600);\r\n                });\r\n\r\n            }\r\n\r\n            if (response.data) {\r\n                if (response.data.type === 'error') {\r\n                    await updateStates(response.data.results);\r\n\r\n                    // console.log(addressObject);\r\n                }\r\n            }\r\n        }\r\n\r\n        //\r\n        // for (var pair of formData.entries()) {\r\n        //     console.log(pair[0] + ', ' + pair[1]);\r\n        // }\r\n\r\n\r\n        //\r\n        // setTimeout(() => {\r\n        //     setLoading(false);\r\n        //     history.goBack();\r\n        // }, 4000)\r\n        // setLoading(true);\r\n\r\n\r\n    }\r\n\r\n\r\n    const updateStates = async (data) => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n                setUserAgree(false);\r\n                setLoading(false);\r\n                setErrorMessage(data);\r\n                window.scrollTo(0, 0)\r\n            }, 600);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    const addressCheck = async (event) => {\r\n        var valid;\r\n        let lookup1 = new Lookup();\r\n        lookup1.street = addressObject.streetLine ? addressObject.streetLine : addressObject;\r\n        lookup1.city = inputContactCity.value;\r\n        lookup1.state = inputContactState.value;\r\n        lookup1.zipCode = inputContactZipcode.value;\r\n        const responseFromSmarty = client.send(lookup1).then(response => {\r\n            valid = utils.isValid(response.lookups[0]);\r\n            setIsValidAddress(valid);\r\n            // response.lookups.map(lookup => console.log(lookup.result));\r\n\r\n            // // Is lookup1 valid?\r\n            // console.log('Is lookup1 valid?', utils.isValid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 invalid?\r\n            // console.log('Is lookup1 invalid?', utils.isInvalid(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 ambiguous?\r\n            // console.log('// Is lookup1 ambiguous?', utils.isAmbiguous(response.lookups[0]));\r\n            //\r\n            // // Is lookup1 missing a secondary address?\r\n            // console.log('// Is lookup1 missing a secondary address?', utils.isMissingSecondary(response.lookups[0]));\r\n            if (valid === false) {\r\n                setOpen(true);\r\n            }\r\n\r\n            if (valid === true) {\r\n                contactsCreate(event, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Contact</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"We are unable to validate your address\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Please make sure that you have entered it correctly.\r\n                        If you proceed and we are unable to validate your address it may cause delays\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={(event) => iAgree(event)} color=\"primary\" autoFocus>\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                            {successMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    variant=\"success\"\r\n                                    message={successMessage}\r\n                                />\r\n                            ) : ''}\r\n\r\n\r\n                            {errorMessage !== ' ' ? (\r\n                                <MySnackbarContentWrapper\r\n                                    variant=\"error\"\r\n                                    message={errorMessage}\r\n                                />\r\n                            ) : ''}\r\n                            <Grid container spacing={0}>\r\n                                <form id={\"create-course-form\"} className={classes.container} onSubmit={handleOnSubmit}\r\n                                      noValidate\r\n                                      autoComplete=\"off\">\r\n                                    <FormGroup row>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                error={inputContactFirstName.error !== ' '}\r\n                                                label=\"First Name\"\r\n                                                value={inputContactFirstName.value}\r\n                                                onChange={e => setInputContactFirstName({\r\n                                                    ...inputContactFirstName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactFirstName',\r\n                                                    id: 'inputContactFirstName',\r\n                                                }}\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactFirstName.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                value={inputContactLastName.value}\r\n                                                onChange={e => setInputLastName({\r\n                                                    ...inputContactLastName,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactLastName',\r\n                                                    id: 'inputContactLastName',\r\n                                                }}\r\n                                                error={inputContactLastName.error !== ' '}\r\n                                                label=\"Last Name\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                                helperText={inputContactLastName.error}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n\r\n                                                type=\"email\"\r\n                                                value={inputContactEmail.value}\r\n                                                onChange={e => setInputNotificationEmail({\r\n                                                    ...inputContactEmail,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactEmail',\r\n                                                    id: 'inputContactEmail',\r\n                                                }}\r\n                                                error={inputContactEmail.error !== ' '}\r\n                                                helperText={inputContactEmail.error}\r\n                                                label=\"Email\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                value={inputContactPhone.value}\r\n                                                onChange={e => setInputNotificationPhone({\r\n                                                    ...inputContactPhone,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactPhone',\r\n                                                    id: 'inputContactPhone',\r\n                                                }}\r\n                                                error={inputContactPhone.error !== ' '}\r\n                                                helperText={inputContactPhone.error}\r\n                                                label=\"Phone\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className={'col-md-12'}>\r\n                                            <Autocomplete\r\n                                                disabled={loading}\r\n                                                required\r\n                                                width={''}\r\n                                                addressObject={addressObjectChangeHandler}\r\n                                                addressValue={addressValueChangeHandler}\r\n                                                reset={addressReset}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactStreet',\r\n                                                    id: 'inputContactStreet',\r\n                                                }}\r\n                                                error={inputContactStreet.error !== ' '}\r\n                                                helperText={inputContactStreet.error}\r\n                                                className={clsx(classes.dense)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactType.error !== ' '}>\r\n                                                <InputLabel htmlFor=\"age-native-simple\">Contact Type</InputLabel>\r\n                                                <Select\r\n                                                    disabled={loading}\r\n                                                    native\r\n                                                    value={inputContactType.value}\r\n                                                    onChange={e => setInputNotificationContactType({\r\n                                                        ...inputContactType,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactType',\r\n                                                        id: 'inputContactType',\r\n                                                    }}\r\n                                                    error={inputContactType.error !== ' '}\r\n                                                    helperText={inputContactType.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {contactType?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactType.error}</FormHelperText>\r\n\r\n                                            </FormControl>\r\n                                        </div>\r\n\r\n\r\n                                        <div className={clsx(classes.textFieldCity, 'col-md-4')}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                value={inputContactCity.value}\r\n                                                onChange={e => setInputNotificationCity({\r\n                                                    ...inputContactCity,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactCity',\r\n                                                    id: 'inputContactCity',\r\n                                                }}\r\n                                                error={inputContactCity.error !== ' '}\r\n                                                helperText={inputContactCity.error}\r\n                                                label=\"City\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className={'col-md-4'}>\r\n                                            <FormControl className={clsx(classes.selectField)}\r\n                                                         error={inputContactState.error !== ' '}>\r\n                                                <InputLabel\r\n                                                    htmlFor=\"state-native-simple\">State/Region/Province</InputLabel>\r\n                                                <Select\r\n                                                    disabled={loading}\r\n                                                    required\r\n                                                    native\r\n                                                    value={inputContactState.value}\r\n                                                    onChange={e => setInputNotificationState({\r\n                                                        ...inputContactState,\r\n                                                        value: e.target.value\r\n                                                    })}\r\n                                                    inputProps={{\r\n                                                        name: 'inputContactState',\r\n                                                        id: 'inputContactState',\r\n                                                    }}\r\n                                                    error={inputContactState.error !== ' '}\r\n                                                    helperText={inputContactState.error}\r\n                                                >\r\n                                                    <option value=\"\"/>\r\n                                                    {StateRegion?.map((anObjectMapped, index) => <option key={index}\r\n                                                                                                         value={anObjectMapped.code}>{anObjectMapped.name}</option>)}\r\n\r\n                                                </Select>\r\n                                                <FormHelperText>{inputContactState.error}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={'col-md-6'}>\r\n                                            <TextField\r\n                                                disabled={loading}\r\n                                                required\r\n                                                type=\"text\"\r\n                                                value={inputContactZipcode.value}\r\n                                                onChange={e => setInputNotificationZip({\r\n                                                    ...inputContactZipcode,\r\n                                                    value: e.target.value\r\n                                                })}\r\n                                                inputProps={{\r\n                                                    name: 'inputContactZipcode',\r\n                                                    id: 'inputContactZipcode',\r\n                                                }}\r\n                                                error={inputContactZipcode.error !== ' '}\r\n                                                helperText={inputContactZipcode.error}\r\n                                                label=\"Postal / Zip Code\"\r\n                                                className={clsx(classes.textFieldtwofield, classes.dense)}\r\n                                                margin=\"dense\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={'col-md-12'}>\r\n                                            <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                                {loading ? (\r\n                                                        <div className={clsx(classes.loader)}>\r\n                                                            <FacebookProgress/>\r\n                                                        </div>)\r\n                                                    : null}\r\n                                                {/*<input className={clsx('btn btn-primary', classes.restButton)}*/}\r\n                                                {/*       type=\"reset\" onClick={(e) => {resetForm()}} value=\"Reset\"/>*/}\r\n\r\n                                                <input disabled={loading}\r\n                                                       className={clsx('btn btn-primary', classes.restButton)}\r\n                                                       type=\"submit\" value=\"Add new Contact\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </form>\r\n                            </Grid>\r\n\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(AddContactForm);\r\n","\r\nconst HOST = process.env.REACT_APP_SERVER_API_URL;\r\n\r\n\r\nexport const ENTITY = HOST;\r\n\r\n\r\nexport const AttachmentsList = async (zoho_id) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Documents/list/?eid=${zoho_id}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n\r\n            }\r\n        });\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n\r\n\r\nexport const attachFiles = async (data) => {\r\n    const okta = await JSON.parse(localStorage.getItem('okta-token-storage'));\r\n    if(okta) {\r\n        const response = await fetch(`${ENTITY}/Attachment_api/attachment`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': okta.accessToken.accessToken,\r\n            },\r\n            body: data\r\n        })\r\n        return Promise.resolve(response.json());\r\n    }\r\n}\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {AttachmentsList} from \"../api/attachment\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Attachments = () => {\r\n    const {loading, attributes, addError, errorList, role, addTitle} = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [attachmentList, setAttachmentList] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Attachments');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await AttachmentsList(attributes.organization);\r\n            await setAttachmentList(response.data.documents);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Attachment API.');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const dummyData = {\r\n        columns: [\r\n            {\r\n                title: 'File Name',\r\n                editable: 'never',\r\n                render: rowData => <a target=\"_blank\"\r\n                                      href={`${process.env.REACT_APP_SERVER_API_URL}download/${rowData.fid}?token=${rowData.token}&name=${rowData.name}`}>\r\n                    <PictureAsPdfIcon/> {rowData.name}\r\n                </a>\r\n            },\r\n            {title: 'Date', field: 'created'},\r\n            {title: 'Size', field: 'fileSize'},\r\n        ],\r\n        data: attachmentList,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Attachment'} data={dummyData}\r\n                                     title={'Attachments'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Attachments);\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport {UserContext} from \"../context/UserContext\";\r\nimport {contactList} from \"../api/contact.crud\";\r\nimport ContactList from \"../entity/ContactList\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n\r\n    errorMessage: {\r\n        marginBottom: '5px'\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\n\r\n\r\nconst Contacts = () => {\r\n    const {loading, attributes, addError, errorList, role, addTitle, removeError} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [listcontacts, setListcontacts] = React.useState([])\r\n    const [componentLoading, setComponentLoading] = React.useState(true);\r\n    useEffect(() => {\r\n        if (loading === true) {\r\n            addTitle('Contacts');\r\n            fetchAttachmentData();\r\n        }\r\n    }, [loading]);\r\n\r\n    const fetchAttachmentData = async () => {\r\n        try {\r\n            const response = await contactList(attributes.organization);\r\n            await setListcontacts(response.data.contacts);\r\n            setComponentLoading(false);\r\n\r\n        } catch (e) {\r\n            addError('Something went wrong with the Contact API.');\r\n        }\r\n    }\r\n\r\n    const dummyDataa = {\r\n        columns: [\r\n            {title: 'Name', field: 'name'},\r\n            {title: 'email', field: 'email'},\r\n            {title: 'Phone', field: 'phone'},\r\n        ],\r\n        data: listcontacts,\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {errorList?.map((value, index) => (\r\n                    <MySnackbarContentWrapper className={classes.errorMessage} spacing={1} index={index} variant=\"error\"\r\n                                              message={value} onClose={(e) => removeError(index)}/>\r\n                ))}\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <ContactList loading={componentLoading} tooltip={'Add Contacts'} data={dummyDataa}\r\n                                     title={'Contacts'}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withOktaAuth(Contacts);\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CustomFileInput from \"reactstrap/es/CustomFileInput\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {withOktaAuth} from '@okta/okta-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {lorexFileUpload} from \"../api/enitity.crud\";\r\nimport {attachFiles} from \"../api/attachment\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"../layout/Layout\";\r\nimport {UserContext} from \"../context/UserContext\";\r\n\r\nconst useStylesFacebook = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n    top: {\r\n        color: '#eef3fd',\r\n    },\r\n    bottom: {\r\n        color: '#6798e5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    adjustment: {\r\n        marginRight: '5px',\r\n    },\r\n    companyinfo: {\r\n        listStyle: 'none',\r\n        padding: '0px',\r\n        minHeight: '100px'\r\n\r\n    },\r\n    listItem: {\r\n        marginBottom: '5px'\r\n    },\r\n    textField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldOther: {\r\n        width: '100%',\r\n    },\r\n\r\n    textFieldCity: {\r\n\r\n        marginTop: 3,\r\n    },\r\n\r\n\r\n    textFieldtwofield: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n\r\n\r\n    selectField: {\r\n// marginLeft: theme.spacing(1),\r\n// marginRight: theme.spacing(1),\r\n        width: '100%',\r\n        marginTop: 16,\r\n    },\r\n    dense: {\r\n        marginTop: 16,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    checkbox: {\r\n        marginTop: 30\r\n    },\r\n\r\n    fileUploading: {\r\n        zIndex: 0,\r\n        marginTop: 22,\r\n        width: '100%',\r\n    },\r\n\r\n    submitButton: {\r\n        marginTop: 15,\r\n        float: 'right',\r\n        display: 'inline-flex'\r\n    },\r\n\r\n    restButton: {\r\n\r\n        marginLeft: 20,\r\n    },\r\n\r\n    loader: {\r\n        marginTop: 7,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    formStyle: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        paddingLeft:10,\r\n        paddingRight:10\r\n    },\r\n    breadcrumbsDiv: {\r\n        marginBottom: 30\r\n    },\r\n    breadcrumbsInner: {\r\n        padding: 10\r\n    },\r\n\r\n    baseColor: {\r\n        color: '#48465b'\r\n    }\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n\r\n            elevation={6} variant=\"filled\"\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                        {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n}\r\n\r\nconst AddAttachmentForm = (props) => {\r\n\r\n    const {addTitle, addError} = useContext(UserContext);\r\n    addTitle('Add New Attachment');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    // const [error, setError] = React.useState(false);\r\n    const [inputFileName, setInputFileName] = React.useState({value: '', error: ' '});\r\n    const [inputFiling, setInputFiling] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [inputFileSize, setInputFileSize] = React.useState({value: '', error: ' ', success: ' '});\r\n    const [successMessage, setSuccessMessage] = React.useState(' ');\r\n    const [errorMessage, setErrorMessage] = React.useState(' ');\r\n\r\n    function FacebookProgress(props) {\r\n        const classes = useStylesFacebook();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CircularProgress\r\n\r\n                    variant=\"determinate\"\r\n                    value={100}\r\n                    className={classes.top}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n                <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    className={classes.bottom}\r\n                    size={24}\r\n                    thickness={4}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // const handleClose = (event, reason) => {\r\n    //     setError(false);\r\n    // }\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n\r\n// console.log(inputFormationDate.value);\r\n\r\n// Display the key/value pairs\r\n\r\n        formData.append('entityId', props.match.params.id)\r\n        formData.append('inputFileId', inputFiling.value);\r\n        formData.append('inputFileName', inputFileName.value);\r\n        formData.append('inputFileSize', inputFileSize.value);\r\n\r\n        try {\r\n            const response = await attachFiles(formData);\r\n            if (response) {\r\n                if (response.status === true) {\r\n                    setSuccessMessage(response.message);\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            addError('Something went wrong with Attchemnt API.');\r\n            setErrorMessage('Something went wrong with Attchemnt API.');\r\n        }\r\n\r\n        // if(response.status == true) {\r\n        //     setTimeout(() => {\r\n        //         history.goBack();\r\n        //     }, 4000)\r\n        // }\r\n\r\n    }\r\n\r\n    const fileChange = async (e) => {\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const filename = e.target.files[0].name;\r\n        const response = await lorexFileUpload(formData);\r\n        if (response.error === false) {\r\n            setInputFiling({...inputFiling, value: response.record_id, success: 'uploaded'});\r\n            setInputFileSize({...inputFileSize, value: response.file_size})\r\n            if (filename) {\r\n                setInputFileName({...inputFileName, value: filename});\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Layout>\r\n            <div className={classes.breadcrumbsDiv}>\r\n                <Paper className={classes.breadcrumbsInner} elevation={1}>\r\n                    <Typography className={classes.baseColor} color=\"inherit\" variant=\"h4\">Navigation</Typography>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n\r\n                        <Link color=\"inherit\" href=\"/\">\r\n                            <Typography color=\"textPrimary\">Dashboard</Typography>\r\n                        </Link>\r\n\r\n                        <Link color=\"inherit\" onClick={(e) => {\r\n                            history.goBack()\r\n                        }}>\r\n                            <Typography color=\"textPrimary\">Entity</Typography>\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Add Attachment</Typography>\r\n                    </Breadcrumbs>\r\n                </Paper>\r\n            </div>\r\n\r\n            <Paper className={classes.paper} elevation={3}>\r\n                {successMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        variant=\"success\"\r\n                        message={successMessage}\r\n                    />\r\n                ) : ''}\r\n\r\n\r\n                {errorMessage !== ' ' ? (\r\n                    <MySnackbarContentWrapper\r\n                        variant=\"error\"\r\n                        message={errorMessage}\r\n                    />\r\n                ) : ''}\r\n                <div className=\"row\">\r\n                    <form className={classes.formStyle} onSubmit={handleOnSubmit} noValidate\r\n                          autoComplete=\"off\">\r\n                        <FormGroup row>\r\n                            <div className={'col-md-6'}>\r\n                                <CustomFileInput\r\n                                    disabled={loading}\r\n                                    required\r\n                                    id=\"attachment\"\r\n                                    value={inputFiling.value.File}\r\n                                    onChange={e => fileChange(e)}\r\n                                    label=\"Attachment\"\r\n                                    className={clsx(classes.fileUploading, classes.dense)}\r\n                                    margin=\"dense\"\r\n                                    invalid={inputFiling.error !== ' '}\r\n                                    valid={inputFiling.success !== ' '}\r\n                                />\r\n                                <span>{inputFiling.success !== ' ' ? inputFiling.success : ' '}</span>\r\n                            </div>\r\n\r\n                            <div className={'col-md-12'}>\r\n                                <div className={clsx(classes.submitButton, 'custom-button-wrapper')}>\r\n                                    {loading ? (\r\n                                            <div className={clsx(classes.loader)}>\r\n                                                <FacebookProgress/>\r\n                                            </div>)\r\n                                        : null}\r\n\r\n                                    <input disabled={loading}\r\n                                           className={clsx('btn btn-primary', classes.restButton)}\r\n                                           type=\"submit\" value=\"Add attachment\"/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </div>\r\n\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default withOktaAuth(AddAttachmentForm);\r\n","import React, {Component} from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {Security, SecureRoute, LoginCallback} from '@okta/okta-react';\r\nimport Home from '../okta/Home';\r\nimport Login from '../okta/Login';\r\nimport AddEntity from \"../entity/AddEntity\";\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport UserContextProvider from '../context/UserContext';\r\nimport EntityDetailedPage from '../entity/EntityDetailedPage';\r\nimport SelfDetailedPage from '../entity/SelfDetailedPage';\r\nimport AddContactForm from \"../contact/AddContactForm\";\r\nimport Attachments from \"../attachment/Attachments\";\r\nimport Contacts from \"../contact/Contacts\";\r\nimport AddAttachmentForm from \"../attachment/AddAttachmentForm\";\r\n\r\nexport default withRouter(class AppWithRouterAccess extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onAuthRequired = this.onAuthRequired.bind(this);\r\n    }\r\n\r\n    onAuthRequired() {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Security\r\n                issuer={process.env.REACT_APP_OKTA_BASE_URL + 'oauth2/default'}\r\n                clientId={process.env.REACT_APP_OKTA_CLIENT_ID}\r\n                redirectUri={window.location.origin + '/implicit/callback/'}\r\n                onAuthRequired={this.onAuthRequired}\r\n                pkce={true}>\r\n                <UserContextProvider>\r\n\r\n                    <SecureRoute exact={true} path='/' component={Dashboard}/>\r\n                    <SecureRoute exact={true} path='/home' component={Home}/>\r\n                    <SecureRoute exact={true} path='/entity' component={SelfDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/:id' component={EntityDetailedPage}/>\r\n                    <SecureRoute exact={true} path='/entity/new/add' component={AddEntity}/>\r\n                    <SecureRoute exact={true} path='/contact/form/add/:id'\r\n                                 component={AddContactForm}/>\r\n                    <SecureRoute exact={true} path='/attachments' component={Attachments}/>\r\n                    <SecureRoute exact={true} path='/contacts' component={Contacts}/>\r\n                    <SecureRoute exact path=\"/attachment/form/add/:id\" component={AddAttachmentForm}/>\r\n                </UserContextProvider>\r\n                <Route exact={true} path='/login'\r\n                       render={() => <Login baseUrl={process.env.REACT_APP_OKTA_BASE_URL}/>}/>\r\n                <Route path='/implicit/callback' component={LoginCallback}/>\r\n            </Security>\r\n        );\r\n    }\r\n});\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppWithRouterAccess from './components/routes/AppWithRouterAccess';\nimport './App.css'\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AppWithRouterAccess/>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 521;"],"sourceRoot":""}